{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u7b80\u4ecb","text":"<p>\"\u53ea\u6709\u77ed\u547d\u9b3c\u624d\u9700\u8981\u5728\u5e7c\u513f\u56ed\u91cc\u5c31\u5b66\u4f1a\u4e00\u5207\"---- I'm a Dysfunctions;You're Dysfunctional by Wendy Kaminer</p> <ul> <li>\u672c\u7b14\u8bb0\u662f\u6211\u5728\u5b66\u4e60\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u8fc7\u7a0b\u4e2d, \u6240\u8bb0\u5f55\u7684\u6211\u8ba4\u4e3a\u7684 \u5173\u952e\u70b9</li> <li>\u8fd9\u610f\u5473\u7740<ul> <li>\u6bcf\u4e00\u7bc7\u7b14\u8bb0\u65e0\u6cd5\u6784\u6210\u5b8c\u6574\u7684\u77e5\u8bc6\u4f53\u7cfb, \u65e0\u6cd5\u4f5c\u4e3a\u67e5\u8be2\u624b\u518c</li> <li>\u6bcf\u4e00\u7bc7\u7b14\u8bb0\u4f1a\u4ee5\u5c3d\u91cf\u7cbe\u7b80\u7684\u65b9\u5f0f\u6784\u5efa\u5b66\u4e60\u5185\u5bb9\u7684\u6838\u5fc3\u6982\u5ff5\u7f51\u7edc, \u628a\u63e1\u5b66\u4e60\u7684 \"\u5145\u5206\u5fc5\u8981\u6027\" (\u539f\u56e0\u4e0e\u76ee\u7684)</li> <li>\u6bcf\u4e00\u7bc7\u7b14\u8bb0\u4f1a\u4ecb\u7ecd\u5b66\u4e60\u8d44\u6599 (\u5185\u5bb9\u6765\u6e90), \u5e76\u505a\u51fa\u8bc4\u4ef7, \u6ce8\u610f, \u63a8\u8350\u7a0b\u5ea6 <code>(1~5)</code> \u662f\u6309 \"\u6027\u4ef7\u6bd4\" \u7efc\u5408\u6765\u770b\u7684, \u4e0d\u53ef\u5355\u7ef4\u5ea6\u8003\u91cf</li> </ul> </li> <li>\u6b22\u8fce\u5404\u4f4d\u4f5c\u4e3a\u9009\u62e9\u4e66\u7c4d\u4e0e\u8bfe\u7a0b\u7684\u53c2\u8003</li> </ul>"},{"location":"#_2","title":"\u5185\u5bb9\u6765\u6e90\u4e0e\u7b14\u8bb0\u683c\u5f0f","text":"<ul> <li>\u7b14\u8bb0\u4e0d\u662f\u539f\u8bdd\u7684\u6458\u6284, \u4e5f\u4e0d\u4f1a\u51c6\u786e (\u751a\u81f3\u5305\u62ec\u6570\u5b66\u5185\u5bb9), \u4f46\u4f1a\u4fdd\u8bc1\u4e00\u5b9a\u7a0b\u5ea6\u7684 \u6b63\u786e\u6027</li> <li>\u7b14\u8bb0\u4ee5 Markdown \u6587\u6863\u5f62\u5f0f\u5448\u73b0, \u5728\u9075\u5faa CommonMark \u89c4\u8303\u7684\u57fa\u7840\u4e0a<ul> <li>\u4e0d\u4f7f\u7528\u53e5\u8bdd / \u4e66\u540d\u53f7 \u7b49\u7b26\u53f7</li> <li>\u4e0d\u4f7f\u7528\u5168\u89d2\u7b26\u53f7</li> <li>\u51cf\u5c11\u4f7f\u7528\u8f6c\u4e49\u5b57\u7b26</li> <li>\u4e0d\u4f7f\u7528\u6709\u5e8f\u5217\u8868</li> <li>\u51cf\u5c11\u540c\u7ea7\u5217\u8868\u7684\u6570\u91cf</li> <li>\u5c3d\u91cf\u5c0a\u91cd\u4e13\u6709\u540d\u8bcd\u7684\u539f\u6709\u683c\u5f0f</li> </ul> </li> </ul>"},{"location":"#_3","title":"\u76ee\u5f55","text":""},{"location":"#_4","title":"\u8ba1\u7b97\u673a\u57fa\u7840","text":"<p>\"\u6709\u65f6\u5019, \u90a3\u4e9b\u8ba9\u6211\u4eec\u611f\u5230\u5bb3\u6015\u7684\u4e8b\u60c5, \u5176\u5b9e\u53ea\u662f\u56e0\u4e3a\u6211\u4eec\u5bf9\u5b83\u4eec\u8fd8\u4e0d\u591f\u4e86\u89e3\" ---- Alan Turing</p>"},{"location":"#_5","title":"\u7406\u8bba\u57fa\u7840","text":"<p>\"\u4e00\u4e2a\u6709\u7eb8, \u7b14, \u6a61\u76ae\u64e6\u5e76\u4e14\u575a\u6301\u4e25\u683c\u7684\u884c\u4e3a\u51c6\u5219\u7684\u4eba, \u5b9e\u8d28\u4e0a\u5c31\u662f\u4e00\u53f0\u901a\u7528\u56fe\u7075\u673a\" ---- Alan Turing</p> <ul> <li>\u5fae\u79ef\u5206</li> <li>\u6570\u7406\u903b\u8f91</li> <li>\u7ebf\u6027\u4ee3\u6570</li> <li>\u62bd\u8c61\u4ee3\u6570</li> <li>\u521d\u7b49\u6570\u8bba</li> <li>\u7ec4\u5408\u6570\u5b66</li> <li>\u96c6\u5408\u8bba</li> <li>\u56fe\u8bba</li> <li>\u6982\u7387\u8bba</li> <li>\u6570\u5b66\u589e\u8865</li> <li>\u4fe1\u606f\u8bba</li> <li>\u7535\u8def\u5206\u6790</li> <li>\u6a21\u62df\u7535\u5b50\u6280\u672f</li> <li>\u6570\u5b57\u7535\u5b50\u6280\u672f</li> <li>\u6570\u5b57\u8bbe\u8ba1</li> <li>\u8ba1\u7b97\u7406\u8bba</li> <li>\u7f16\u8bd1\u539f\u7406</li> <li>\u8ba1\u7b97\u673a\u7a0b\u5e8f\u7684\u6784\u9020\u548c\u89e3\u91ca</li> </ul>"},{"location":"#_6","title":"\u5de5\u5177","text":"<p>\"\u8f6f\u4ef6\u6b63\u5728\u5403\u6389\u4e16\u754c\" ---- Bill Gates</p> <ul> <li>\u5feb\u6377\u952e\u5907\u5fd8\u5f55</li> <li>Markdown</li> <li>\u57fa\u672c\u56fe\u5f62\u5f00\u53d1\u73af\u5883\u914d\u7f6e</li> <li>Git \u57fa\u672c\u4f7f\u7528</li> <li>Linux \u57fa\u7840</li> <li>\u6807\u8bb0\u8bed\u8a00</li> <li>Shell \u57fa\u7840</li> <li>Shell \u6587\u672c\u5904\u7406</li> <li>Linux \u7cfb\u7edf\u4e0e\u7f51\u7edc\u7ba1\u7406</li> <li>Shell \u7f16\u7a0b</li> <li>Vim \u57fa\u7840</li> <li>Emacs \u57fa\u7840</li> <li>\u7ec8\u7aef\u5f00\u53d1\u73af\u5883\u914d\u7f6e</li> <li>SSH \u57fa\u7840</li> <li>Tex \u57fa\u7840</li> <li>Nginx</li> <li>\u524d\u7aef\u5f00\u53d1\u5e38\u8bc6</li> <li>\u5bb9\u5668\u5e38\u8bc6</li> <li>WEB \u5f00\u53d1\u5e38\u8bc6</li> <li>AI \u5de5\u5177</li> </ul>"},{"location":"#c","title":"C \u8bed\u8a00","text":"<p>\"C \u8bed\u8a00\u7684\u8bbe\u8ba1\u54f2\u5b66\u662f\u4fe1\u4efb\u7a0b\u5e8f\u5458\" ---- Dennis Ritchie</p> <ul> <li>CPrimePlus</li> <li>C \u548c\u6307\u9488</li> <li>C \u7f3a\u9677\u4e0e\u9677\u9631</li> <li>C \u4e13\u5bb6\u7f16\u7a0b</li> <li>C \u8bed\u8a00\u91cd\u70b9\u603b\u7ed3</li> </ul>"},{"location":"#c_1","title":"C++ \u8bed\u8a00","text":"<p>\"C++ \u662f\u6211\u6700\u559c\u6b22\u7684\u5783\u573e\u56de\u6536\u8bed\u8a00, \u56e0\u4e3a\u5b83\u4ea7\u751f\u7684\u5783\u573e\u6700\u5c11\" ---- Bjarne Stroustrup</p> <ul> <li>C++Prime</li> <li>EffectiveC++</li> <li>MoreEffectiveC++</li> <li>EffectiveModernC++</li> <li>EffectiveSTL</li> <li>\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b</li> <li>\u6df1\u5ea6\u63a2\u7d22 C++ \u5bf9\u8c61\u6a21\u578b</li> <li>\u73b0\u4ee3 C++ \u8bed\u8a00\u6838\u5fc3\u7279\u6027\u89e3\u6790</li> <li>STL \u6e90\u7801\u5256\u6790</li> <li>C++ \u6027\u80fd\u4f18\u5316\u6307\u5357</li> <li>C++ \u6807\u51c6\u5e93</li> <li>Boost \u5e93</li> <li>QT \u6846\u67b6</li> <li>C++ \u5de5\u5177</li> </ul>"},{"location":"#_7","title":"\u7b97\u6cd5","text":"<p>\"\u7f16\u7a0b\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u827a\u672f, \u56e0\u4e3a\u5b83\u9700\u8981\u521b\u9020\u529b\u548c\u76f4\u89c9\" ---- John von Neumann</p> <ul> <li>\u5927\u8bdd\u6570\u636e\u7ed3\u6784</li> <li>\u7b97\u6cd5\u8bbe\u8ba1\u4e0e\u5206\u6790</li> <li>\u6570\u503c\u5206\u6790</li> <li>\u6700\u4f18\u5316\u7b97\u6cd5</li> <li>\u7b97\u6cd5\u7b2c\u56db\u7248</li> <li>\u7b97\u6cd5\u5bfc\u8bba</li> <li>\u7b97\u6cd5\u8865\u5145</li> <li>\u4ee3\u7801\u968f\u60f3\u5f55</li> <li>\u5251\u6307 Offer</li> <li>\u7f16\u7a0b\u73e0\u7391</li> <li>\u7f16\u7a0b\u73e0\u7391\u7eed</li> <li>\u7f16\u7a0b\u4e4b\u7f8e</li> <li>\u7a0b\u5e8f\u5458\u9762\u8bd5\u91d1\u5178</li> <li>\u529b\u6263\u9898\u89e3</li> </ul>"},{"location":"#_8","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u4e0e\u7ec4\u6210","text":"<ul> <li>\u6c47\u7f16\u8bed\u8a00 (\u738b\u723d.md)</li> <li>\u7f16\u7801</li> <li>\u6df1\u5165\u7406\u89e3\u8ba1\u7b97\u673a\u7cfb\u7edf</li> <li>\u8ba1\u7b97\u673a\u7ec4\u6210\u4e0e\u8bbe\u8ba1</li> <li>LLVM</li> <li>MMIX</li> </ul>"},{"location":"#_9","title":"\u64cd\u4f5c\u7cfb\u7edf","text":"<p>\"Linux \u5185\u6838\u662f\u4e00\u5ea7\u5927\u6559\u5802, \u800c\u4e0d\u662f\u4e00\u4e2a\u96c6\u5e02\" ---- Linus Torvalds</p> <ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u5bfc\u8bba</li> <li>Linux \u5185\u6838\u8bbe\u8ba1\u4e0e\u5b9e\u73b0</li> <li>\u6df1\u5165\u7406\u89e3 Linux \u5185\u6838</li> </ul>"},{"location":"#_10","title":"\u6df1\u5165\u65b9\u5411","text":"<p>\"\u8ba1\u7b97\u673a\u79d1\u5b66\u4e2d\u7684\u6240\u6709\u95ee\u9898\u90fd\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u4e00\u4e2a\u95f4\u63a5\u5c42\u6765\u89e3\u51b3\" ---- David Wheeler</p>"},{"location":"#_11","title":"\u5e76\u53d1\u7f16\u7a0b","text":"<p>\"\u5e76\u884c\u662f\u672a\u6765, \u5e76\u53d1\u662f\u8fc7\u53bb\" ---- Doug Lea</p> <ul> <li>C++ \u5e76\u53d1\u7f16\u7a0b</li> </ul>"},{"location":"#_12","title":"\u4f53\u7cfb\u7ed3\u6784","text":"<p>\"\u786c\u4ef6 \u8ba1\u7b97\u673a\u7cfb\u7edf\u4e0e\u7ec4\u6210\u4e2d\u53ef\u88ab\u8e22\u7684\u90e8\u5206\" ---- Jeff Pesis</p> <ul> <li>\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784</li> </ul>"},{"location":"#_13","title":"\u4ee3\u7801\u98ce\u683c\u4e0e\u7f16\u7a0b\u6280\u672f","text":"<p>\"\u8c03\u8bd5\u7684\u96be\u5ea6\u662f\u6700\u521d\u7f16\u5199\u4ee3\u7801\u7684\u4e24\u500d \u56e0\u6b64, \u5982\u679c\u60a8\u5c3d\u53ef\u80fd\u5de7\u5999\u5730\u7f16\u5199\u4ee3\u7801, \u90a3\u4e48\u6839\u636e\u5b9a\u4e49, \u60a8\u8fd8\u4e0d\u591f\u806a\u660e, \u65e0\u6cd5\u5bf9\u5176\u8fdb\u884c\u8c03\u8bd5\" ---- Brian Kernighan</p> <ul> <li>\u8f6f\u4ef6\u5206\u6790</li> <li>\u5927\u8bdd\u8bbe\u8ba1\u6a21\u5f0f</li> <li>HeadFirst \u9762\u5411\u5bf9\u8c61\u5206\u6790\u4e0e\u8bbe\u8ba1</li> <li>CleanCode</li> <li>\u8bbe\u8ba1\u6a21\u5f0f</li> <li>\u91cd\u6784</li> <li>\u5355\u5143\u6d4b\u8bd5\u7684\u827a\u672f</li> <li>\u4ee3\u7801\u5927\u5168 2</li> <li>UNIX \u7f16\u7a0b\u827a\u672f</li> <li>\u7cfb\u7edf\u8bbe\u8ba1</li> <li>\u67b6\u6784\u6574\u6d01\u4e4b\u9053</li> </ul>"},{"location":"#_14","title":"\u8f6f\u4ef6\u5de5\u7a0b","text":"<p>\"\u4eba\u6708\u662f\u5371\u9669\u7684\u795e\u8bdd, \u56e0\u4e3a\u5b83\u4eec\u662f\u57fa\u4e8e\u9519\u8bef\u7684\u5047\u8bbe\" ---- Frederick Brooks</p> <ul> <li>\u4eba\u4ef6</li> <li>\u4eba\u6708\u795e\u8bdd</li> <li>\u8f6f\u4ef6\u5de5\u7a0b</li> <li>\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1</li> <li>\u7a0b\u5e8f\u5458\u6574\u6d01\u4e4b\u9053</li> <li>\u7a0b\u5e8f\u5458\u4fee\u70bc\u4e4b\u9053</li> </ul>"},{"location":"#_15","title":"\u8ba1\u7b97\u673a\u7f51\u7edc","text":"<p>\"\u4e92\u8054\u7f51\u4e0d\u4ec5\u8fde\u63a5\u673a\u5668, \u8fd8\u8fde\u63a5\u4eba\" ---- Tim Berners Lee</p> <ul> <li>\u81ea\u9876\u5411\u4e0b\u65b9\u6cd5</li> <li>TCPIP \u8be6\u89e3</li> <li>\u56fe\u89e3 HTTP</li> </ul>"},{"location":"#_16","title":"\u6570\u636e\u5e93","text":"<p>\"\u6570\u636e\u662f\u73cd\u8d35\u7684\u4e1c\u897f, \u6bd4\u7cfb\u7edf\u672c\u8eab\u66f4\u6301\u4e45\" ---- Tim Berners Lee</p> <ul> <li>\u6570\u636e\u5e93\u7cfb\u7edf\u6982\u5ff5</li> <li>SQL \u5fc5\u77e5\u5fc5\u4f1a</li> <li>MySQL \u5fc5\u77e5\u5fc5\u4f1a</li> <li>MySQL \u6280\u672f\u5185\u5e55</li> <li>\u9ad8\u6027\u80fd MySQL</li> <li>Redis \u5b9e\u6218</li> <li>Redis \u8bbe\u8ba1\u4e0e\u5b9e\u73b0</li> <li>MongoDB \u6743\u5a01\u6307\u5357</li> <li>Elasticsearch \u5b9e\u6218</li> </ul>"},{"location":"#unix","title":"UNIX \u7cfb\u7edf\u4e0e\u7f51\u7edc\u7f16\u7a0b","text":"<p>\"UNIX \u7684\u7406\u5ff5\u662f\u8ba9\u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u505a\u597d\u4e00\u4ef6\u4e8b\" ---- Ken Thompson</p> <ul> <li>UNIX \u73af\u5883\u9ad8\u7ea7\u7f16\u7a0b</li> <li>UNIX \u7f51\u7edc\u7f16\u7a0b</li> <li>Linux \u9ad8\u6027\u80fd\u670d\u52a1\u5668\u7f16\u7a0b</li> <li>Linux \u591a\u7ebf\u7a0b\u670d\u52a1\u7aef\u7f16\u7a0b</li> </ul>"},{"location":"#_17","title":"\u901a\u8bc6\u7f16\u7a0b\u8bed\u8a00","text":"<p>\"\u81ea\u7531\u8f6f\u4ef6\u4e0d\u4ec5\u4ec5\u662f\u514d\u8d39, \u66f4\u662f\u81ea\u7531\" ---- Richard Stallman</p> <ul> <li>Rust</li> <li>Go</li> <li>Haskell</li> <li>Lua</li> <li>Zig</li> </ul>"},{"location":"#_18","title":"\u5206\u5e03\u5f0f","text":"<p>\"CAP \u5b9a\u7406\u544a\u8bc9\u6211\u4eec, \u4e00\u81f4\u6027 \u53ef\u7528\u6027\u548c\u5206\u533a\u5bb9\u9519\u6027\u5728\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u6700\u591a\u53ea\u80fd\u540c\u65f6\u6ee1\u8db3\u4e24\u4e2a\" ---- Eric Brewer</p> <ul> <li>\u5206\u5e03\u5f0f\u7cfb\u7edf</li> <li>\u6570\u636e\u5bc6\u96c6\u578b\u5e94\u7528\u7cfb\u7edf\u8bbe\u8ba1</li> <li>Hadoop</li> <li>Zookeeper</li> <li>k8s</li> <li>Kafka</li> <li>RabbitMQ</li> <li>RocketMQ</li> </ul>"},{"location":"#python","title":"Python","text":"<p>\"\u4eba\u751f\u82e6\u77ed, \u6211\u7528 Python\" ---- Bruce Eckel</p> <ul> <li>Python \u7f16\u7a0b</li> <li>\u6d41\u7545\u7684 Python</li> <li>Python \u540e\u7aef\u5f00\u53d1\u6846\u67b6</li> <li>Python \u6570\u636e\u5904\u7406\u4e0e\u8ba1\u7b97\u6846\u67b6</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Lua/Lua/","title":"Lua","text":"<p>lua 5.4 \u4e2d\u6587\u53c2\u8003\u624b\u518c</p>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/","title":"Python \u540e\u7aef\u5f00\u53d1","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u5b98\u65b9\u6587\u6863 - ... - 5</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#pydantic","title":"Pydantic","text":"<ul> <li>\u5b9a\u4e49\u6a21\u578b, \u4ee5\u4f9b\u7c7b\u578b\u68c0\u67e5</li> <li>\u6a21\u578b\u8fd8\u5177\u6709\u8bb8\u591a\u9ad8\u7ea7\u7279\u6027, \u4f8b\u5982:<ul> <li>\u6a21\u677f</li> <li>\u52a8\u6001\u521b\u5efa</li> <li>const</li> <li>\u9ed8\u8ba4\u503c</li> </ul> </li> </ul> <pre><code>from pydantic import BaseModel\n\n\nclass User(BaseModel):\n    id: int # \u7c7b\u578b\n    name: str = 'Jane Doe' # \u9ed8\u8ba4\u503c\n    key = Column(String(63), unique=True) # \u4ece\u5b9e\u4f8b\u5c5e\u6027\u4e2d\u83b7\u53d6\u7c7b\u578b\n\n\nuser = User(id='123', name='John Doe')\nUser.model_validate({'id': 123, 'name': 'John Doe'}) # \u7c7b\u578b\u68c0\u67e5\nUser.model_validate_json('{\"id\": 123, \"name\": \"John Doe\"}') # \u7c7b\u578b\u68c0\u67e5\nUser.model_dump() # \u8f6c\u6362\u4e3a\u5b57\u5178\nUser.model_dump_json() # \u8f6c\u6362\u4e3a json\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#fastapi","title":"FastAPI","text":"<ul> <li>\u4f9d\u8d56 OpenAPI \u4e0e Pydantic \u5e93\u5b9e\u73b0<ul> <li>\u6570\u636e\u9a8c\u8bc1</li> <li>\u81ea\u52a8\u751f\u6210\u4ea4\u4e92\u5f0f\u6587\u6863(\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4efb\u4f55\u57fa\u4e8e OpenAPI \u7684\u6587\u6863)</li> </ul> </li> <li>\u53ef\u4f7f\u7528 <code>async</code> \u4e0e <code>await</code> \u5b9e\u73b0\u5f02\u6b65</li> <li>\u53ef\u4ee5\u5b9a\u4e49\u5143\u6570\u636e, \u63d0\u4f9b\u7ed9\u6587\u6863</li> <li>\u96c6\u6210 HTTPX \u5e93\u8fdb\u884c\u6d4b\u8bd5</li> </ul> <pre><code>from fastapi import FastAPI\n\napp = FastAPI() # \u521b\u5efa\u4e00\u4e2a FastAPI \u5b9e\u4f8b\n\n@app.get(\"/\") # \u8def\u7531\nasync def root(): # \u5f02\u6b65\u51fd\u6570\n    return {\"message\": \"Hello World\"} # \u8fd4\u56de json\n</code></pre> <ul> <li>\u4e00\u4e2a url <code>\u534f\u8bae://\u4e3b\u673a:\u7aef\u53e3/\u8def\u5f84</code> \u8def\u5f84\u4ea6\u79f0\u4e3a\u7aef\u70b9 / \u8def\u7531</li> <li>\u4f7f\u7528 HTTP \u65b9\u6cd5\u6765\u533a\u5206\u4e0d\u540c\u7684\u64cd\u4f5c<ul> <li>GET - \u67e5\u8be2</li> <li>POST - \u521b\u5efa</li> <li>PUT - \u66f4\u65b0</li> <li>DELETE - \u5220\u9664</li> </ul> </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_2","title":"\u8def\u5f84\u53c2\u6570","text":"<ul> <li>\u5bf9\u4e8e\u8def\u5f84\u53c2\u6570\u51fd\u6570\u7684\u7c7b\u578b\u91cd\u8f7d, \u6ce8\u610f\u58f0\u660e\u987a\u5e8f\u51b3\u5b9a\u68c0\u67e5\u987a\u5e8f</li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>Path</code> \u5bf9\u8c61\u6765\u58f0\u660e\u8def\u5f84\u53c2\u6570\u7c7b\u578b, \u9ed8\u8ba4\u503c\u7b49</li> </ul> <pre><code>@app.get(\"/items/{id}\") # \u8def\u5f84\u53c2\u6570\nasync def read_item(id: int): # fastapi \u4f1a\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\n    return {\"item_id\": id}\nfrom enum import Enum\n\n# \u58f0\u660e\u4e00\u4e2a\u679a\u4e3e\u7c7b\u8fdb\u884c\u68c0\u67e5\nclass ModelName(str, Enum): # \u7ee7\u627f str \u7684\u539f\u56e0\u662f\u4e3a\u4e86\u517c\u5bb9\u751f\u6210\u6587\u6863\n    alexnet = \"alexnet\"\n    resnet = \"resnet\"\n    lenet = \"lenet\"\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_3","title":"\u67e5\u8be2\u53c2\u6570","text":"<ul> <li>\u5f62\u5982 <code>/items/?skip=0&amp;limit=10</code><ul> <li><code>/items/</code> \u4f1a\u4f7f\u7528\u9ed8\u8ba4\u503c</li> <li>\u53ef\u4f7f\u7528 <code>None</code> \u7c7b\u578b\u8868\u793a\u53ef\u9009\u53c2\u6570</li> <li>\u4e5f\u53ef\u4ee5\u662f <code>bool</code> \u7c7b\u578b, \u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3a <code>True</code> \u548c <code>False</code></li> </ul> </li> <li>\u8fd9\u56de\u4e0d\u4f9d\u8d56\u58f0\u660e\u987a\u5e8f\u4e86, \u68c0\u67e5\u67e5\u8be2\u53c2\u6570\u6765\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e2a\u51fd\u6570</li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>Query</code> \u5bf9\u8c61\u6765\u58f0\u660e\u67e5\u8be2\u53c2\u6570\u7c7b\u578b, \u9ed8\u8ba4\u503c\u7b49</li> <li><code>Annotated[FilterParams, Query()]</code> \u7528\u4e00\u4e2a\u6a21\u578b\u58f0\u660e\u67e5\u8be2\u53c2\u6570\u7c7b\u578b</li> </ul> <pre><code>from fastapi import FastAPI\n\napp = FastAPI()\n\nfake_items_db = [{\"item_name\": \"Foo\"}, {\"item_name\": \"Bar\"}, {\"item_name\": \"Baz\"}]\n\n\n@app.get(\"/items/\")\nasync def read_item(skip: int = 0, limit: int = 10): # \u6ca1\u540c\u540d, \u4ee3\u8868\u67e5\u8be2\u53c2\u6570\n    return fake_items_db[skip : skip + limit]\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_4","title":"\u8bf7\u6c42\u4f53","text":"<ul> <li>\u76f4\u63a5\u5b9e\u73b0\u7c7b\u578b\u68c0\u67e5 + JSON</li> <li>\u548c\u4e0a\u9762\u7684\u53ef\u4ee5\u53e0\u52a0</li> <li>\u4e5f\u53ef\u4ee5\u7528\u591a\u4e2a\u5355\u72ec\u7684\u53c2\u6570\u6765\u5b9e\u73b0</li> <li><code>Annotated[class, Cookie()]</code> \u58f0\u660e Cookie \u53c2\u6570<ul> <li>Header / Cookie / Query / Path \u540c\u7406</li> </ul> </li> <li>\u8bf7\u6c42\u4f53\u4e0d\u662f JSON \u683c\u5f0f\u7684, \u800c\u662f\u8868\u5355\u683c\u5f0f\u7684<ul> <li>\u4f7f\u7528 <code>Form</code> \u5bf9\u8c61\u6765\u58f0\u660e\u8868\u5355\u53c2\u6570</li> <li><code>Annotated[class, From()]</code> \u4ea6\u53ef</li> <li>\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>File</code> \u5bf9\u8c61\u6765\u58f0\u660e\u6587\u4ef6\u53c2\u6570</li> <li>\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>UploadFile</code> \u5bf9\u8c61\u6765\u58f0\u660e\u6587\u4ef6\u53c2\u6570\u7c7b\u578b</li> </ul> </li> </ul> <pre><code>from fastapi import FastAPI\nfrom pydantic import BaseModel\n\n\nclass Item(BaseModel):\n    name: str\n    description: str | None = None\n    price: float\n    tax: float | None = None\n\nwsl --set-default-version 2\n1\napp = FastAPI()\n\n\n@app.post(\"/items/\")\nasync def create_item(item: Item): # \u8bf7\u6c42\u4f53\n    return item\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_5","title":"\u66f4\u65b0","text":"<ul> <li>\u53ef\u4ee5\u5355\u72ec\u5b9a\u4e49\u9700\u8981\u66f4\u65b0\u7684\u90e8\u5206\u7684\u6a21\u578b, \u8fd9\u6837\u5c31\u4e0d\u4f1a\u8986\u76d6\u6240\u6709\u5b57\u6bb5</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_6","title":"\u54cd\u5e94","text":"<ul> <li><code>jsonable_encoder</code> \u53ef\u4ee5\u5c06\u4efb\u610f\u7c7b\u578b\u8f6c\u6362\u4e3a JSON \u683c\u5f0f\u517c\u5bb9</li> </ul> <pre><code>@app.post(\"/user/\", response_model=UserOut) # \u7528\u88c5\u9970\u5668\u58f0\u660e\u54cd\u5e94\u6a21\u578b\n@app.post(\"/items/\", status_code=201) # \u58f0\u660e\u72b6\u6001\u7801\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_7","title":"\u540e\u53f0\u4efb\u52a1","text":"<ul> <li>\u53ef\u4ee5\u4f7f\u7528 <code>BackgroundTasks</code> \u5bf9\u8c61\u6765\u58f0\u660e\u540e\u53f0\u4efb\u52a1<ul> <li>\u540e\u53f0\u4efb\u52a1\u4f1a\u5728\u54cd\u5e94\u51fd\u6570\u8fd4\u56de\u540e\u6267\u884c</li> </ul> </li> </ul> <pre><code>from fastapi import BackgroundTasks, FastAPI\n\napp = FastAPI()\n\n\ndef write_notification(email: str, message=\"\"): # \u540e\u53f0\u4efb\u52a1\n    with open(\"log.txt\", mode=\"w\") as email_file:\n        content = f\"notification for {email}: {message}\"\n        email_file.write(content)\n\n\n@app.post(\"/send-notification/{email}\")\nasync def send_notification(email: str, background_tasks: BackgroundTasks):\n    background_tasks.add_task(write_notification, email, message=\"some notification\") # \u8fdb\u884c\u540e\u53f0\u4efb\u52a1\n    return {\"message\": \"Notification sent in the background\"}\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_8","title":"\u9759\u6001\u6587\u4ef6","text":"<ul> <li>\u4e8b\u5b9e\u5efa\u7acb\u72ec\u7acb\u7684 app \u6765\u5904\u7406\u9759\u6001\u6587\u4ef6\u8bf7\u6c42</li> </ul> <pre><code>from fastapi import FastAPI\nfrom fastapi.staticfiles import StaticFiles\n\napp = FastAPI()\n\napp.mount(\"/static\", StaticFiles(directory=\"static\"), name=\"static\") # \u6302\u8f7d\u9759\u6001\u6587\u4ef6\n# \u6307\u5b9a\u8def\u5f84, \u5b9e\u4f8b, \u540d\u79f0\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_9","title":"\u4f9d\u8d56\u6ce8\u5165","text":"<ul> <li>\u53ef\u4ee5\u4f7f\u7528 <code>Depends</code> \u5bf9\u8c61\u6765\u58f0\u660e\u4f9d\u8d56<ul> <li>\u4f9d\u8d56\u53ef\u4ee5\u662f\u4efb\u4f55\u53ef\u8c03\u7528\u5bf9\u8c61, \u5305\u62ec\u51fd\u6570, \u7c7b, \u534f\u7a0b\u51fd\u6570</li> </ul> </li> <li>\u53ef\u4ee5\u5d4c\u5957\u4f9d\u8d56, \u83f1\u5f62\u4f9d\u8d56\u81ea\u52a8\u5904\u7406</li> <li>\u8def\u5f84\u88c5\u9970\u5668\u4e5f\u53ef\u4ee5\u58f0\u660e\u4f9d\u8d56, \u4f9d\u8d56\u4f1a\u88ab\u8c03\u7528 (\u6bd4\u5982\u7528\u6765\u5224\u65ad\u8bf7\u6c42\u5934), \u4f46\u4f9d\u8d56\u7684\u503c\u4e0d\u4f1a\u88ab\u4f20\u9012\u7ed9\u54cd\u5e94\u51fd\u6570<ul> <li>\u76f8\u5e94\u7684 <code>app</code> \u5b9e\u4f8b\u4e5f\u53ef\u4ee5\u58f0\u660e\u4f9d\u8d56, \u76f8\u5f53\u4e8e\u4e3a\u6240\u6709\u8def\u7531\u58f0\u660e\u4f9d\u8d56</li> </ul> </li> </ul> <pre><code>async def get_db(): # \u8fd9\u4e48\u58f0\u660e\u7684\u4f9d\u8d56\u4f1a\u505c\u5728 yield \u5904, \u5e76\u5c06 db \u4f20\u9012\u7ed9\u54cd\u5e94\u51fd\u6570\n    db = DBSession()\n    try:\n        yield db\n    finally: # \u76f4\u5230\u54cd\u5e94\u51fd\u6570\u8fd4\u56de\u540e, \u624d\u4f1a\u6267\u884c finally \u5757\n        db.close()\n</code></pre> <pre><code>from typing import Union\n\nfrom fastapi import Depends, FastAPI\n\napp = FastAPI()\n\n\nasync def common_parameters(\n    q: Union[str, None] = None, skip: int = 0, limit: int = 100\n):\n    return {\"q\": q, \"skip\": skip, \"limit\": limit}\n\n\n@app.get(\"/items/\")\nasync def read_items(commons: dict = Depends(common_parameters)):\n    return commons\n\n\n@app.get(\"/users/\")\nasync def read_users(commons: dict = Depends(common_parameters)):\n    return commons\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_10","title":"\u4e2d\u95f4\u4ef6","text":"<ul> <li>\u81ea\u5df1\u7684\u88c5\u9970\u5668</li> </ul> <pre><code>import time\n\nfrom fastapi import FastAPI, Request\n\napp = FastAPI()\n\n\n@app.middleware(\"http\")\nasync def add_process_time_header(request: Request, call_next):\n    start_time = time.perf_counter()\n    response = await call_next(request)\n    process_time = time.perf_counter() - start_time\n    response.headers[\"X-Process-Time\"] = str(process_time)\n    return response\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_11","title":"\u5b89\u5168","text":"<ul> <li>\u53ef\u4ee5\u4f7f\u7528 <code>CORSMiddleware</code> \u6765\u6dfb\u52a0 CORS \u652f\u6301 (\u6307\u5b9a\u5141\u8bb8\u7684\u57df\u540d, \u65b9\u6cd5\u7b49)</li> <li>\u57fa\u4e8e OAuth2 \u89c4\u8303\u5b9e\u73b0\u5b89\u5168\u8ba4\u8bc1</li> <li>fastapi \u4f1a\u63a5\u6536\u8d26\u53f7\u5bc6\u7801, \u9a8c\u8bc1\u540e\u8fd4\u56de token<ul> <li>\u524d\u7aef\u4fdd\u5b58 token, \u6bcf\u6b21\u8bf7\u6c42\u65f6\u5728\u8bf7\u6c42\u5934\u6dfb\u52a0 Authorization : \"Bearer+token\"</li> <li>\u540e\u7aef\u9a8c\u8bc1 token, \u5e76\u8fd4\u56de\u7528\u6237\u4fe1\u606f</li> </ul> </li> <li>\u4f7f\u7528 passlib \u5e93\u6765\u54c8\u5e0c\u5bc6\u7801</li> <li>\u4f7f\u7528 pyJWT \u5e93\u6765\u751f\u6210 JWT \u4ee4\u724c</li> </ul> <pre><code>from typing import Union\n\nfrom fastapi import Depends, FastAPI\nfrom fastapi.security import OAuth2PasswordBearer\nfrom pydantic import BaseModel\n\napp = FastAPI()\n\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"token\") # \u9a8c\u8bc1\u5668\n\n\nclass User(BaseModel): # \u58f0\u660e\u7528\u6237\u6a21\u578b\n    username: str\n    email: Union[str, None] = None\n    full_name: Union[str, None] = None\n    disabled: Union[bool, None] = None\n\n\ndef fake_decode_token(token): # \u8fd4\u56de\u7528\u6237\n    return User(\n        username=token + \"fakedecoded\", email=\"john@example.com\", full_name=\"John Doe\"\n    )\n\n\nasync def get_current_user(token: str = Depends(oauth2_scheme)): # \u9a8c\u8bc1\u51fd\u6570, \u4f9d\u8d56\u4e8e\u9a8c\u8bc1\u5668\n    user = fake_decode_token(token)\n    return user\n\n\n@app.get(\"/users/me\")\nasync def read_users_me(current_user: User = Depends(get_current_user)): # \u4f9d\u8d56\u4e8e\u9a8c\u8bc1\u51fd\u6570\n    return current_user\n</code></pre> <pre><code>@app.post(\"/token\")\nasync def login(form_data: OAuth2PasswordRequestForm = Depends()): # \u767b\u9646\u51fd\u6570, \u8868\u5355\u4f9d\u8d56\u4e8e OAuth2PasswordRequestForm\n    # \u6ce8\u610f, \u8868\u5355\u6a21\u578b\u4e0d\u80fd\u81ea\u5b9a\u4e49, \u662f OAuth2 \u89c4\u8303\u7ea6\u5b9a\u7684\u6a21\u578b\n    user_dict = fake_users_db.get(form_data.username)\n    if not user_dict:\n        raise HTTPException(status_code=400, detail=\"Incorrect username or password\")\n    user = UserInDB(**user_dict)\n    hashed_password = fake_hash_password(form_data.password) # \u54c8\u5e0c\u5bc6\u7801, \u4e00\u822c\u4f7f\u7528 passlib \u5e93\n    if not hashed_password == user.hashed_password:\n        raise HTTPException(status_code=400, detail=\"Incorrect username or password\")\n\n    return {\"access_token\": user.username, \"token_type\": \"bearer\"}\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_12","title":"\u67b6\u6784","text":"<ul> <li>\u53ef\u4ee5\u4f7f\u7528 <code>APIRouter</code> \u6765\u58f0\u660e\u672c\u6587\u4ef6\u7684\u8def\u7531\u7ec4 (app \u7684\u5206\u8eab)<ul> <li><code>router = APIRouter()</code></li> <li><code>@router.get(\"/\")</code></li> </ul> </li> <li>app \u7528 <code>include_router</code> \u6765\u5305\u542b\u8def\u7531\u7ec4</li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>prefix</code> \u548c <code>tags</code> \u6765\u58f0\u660e\u8def\u7531\u7ec4\u7684\u524d\u7f00\u548c\u6807\u7b7e<ul> <li><code>router = APIRouter(prefix=\"/users\", tags=[\"users\"])</code></li> <li>\u4ea6\u53ef <code>app.include_router(router, prefix=\"/admin\", tags=[\"admin\"])</code></li> </ul> </li> </ul> <pre><code>from fastapi import Depends, FastAPI\n\nfrom .dependencies import get_query_token, get_token_header\nfrom .internal import admin\nfrom .routers import items, users\n\napp = FastAPI(dependencies=[Depends(get_query_token)])\n\n\napp.include_router(users.router)\napp.include_router(items.router)\napp.include_router(\n    admin.router, \n    prefix=\"/admin\", \n    tags=[\"admin\"], \n    dependencies=[Depends(get_token_header)], \n    responses={418: {\"description\": \"I'm a teapot\"}}, \n)\n\n\n@app.get(\"/\")\nasync def root():\n    return {\"message\": \"Hello Bigger Applications!\"}\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#mysql-connector-python","title":"mysql-connector-python","text":"<ul> <li>\u4e00\u4e2a mysql \u6570\u636e\u5e93\u7684 python \u9a71\u52a8\u7a0b\u5e8f</li> <li>\u51e0\u4e4e\u662f sql \u8bed\u53e5\u7684\u4e00\u5bf9\u4e00\u5b9e\u73b0</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#sqlalchemy","title":"SQLAlchemy","text":"<ul> <li>\u4e00\u4e2a ORM \u6846\u67b6, \u5728\u8fde\u63a5\u5e93\u4e0a\u62bd\u8c61\u4e86\u64cd\u4f5c\u63a5\u53e3</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_13","title":"\u8fde\u63a5","text":"<pre><code>from sqlalchemy import create_engine\nengine = create_engine(\"sqlite+pysqlite:///:memory:\", echo=True) # \u5185\u5b58\u4e2d\u7684 sqlite\n# \u6570\u636e\u5e93+\u9a71\u52a8://\u7528\u6237\u540d:\u5bc6\u7801@\u4e3b\u673a:\u7aef\u53e3/\u6570\u636e\u5e93\u540d\n# echo=True \u6253\u5370 sql \u8bed\u53e5\n\n# \u4e0d\u591a\u4ecb\u7ecd\u6587\u672c SQL\nwith engine.connect() as conn: # \u901a\u8fc7\u8fde\u63a5\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u64cd\u4f5c\n    conn.execute(\n        text(\"INSERT INTO some_table (x, y) VALUES (:x, :y)\"), \n        [{\"x\": 1, \"y\": 1}, {\"x\": 2, \"y\": 4}], \n    ) # \u64cd\u4f5c\u4f1a\u88ab\u7f13\u5b58, \u76f4\u5230 commit \u624d\u4f1a\u88ab\u6267\u884c\n    conn.commit()\n\nresult = conn.execute(...).all # \u7ed3\u679c\u4f5c\u4e3a\u5143\u7ec4\u8fd4\u56de\n\nwith Session(engine) as session: # \u5bf9 connect \u7684\u5c01\u88c5\n    result = session.execute(...)\n    session.commit() # \u63d0\u4ea4\u4e8b\u52a1\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_14","title":"\u5bf9\u8c61\u5173\u7cfb\u6620\u5c04","text":"<pre><code>from sqlalchemy import MetaData\nmetadata_obj = MetaData() # \u5143\u6570\u636e\u5bf9\u8c61\n\nfrom sqlalchemy import Table, Column, Integer, String\nuser_table = Table( # \u58f0\u660e\u8868\u7ed3\u6784\n    \"user_account\", # \u8868\u540d\n    metadata_obj, # \u5143\u6570\u636e\u5bf9\u8c61\n    Column(\"id\", Integer, primary_key=True), # \u58f0\u660e\u5217\n    Column(\"name\", String(30)), \n    Column(\"fullname\", String), \n)\nprint(user_table.c.keys) # \u5217\u540d\n\nColumn(\"user_id\", ForeignKey(\"user_account.id\"), nullable=False) # \u5916\u952e\n\n# \u66f4\u597d\u7684\u65b9\u6cd5\nfrom sqlalchemy.orm import DeclarativeBase\nclass Base(DeclarativeBase): # \u58f0\u660e\u57fa\u7c7b\n    pass\n\nclass User(Base): # \u58f0\u660e\u6a21\u578b\n    __tablename__ = \"user_account\" # \u8868\u540d\n\n    id = Column(Integer, primary_key=True)\n    name = Column(String(30))\n    fullname = Column(String)\n\n    addresses = relationship(\n        \"Address\", back_populates=\"user\", cascade=\"all, delete-orphan\"\n    ) # \u5173\u7cfb\n\nsome_table = Table(\"some_table\", metadata_obj, autoload_with=engine) # \u81ea\u52a8\u52a0\u8f7d\u8868\u7ed3\u6784\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#_15","title":"\u64cd\u4f5c","text":"<pre><code>from sqlalchemy import insert, select, update, delete\nstmt = insert(user_table).values(x=6, y=8, z=10) # \u63d2\u5165\u8bed\u53e5\n\nstmt = select(user_table).where(...) # \u67e5\u8be2\u8bed\u53e5\nstmt = select(user_table).where(...).join_from(another_table) # \u67e5\u8be2\u8bed\u53e5\n\nstmt = update(user_table).where(...).values(x=6, y=8) # \u66f4\u65b0\u8bed\u53e5\nstmt = delete(user_table).where(...) # \u5220\u9664\u8bed\u53e5\n# \u8fd8\u6709\u5f88\u591a, \u5927\u4f53\u4e0e SQL \u8bed\u53e5\u5bf9\u5e94\n\nwith Session(engine) as session: # \u64cd\u4f5c\n    session.execute(stmt)\n    session.commit()\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#orm","title":"ORM \u64cd\u4f5c","text":"<pre><code>from sqlalchemy.orm import Session\n\nwith Session(engine) as session: # \u64cd\u4f5c\n    session.add_all([User(name=\"spongebob\", fullname=\"Spongebob Squarepants\"), ...]) # \u63d2\u5165\n    session.flush() # \u7f13\u5b58\n    session.commit() # \u63d0\u4ea4\n\n    session.query(User).filter(User.name.in_([\"sandy\", \"susan\"])).all() # \u67e5\u8be2\n    session.query(User).filter(User.name == \"sandy\").first() # \u67e5\u8be2\n    session.query(User).filter(User.name.like(\"%ed\")).all() # \u67e5\u8be2\n\n    session.query(User).filter(User.name == \"sandy\").name = \"666\" # \u66f4\u65b0\n    session.delete(result) # \u5220\u9664\n    session.commit() # \u63d0\u4ea4\n\n    session.rollback() # \u56de\u6eda\n    session.close() # \u5173\u95ed\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#relationship","title":"<code>relationship</code>","text":"<ul> <li>\u53ef\u4ee5\u5b9a\u4e49\u5ef6\u8fdf\u52a0\u8f7d, \u9884\u52a0\u8f7d, \u7ea7\u8054\u5220\u9664\u7b49\u7279\u6027<ul> <li><code>cascade=\"all, delete-orphan\"</code> \u7ea7\u8054\u5220\u9664</li> </ul> </li> <li>\u6b63\u5e38\u58f0\u660e\u4e00\u5bf9\u591a<ul> <li><code>uselist=False</code> \u8868\u793a\u5355\u4e2a\u5bf9\u8c61\u800c\u975e\u5217\u8868</li> <li>\u8f85\u4ee5\u5916\u952e\u7ea6\u675f, \u5b9e\u73b0\u5176\u5b83\u5173\u7cfb</li> </ul> </li> </ul> <pre><code>class Parent(Base):\n    __tablename__ = 'parents'\n    id = Column(Integer, primary_key=True)\n    children = relationship(\"Child\", back_populates=\"parent\")\n\nclass Child(Base):\n    __tablename__ = 'children'\n    id = Column(Integer, primary_key=True)\n    parent_id = Column(Integer, ForeignKey('parents.id'))\n    parent = relationship(\"Parent\", back_populates=\"children\")\n</code></pre> <ul> <li>\u591a\u5bf9\u591a\u5173\u7cfb\u9700\u8981\u4f7f\u7528\u5173\u8054\u6a21\u578b\u5b9a\u4e49 (\u4e2d\u95f4\u8868)</li> </ul> <pre><code>class Enrollment(Base):\n    __tablename__ = 'enrollments'\n    student_id = Column(Integer, ForeignKey('students.id'), primary_key=True)\n    course_id = Column(Integer, ForeignKey('courses.id'), primary_key=True)\n    enrollment_date = Column(DateTime)\n    # \u5b9a\u4e49\u4e0e Student \u548c Course \u7684\u5173\u7cfb\n    student = relationship(\"Student\", back_populates=\"enrollments\")\n    course = relationship(\"Course\", back_populates=\"enrollments\")\n\nclass Student(Base):\n    __tablename__ = 'students'\n    id = Column(Integer, primary_key=True)\n    name = Column(String)\n    enrollments = relationship(\"Enrollment\", back_populates=\"student\")\n\nclass Course(Base):\n    __tablename__ = 'courses'\n    id = Column(Integer, primary_key=True)\n    title = Column(String)\n    enrollments = relationship(\"Enrollment\", back_populates=\"course\")\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E5%9F%BA%E6%9C%AC%E6%A1%86%E6%9E%B6/#uvicorn","title":"Uvicorn","text":"<ul> <li>\u57fa\u4e8e ASGI \u534f\u8bae\u7684\u5f02\u6b65 web \u670d\u52a1\u5668 (\u4e0d\u540c\u4e8e WSGI)</li> </ul> <pre><code>uvicorn filename:objname # \u542f\u52a8\u670d\u52a1\u5668\n\n# --reload \u70ed\u91cd\u8f7d\n# --port \u7aef\u53e3\n# --host IP\n# --workers \u8fdb\u7a0b\u6570\n# --log-level \u65e5\u5fd7\u7ea7\u522b\n# --log-config \u65e5\u5fd7\u6587\u4ef6\u4f4d\u7f6e\n# --ssl-keyfile=SSL \u5bc6\u94a5\u6587\u4ef6 --ssl-certfile=SSL \u8bc1\u4e66\u6587\u4ef6\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%A1%86%E6%9E%B6/","title":"Python\u6570\u636e\u5904\u7406\u4e0e\u8ba1\u7b97\u6846\u67b6","text":"<ul> <li>numpy</li> <li>pandas</li> <li>matplotlib</li> <li>seaborn</li> <li>jupyter</li> <li>scipy</li> <li>sympy</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/","title":"Python \u57fa\u7840","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>Python \u7f16\u7a0b \u4ece\u5165\u95e8\u5230\u5b9e\u8df5 - \u7ed9\u5916\u884c\u770b\u7684, \u4e0d\u770b\u4e5f\u80fd\u731c\u5230 - 1</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#_2","title":"\u73af\u5883\u914d\u7f6e","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#_3","title":"\u89e3\u91ca\u5668","text":"<p>mac \u81ea\u5e26 python, \u4f46\u662f\u4e00\u5b9a\u8981\u81ea\u5df1\u5b89\u88c5, \u5426\u5219 pip \u5b89\u88c5\u7684\u5305\u4f1a\u56e0\u4e3a\u6743\u9650\u7528\u4e0d\u4e86</p> <p>Windows \u5b89\u88c5\u5728\u5b98\u7f51\u4e0b\u8f7d\u5373\u53ef, \u6ce8\u610f\u52a0\u5165\u73af\u5883\u53d8\u91cf</p> <pre><code>brew install python # \u7528\u76f8\u5e94\u7684\u5305\u7ba1\u7406\u5668\u5b89\u88c5\n\n# pip \u5305\u7ba1\u7406\npip install &lt;package&gt; # \u4e0b\u8f7d\u5305\npip install --upgrade &lt;package&gt;  # \u5347\u7ea7\u8f6f\u4ef6\u5305\npip freeze # \u67e5\u770b\u5df2\u5b89\u88c5\u7684\u5185\u5bb9\npip uninstall &lt;package&gt;  # \u5378\u8f7d\u5305\n\n# mac \u6ce8\u610f\u8981\u8bbe\u7f6e\u522b\u540d, \u5426\u5219\u4f7f\u7528\u7cfb\u7edf\u81ea\u5e26\u7684 python\nexport PATH=${PATH}:/opt/homebrew/bin/python3\nalias python=\"/opt/homebrew/bin/python3\"\nalias pip=\"/opt/homebrew/bin/pip3\"\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#ide","title":"IDE \u4e0e\u865a\u62df\u73af\u5883","text":"<ul> <li>IDE \u63a8\u8350\u4f7f\u7528 PyCharm \u6559\u80b2\u514d\u8d39</li> <li>Python \u539f\u751f\u7684\u865a\u62df\u73af\u5883 venv \u8db3\u591f\u4f7f\u7528 (\u4e0d\u53ef\u968f\u610f\u66f4\u6362 py \u7248\u672c), \u4f46\u7b2c\u4e09\u65b9\u7684\u865a\u62df\u73af\u5883\u5de5\u5177\u8981\u66f4\u52a0\u6613\u7528, \u5982 conda, uv</li> <li>PyCharm \u652f\u6301\u865a\u62df\u73af\u5883\u7684\u56fe\u5f62\u5316\u7ba1\u7406</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#conda","title":"conda","text":"<pre><code>conda create -n \u73af\u5883\u540d python=\u7248\u672c\u53f7 # \u521b\u5efa\u865a\u62df\u73af\u5883\nactivate \u73af\u5883\u540d # \u6fc0\u6d3b\u865a\u62df\u73af\u5883\ndeactivate # \u9000\u51fa\u865a\u62df\u73af\u5883\n\n\nconda env list # \u67e5\u770b\u865a\u62df\u73af\u5883\u5217\u8868\nconda env remove -n \u73af\u5883\u540d # \u5220\u9664\u865a\u62df\u73af\u5883\n\n\nconda install \u5305\u540d # \u5b89\u88c5\u5305\nconda remove \u5305\u540d # \u5220\u9664\u5305\nconda update \u5305\u540d # \u66f4\u65b0\u5305\nconda list # \u67e5\u770b\u5df2\u5b89\u88c5\u7684\u5305\n</code></pre> <ul> <li>\u63a8\u8350\u4f7f\u7528 miniforge \u6765\u7ba1\u7406 conda \u73af\u5883</li> <li>mamba \u662f conda \u7684\u4e00\u4e2a\u66ff\u4ee3, \u53ef\u4ee5\u52a0\u901f\u5305\u7684\u5b89\u88c5</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#uv","title":"uv","text":"<pre><code>pip install uv # \u5b89\u88c5 uv \u5de5\u5177\n\nuv python list # \u67e5\u770b\u5df2\u5b89\u88c5\u7684 python \u7248\u672c\nuv python install \u7248\u672c\u53f7 # \u5b89\u88c5 python \u7248\u672c\n\nuv python pin 3.13 # \u8bbe\u7f6e\u9ed8\u8ba4 python \u7248\u672c\u4e3a 3.13\nuv init # \u521d\u59cb\u5316 uv \u73af\u5883\n\nuv add \u5305\u540d # \u5b89\u88c5\u5305\nuv remove \u5305\u540d # \u5220\u9664\u5305\nuv update \u5305\u540d # \u66f4\u65b0\u5305\nuv tree # \u67e5\u770b\u5df2\u5b89\u88c5\u7684\u5305\n\nuv tool list # \u67e5\u770b\u5df2\u5b89\u88c5\u7684\u5de5\u5177\nuv tool install \u5de5\u5177\u540d # \u5b89\u88c5\u5de5\u5177\nuv tool uninstall \u5de5\u5177\u540d # \u5220\u9664\u5de5\u5177\n\nuv tool run \u5de5\u5177\u540d # \u8fd0\u884c\u5de5\u5177\nuv tool run ruff # \u68c0\u67e5\u4ee3\u7801\n\nuv pip install \u5305\u540d # \u5b89\u88c5\u5305\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#pixi","title":"pixi","text":"<ul> <li>\u7c7b\u4f3c uv, \u4f46\u652f\u6301 forge \u4e2d\u7684\u5305</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#_4","title":"\u9879\u76ee\u914d\u7f6e","text":"<ul> <li>python \u4f7f\u7528 pyproject.toml \u6765\u914d\u7f6e\u9879\u76ee</li> </ul> <pre><code>[project]\nname = \"name\"\nversion = \"1.0.0\"\ndescription = \"\u9879\u76ee\u63cf\u8ff0\"\nreadme = \"README.md\"\nrequires-python = \"&gt;=3.12\"\ndependencies = [\n\n]\n</code></pre> <ul> <li>uv/pixi \u672c\u8d28\u4e0a\u5c31\u662f\u64cd\u7eb5 pyproject.toml \u6587\u4ef6</li> <li>\u4f46\u5b83\u4eec\u4f1a\u63d0\u4f9b\u4e00\u4e2a .lock \u6587\u4ef6, \u7528\u6765\u8bb0\u5f55\u5b89\u88c5\u7684\u5305\u7684\u7248\u672c, \u4ee5\u786e\u4fdd\u9879\u76ee\u7684\u53ef\u91cd\u590d\u6027</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#_5","title":"\u8d77\u6b65","text":"<p>\u4ecb\u7ecd\u4e3b\u6d41\u7cfb\u7edf\u4e2d python \u7684\u5b89\u88c5\u4e0e\u5728\u7ec8\u7aef\u548c VSCode \u4e2d\u8fd0\u884c\u4ee3\u7801</p>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#_6","title":"\u53d8\u91cf\u548c\u7b80\u5355\u7684\u6570\u636e\u7c7b\u578b","text":"<ul> <li>\u53d8\u91cf\u540d\u7684\u89c4\u5219\u4e0e C \u8bed\u8a00 \u4e00\u6837, \u5b57\u6bcd, \u6570\u5b57\u4e0e<code>_</code>(\u65b0\u7248\u672c\u652f\u6301 Unicode, \u8003\u8651\u517c\u5bb9\u6027\u4e0d\u5efa\u8bae\u4f7f\u7528), \u5e76\u4e0d\u53ef\u4e0e\u5173\u952e\u5b57 / \u5e93\u51fd\u6570\u91cd\u590d</li> <li>\u5bf9\u4e8e\u4e00\u4e2a\u53d8\u91cf, \u53ef\u4ee5\u7528<code>.method()</code> \u6765\u8c03\u7528\u65b9\u6cd5</li> <li>\u5b57\u7b26\u4e32\u53ef\u4ee5\u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u5f15\u7528, \u4ee5\u4fbf\u5728\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u53e6\u4e00\u4e2a</li> </ul> <pre><code>print(...)\n\n# \u8fd9\u4e9b\u65b9\u6cd5\u90fd\u53ea\u662f\u8fd4\u56de\u5904\u7406\u540e\u7684\u7ed3\u679c, \u800c\u4e0d\u662f\u6c38\u4e45\u6539\u53d8\n\n.title() # \u9996\u5b57\u6bcd\u5927\u5199\n.upper() # \u5168\u90e8\u5927\u5199\n.lower() # \u5168\u90e8\u5c0f\u5199\n\n.len() # \u957f\u5ea6\nstring1+=string2 # \u8fde\u63a5\u5b57\u7b26\u4e32\n\n.strip() # \u53bb\u9664\u9996\u5c3e\u7a7a\u683c\n.rstrip() # \u53bb\u9664\u5c3e\u90e8\u7a7a\u683c\n.lstrip() # \u53bb\u9664\u9996\u90e8\u7a7a\u683c\n\n.repace(a, b) # \u5c06\u5b57\u7b26\u4e32\u4e2d a \u66ff\u6362\u4e3a b\n.split(\u5206\u9694\u7b26\u7f3a\u7701\u4e3a' ') # \u5c06\u5b57\u7b26\u4e32\u5206\u5272\u6210\u5217\u8868\n\n.removeprefix(\u524d\u7f00) # \u53bb\u9664\u524d\u7f00\n.removesuffix(\u540e\u7f00) # \u53bb\u9664\u540e\u7f00\n\nf\"{name}{name}\" # \u683c\u5f0f\u5316\u5b57\u7b26\u4e32, \u53ef\u4ee5\u5f15\u7528\u53d8\u91cf\n</code></pre> <ul> <li>\u6574\u6570\u4e0e\u6d6e\u70b9\u6570, \u6574\u6570\u6709\u52a0\u51cf\u4e58\u9664, \u4e58\u65b9\u8fd0\u7b97, \u5b57\u9762\u91cf\u4e2d\u53ef\u4ee5\u52a0\u5165<code>_</code>, \u6ca1\u6709\u4efb\u4f55\u5f71\u54cd</li> <li>\u9664\u6cd5\u8fd0\u7b97\u7684\u7ed3\u679c\u603b\u662f\u6d6e\u70b9\u6570</li> <li>\u5f53\u8868\u8fbe\u5f0f\u5f53\u4e2d\u6709\u6d6e\u70b9\u6570, \u90a3\u4e48\u7ed3\u679c\u4e00\u5b9a\u662f\u6d6e\u70b9\u6570</li> </ul> <pre><code>a=100_000 #\u6ce8\u91ca\n\na ** b #\u4e58\u65b9\na%b # \u53d6\u4f59\n\na, b = 1, 2 #\u540c\u65f6\u8d4b\u503c\n</code></pre> <ul> <li>Python \u6ca1\u6709\u5e38\u91cf, \u4f46\u5982\u679c\u4e0d\u6253\u7b97\u6539\u53d8\u4e00\u4e2a\u53d8\u91cf\u503c, \u6211\u4eec\u7ea6\u5b9a\u5c06\u5176\u6807\u8bc6\u7b26\u7528\u5168\u5927\u5199\u8868\u793a</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#_7","title":"\u5217\u8868\u7b80\u4ecb","text":"<pre><code>name=[1, 2, 3, 4] # \u6253\u5370\u4f1a\u663e\u793a[1, 2, 3, 4]\n# name[0~3]\u5bf9\u5e94 4 \u4e2a\u5143\u7d20, \u5de6\u53f3\u503c\u90fd\u80fd\u5f53, \u4e5f\u5c31\u662f\u8bf4\u53ef\u4ee5\u4fee\u6539\nname[-1] # \u6700\u540e\u4e00\u4e2a\u5143\u7d20\n\n.append(\u5143\u7d20) # \u5728\u5217\u8868\u672b\u5c3e\u6dfb\u52a0\u5143\u7d20\n.insert(\u4f4d\u7f6e, \u5143\u7d20) # \u5728\u5217\u8868\u6307\u5b9a\u4f4d\u7f6e\u6dfb\u52a0\u5143\u7d20\n\ndel name[0] # \u5220\u9664\u5217\u8868\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\n\n.pop(\u4f4d\u7f6e) # \u5220\u9664\u5217\u8868\u6307\u5b9a\u4f4d\u7f6e\u7684\u5143\u7d20\u5e76\u8fd4\u56de\u8be5\u5143\u7d20\n.pop() # \u5220\u9664\u5217\u8868\u672b\u5c3e\u7684\u5143\u7d20\u5e76\u8fd4\u56de\u8be5\u5143\u7d20\n\n.remove(\u5143\u7d20) # \u5220\u9664\u5217\u8868\u4e2d\u6307\u5b9a\u5143\u7d20\n\n.sort() # \u6392\u5e8f, \u9ed8\u8ba4\u5347\u5e8f, \u53c2\u6570 reverse=True \u964d\u5e8f\nsorted(name) # \u4e34\u65f6\u6392\u5e8f(\u4e0d\u4fee\u6539\u539f\u5217\u8868)\n\n.reverse() # \u53cd\u8f6c\u5217\u8868\n\n.len() # \u83b7\u53d6\u5217\u8868\u957f\u5ea6\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#_8","title":"\u64cd\u4f5c\u5217\u8868","text":"<pre><code>for name in \u5217\u8868 name:\n    ...\n    ... # \u7f29\u8fdb\u4ee3\u7801\u5728\u5faa\u73af\u4f53\u4e2d\u6267\u884c\n... # \u5728\u5faa\u73af\u4f53\u5916\u6267\u884c\n\n# \u6570\u503c\u5217\u8868\u7684\u5e38\u7528\u65b9\u6cd5\u4e0e\u51fd\u6570\nrange(n1(\u7f3a\u7701\u4e3a 0), n2, \u6b65\u957f\u7f3a\u7701\u4e3a 1) # \u751f\u6210\u4e00\u4e2a\u4ece n1 \u5230 n2-1 \u7684\u6570\u503c\u5217\u8868\nname=list(range(n1, n2)) # \u5c06 range() \u7684\u7ed3\u679c\u8f6c\u6362\u4e3a\u5217\u8868\n\nname=[i**2 for i in range(1, 11)] # \u5217\u8868\u63a8\u5bfc\u5f0f\n\n.min() # \u6700\u5c0f\u503c\n.max() # \u6700\u5927\u503c\n.sum() # \u6c42\u548c\n\nname[:3] # \u4ece\u5217\u8868\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u59cb, \u53d6\u4e09\u4e2a\u5143\u7d20\nname[3:] # \u4ece\u5217\u8868\u7b2c\u56db\u4e2a\u5143\u7d20\u5f00\u59cb, \u53d6\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\nname[-3:] # \u4ece\u5217\u8868\u5012\u6570\u7b2c\u4e09\u4e2a\u5143\u7d20\u5f00\u59cb, \u53d6\u5230\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n# \u5207\u7247\u4e5f\u53ef\u4ee5\u7528\u5728 for in \u540e\nname1=name2[:] # \u590d\u5236\u5217\u8868\nname1=name2 # \u4e24\u4e2a\u6807\u8bc6\u7b26\u6307\u5411\u540c\u4e00\u4e2a\u5217\u8868\n\n# \u5143\u7ec4, \u4e0d\u53ef\u4fee\u6539\u7684\u5217\u8868\nname=(1, 2, 3)# ()\u53ea\u662f\u770b\u8d77\u6765\u597d\u770b, \u771f\u6b63\u7684\u6807\u8bc6\u662f\u4f9d\u9760, \u6240\u4ee5\u81f3\u5c11\u6709\u4e00\u4e2a, \n</code></pre> <ul> <li>\u8ba9\u6587\u672c\u7f16\u8f91\u5668\u8f93\u5165 <code>TAB</code> \u7684\u65f6\u5019\u81ea\u52a8\u8f6c\u5316\u6210\u56db\u4e2a\u7a7a\u683c, \u800c\u4e0d\u662f\u5728\u6587\u672c\u5f53\u4e2d\u7559\u4e0b<code>'\\t'</code>, \u6709\u5229\u4e8e\u683c\u5f0f\u7edf\u4e00</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#if","title":"if \u8bed\u53e5","text":"<pre><code>if \u6761\u4ef6:\n    ...\nelif \u6761\u4ef6:\n    ...\nelse:\n    ...\n# \u6761\u4ef6\na==b # \u7b49\u4e8e\na!=b # \u4e0d\u7b49\u4e8e\na&gt;b # \u5927\u4e8e\na&lt;b # \u5c0f\u4e8e\na&gt;=b # \u5927\u4e8e\u7b49\u4e8e\na&lt;=b # \u5c0f\u4e8e\u7b49\u4e8e\nand # &amp;&amp;\nor # ||\nnot # !\na in b # \u5224\u65ad\u4e00\u4e2a\u5143\u7d20\u662f\u5426\u5728\u5217\u8868\u4e2d/\u5224\u65ad a \u4e3a b \u7684\u5b50\u5b57\u7b26\u4e32\na is  b # \u5224\u65ad\u4e24\u4e2a\u6807\u8bc6\u7b26\u662f\u5426\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\n\u5217\u8868 name # \u5224\u65ad\u5217\u8868\u975e\u7a7a\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#_9","title":"\u5b57\u5178","text":"<pre><code># map/\u54c8\u5e0c\u8868\nname={'key1':'value1', 'key2':'value2'} # \u5b57\u5178\u7684\u952e\u503c\u5bf9\n\nname['key1'] # \u8bbf\u95ee\nname['key1']='value3' # \u4fee\u6539\nname['key3']='value3' # \u6dfb\u52a0\ndel name['key1'] # \u5220\u9664\n\nname.keys() # \u83b7\u53d6\u6240\u6709\u952e\nname.values() # \u83b7\u53d6\u6240\u6709\u503c\n\nname.get(key, \u82e5\u65e0\u8fd4\u56de\u503c(\u7f3a\u7701\u4e3a none)) # \u83b7\u53d6\u952e\u5bf9\u5e94\u7684\u503c\n\nfor key, value in name.items():\n    ...\n\nset(name.values()) # \u7528\u96c6\u5408\u53bb\u91cd\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#while","title":"\u7528\u6237\u8f93\u5165\u548c while \u5faa\u73af","text":"<pre><code>name=input(\u63d0\u793a\u4fe1\u606f) # \u8f93\u5165\u5b57\u7b26\u4e32\nname=int(name) # \u8f6c\u6362\u4e3a\u6574\u6570\nname=float(name) # \u8f6c\u6362\u4e3a\u6d6e\u70b9\u6570\n\nwhile \u6761\u4ef6:\n    ...\n    break # \u8df3\u51fa\u5faa\u73af\n    continue # \u8df3\u8fc7\u5f53\u524d\u5faa\u73af\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#_10","title":"\u51fd\u6570","text":"<pre><code>def \u51fd\u6570\u540d(\u53c2\u6570 1, \u53c2\u6570 2=\u9ed8\u8ba4\u503c 2):\n    \"\"\"\u8fd9\u662f\u8fd9\u4e2a\u51fd\u6570\u7684\u7b80\u4ecb\u6ce8\u91ca\"\"\"\n    ...\n    return \u7ed3\u679c # \u8fd4\u56de\u7ed3\u679c\n\n\u51fd\u6570\u540d(\u503c 1, \u503c 2) # \u8c03\u7528\u51fd\u6570, \u53c2\u6570\u6309\u7167\u987a\u5e8f\u5bf9\u5e94\n\u51fd\u6570\u540d(\u53c2\u6570 1=\u503c 1, \u53c2\u6570 2=\u503c 2) # \u8c03\u7528\u51fd\u6570, \u53c2\u6570\u6309\u7167\u540d\u79f0\u5bf9\u5e94\n\ndef \u51fd\u6570\u540d(\u53c2\u6570 1, *\u53c2\u6570): # \u53ef\u53d8\u6570\u91cf\u53c2\u6570, \u5efa\u7acb\u4e00\u4e2a\u540d\u4e3a'\u53c2\u6570'\u7684\u5143\u7ec4\n\ndef \u51fd\u6570\u540d(**\u53c2\u6570): # \u5173\u952e\u5b57\u53c2\u6570, \u5efa\u7acb\u4e00\u4e2a\u540d\u4e3a'\u53c2\u6570'\u7684\u5b57\u5178\n\u51fd\u6570\u540d(\u53c2\u6570 1=\u503c 1, \u53c2\u6570 2=\u503c 2) # \u4f1a\u81ea\u52a8\u5c06\u53c2\u6570\u8f6c\u5316\u4e3a\u952e\u503c\u5bf9\n\nimport \u6a21\u5757\u540d(filename) as \u522b\u540d # \u5bfc\u5165\u6a21\u5757\n\u6a21\u5757\u540d/\u522b\u540d.\u51fd\u6570\u540d(\u503c 1, \u503c 2) # \u8c03\u7528\u51fd\u6570\n\nfrom \u6a21\u5757\u540d import \u51fd\u6570\u540d as \u522b\u540d # \u5bfc\u5165\u6a21\u5757\u4e2d\u7684\u51fd\u6570\n\u51fd\u6570\u540d/\u522b\u540d(\u503c 1, \u503c 2) # \u8c03\u7528\u51fd\u6570\n\nfrom \u6a21\u5757\u540d import * # \u5bfc\u5165\u6a21\u5757\u4e2d\u7684\u6240\u6709\u51fd\u6570\n</code></pre> <ul> <li>\u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u8c03\u7528\u51fd\u6570\u65f6\u53ef\u4ee5\u4e0d\u4f20, \u4e0d\u4f20\u7684\u8bdd\u5c31\u7528\u9ed8\u8ba4\u503c</li> <li>\u58f0\u660e\u51fd\u6570\u65f6\u6709\u9ed8\u8ba4\u503c\u7684\u53c2\u6570\u5fc5\u987b\u5728\u540e</li> <li>\u4f20\u9012\u5217\u8868\u65f6, \u53ef\u4ee5\u4fee\u6539\u5217\u8868, \u82e5\u4e0d\u4fee\u6539, \u5219\u5e94\u590d\u5236\u5217\u8868</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#_11","title":"\u7c7b","text":"<pre><code>class \u7c7b\u540d:\n    \"\"\"\u7c7b\u7684\u7b80\u4ecb\u6ce8\u91ca\"\"\"\n    def __init__(self, \u53c2\u6570 1, \u53c2\u6570 2=123):\n        \"\"\"\u521d\u59cb\u5316\u51fd\u6570\"\"\"\n        self.\u53c2\u6570 1=\u53c2\u6570 1\n        self.\u53c2\u6570 2=\u53c2\u6570 2\n        self.\u53c2\u6570 3=1234\n    def \u51fd\u6570\u540d(self):\n        \"\"\"\u51fd\u6570\u7684\u7b80\u4ecb\u6ce8\u91ca\"\"\"\n        ...\n        ...\n        return \u7ed3\u679c\n\nmy_class=\u7c7b\u540d(\u503c 1, \u503c 2) # \u5b9e\u4f8b\u5316\u7c7b\nmy_class.\u51fd\u6570\u540d() # \u8c03\u7528\u51fd\u6570\nmy_class.\u53c2\u6570 1 # \u8bbf\u95ee\u53c2\u6570\n\nclass \u7c7b\u540d(\u7236\u7c7b\u540d):\n    \"\"\"\u5b50\u7c7b\u7684\u7b80\u4ecb\u6ce8\u91ca\"\"\"\n    def __init__(self, \u53c2\u6570 1, \u53c2\u6570 2):\n        \"\"\"\u521d\u59cb\u5316\u51fd\u6570\"\"\"\n        super().__init__(\u53c2\u6570 1, \u53c2\u6570 2) # \u8c03\u7528\u7236\u7c7b(spuerclass)\u7684\u521d\u59cb\u5316\u51fd\u6570\n       ...\n       ...\n    def \u51fd\u6570\u540d(self):\n        \"\"\"\u540c\u540d\u51fd\u6570\u5c06\u8986\u76d6\u7236\u7c7b\u51fd\u6570\"\"\"\n        ...\n        ...\n        return \u7ed3\u679c\n\nform \u6a21\u5757\u540d import \u7c7b\u540d 1, \u7c7b\u540d 2 # \u5bfc\u5165\u6a21\u5757\u4e2d\u7684\u7c7b\n... # \u540c\u51fd\u6570\n</code></pre> <ul> <li>\u7c7b\u540d\u7528\u5927\u9a7c\u5cf0\u547d\u540d\u6cd5</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#_12","title":"\u6587\u4ef6\u4e0e\u5f02\u5e38","text":"<pre><code># \u6587\u4ef6\nfrom pathlib import Path\npath=Path('\u6587\u4ef6\u8def\u5f84') # \u4e0d\u5b8c\u6574\u8def\u5f84\u4f1a\u5728\u672c\u76ee\u5f55\u4e0b\u627e\n# \u6ce8\u610f, \u8fd9\u53ea\u662f\u5b9a\u4f4d\u6587\u4ef6\u8def\u5f84, \u5373\u4f7f\u8fd9\u4e2a\u6587\u4ef6\u4e0d\u5b58\u5728, \u4e5f\u4e0d\u4f1a\u6709\u4efb\u4f55\u95ee\u9898\npath.touch() # \u521b\u5efa\u6587\u4ef6\npath.unlink() # \u5220\u9664\u6587\u4ef6\npath.rename('\u65b0\u6587\u4ef6\u540d') # \u91cd\u547d\u540d\u6587\u4ef6\npath.mkdir() # \u521b\u5efa\u76ee\u5f55\npath.rmdir() # \u5220\u9664\u76ee\u5f55\n\npath.exists() # \u9a8c\u8bc1\u6587\u4ef6\u662f\u5426\u5b58\u5728\n\ncontext=path.read_text().rstrip # \u8bfb\u53d6\u6587\u672c\u6587\u4ef6, \u5230\u8fbe\u6587\u4ef6\u5c3e\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32, \u56e0\u6b64\u8981\u53bb\u9664\u672b\u5c3e\u7a7a\u683c\nlines=path.read_text().splitlines() # \u8bfb\u53d6\u6587\u672c\u6587\u4ef6, \u5c06\u6587\u672c\u6309\u884c\u5206\u5272, \u8fd4\u56de\u4e00\u4e2a\u5217\u8868\n\npath.write_text(context) # \u5199\u5165\u6587\u672c\u6587\u4ef6, \u4f1a\u8986\u76d6\u539f\u6587\u4ef6\npath.write_text(context, append=True) # \u5199\u5165\u6587\u672c\u6587\u4ef6, \u4e0d\u4f1a\u8986\u76d6\u539f\u6587\u4ef6\n\n# \u5f02\u5e38\ntry:\n    ...\nexcept \u5f02\u5e38\u540d: # \u4f7f\u7528\u5185\u7f6e\u5f02\u5e38, \u81ea\u5b9a\u4e49\u5f02\u5e38\u9700\u8981\u81ea\u884c\u7f16\u5199\u5bf9\u5e94\u7c7b\n    ...\nelse:\n    ...\n\npass # \u4ec0\u4e48\u4e5f\u4e0d\u505a, \u586b\u5145\u4ee3\u7801\u5757, \u53ef\u7528\u4e8e\u9759\u9ed8\u5931\u8d25\n\n# json\nimport json\npath.write_text(json.dumps(\u6570\u636e)) # \u5c06\u6570\u636e\u5199\u5165 json \u6587\u4ef6\nname=json.loads(path.read_text()) # \u4ece json \u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#_13","title":"\u6d4b\u8bd5\u4ee3\u7801","text":"<pre><code>from \u6a21\u5757\u540d import \u51fd\u6570\u540d\ndef \u6d4b\u8bd5\u51fd\u6570():\n    \"\"\"\u6d4b\u8bd5\u51fd\u6570\u7684\u7b80\u4ecb\u6ce8\u91ca\"\"\"\n    assert \u51fd\u6570\u540d(\u503c 1, \u503c 2)==\u503c 3 # \u65ad\u8a00\u4e00\u4e2a\u5e03\u5c14\u8868\u8fbe\u5f0f\n\n#\u6d4b\u8bd5\u7c7b\u540c\u7406\n\n@pytest.fixture\ndef \u5939\u5177\u51fd\u6570():\n    \"\"\"\u5939\u5177\u51fd\u6570\u7684\u7b80\u4ecb\u6ce8\u91ca\"\"\"\n    ...\n    ...\n    return \u6d4b\u8bd5\u53c2\u6570\n\ndef \u6d4b\u8bd5\u51fd\u6570(\u5939\u5177\u51fd\u6570):\n    \"\"\"\u6d4b\u8bd5\u51fd\u6570\u7684\u7b80\u4ecb\u6ce8\u91ca\"\"\"\n    assert \u51fd\u6570\u540d(\u5939\u5177\u51fd\u6570)==\u503c # \u65ad\u8a00\u4e00\u4e2a\u5e03\u5c14\u8868\u8fbe\u5f0f\n\n# \u5939\u5177\u51fd\u6570\u4f1a\u7edf\u4e00\u8fd4\u56de\u771f\u6b63\u7684\u53c2\u6570, \u65b9\u4fbf\u4e00\u53e3\u6c14\u6d4b\u8bd5\u5f88\u591a\u51fd\u6570\u5e76\u66f4\u6539\u7528\u4f8b\n</code></pre> <ul> <li>\u7528 pip \u5b89\u88c5 pytest \u5e93</li> <li>\u6d4b\u8bd5\u4ee3\u7801\u6587\u4ef6\u6240\u5728\u76ee\u5f55\u4e0b\u7ec8\u7aef\u6267\u884c pytest \u81ea\u52a8\u6d4b\u8bd5</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/Python%E7%BC%96%E7%A8%8B/#-","title":"\u7b2c\u4e8c\u90e8\u5206 -- \u4e09\u4e2a\u9879\u76ee","text":"<ul> <li>\u4e0d\u8bb0\u5f55</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Python/%E6%B5%81%E7%95%85%E7%9A%84Python/","title":"\u6d41\u7545\u7684Python","text":"<ul> <li>Pickle</li> <li>SQLite</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/","title":"Rust \u57fa\u7840","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>Rust \u7a0b\u5e8f\u8bbe\u8ba1 - \u795e\u4e66, \u591f\u6df1\u5165 - 5</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_2","title":"\u5b89\u88c5\u73af\u5883","text":"<ul> <li>Rustup \u4e00\u952e\u5f0f\u89e3\u51b3, \u6700\u7b80\u5355\u4e00\u96c6</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_3","title":"\u7cfb\u7edf\u7a0b\u5e8f\u5458\u4e5f\u80fd\u4eab\u53d7\u7f8e\u597d","text":"<ul> <li>\u5439\u4e00\u5806 nb</li> <li>Rust \u4e0d\u4ec5\u662f\u5b9e\u73b0\u4e86\u96f6\u6210\u672c\u7684\u5783\u573e\u56de\u6536, \u540c\u65f6\u5305\u62ec\u96f6\u6210\u672c\u7684\u5e76\u884c\u5185\u5b58\u5b89\u5168</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_4","title":"\u6211\u7684\u89c2\u70b9","text":"<ul> <li>\u4efb\u4f55\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00, \u53ea\u8981\u662f\u56fe\u7075\u5b8c\u5907\u7684, \u5c31\u80fd\u63cf\u8ff0\u4e16\u754c\u4e0a\u6240\u6709\u7684\u4ee3\u7801</li> <li>Rust \u8ffd\u6c42\u7684\u7406\u5ff5, \u65e0\u975e\u5c31\u662f\u5c06\u4ee3\u7801\u9650\u5236\u4e8e\u4e00\u4e2a\u8f83\u5c0f\u7684\u5b50\u96c6</li> <li>\u6070\u597d\u80fd\u591f\u4fdd\u8bc1\u901a\u8fc7\u9759\u6001\u5206\u6790\u7684\u65b9\u6cd5\u5c31\u80fd\u5b9e\u73b0\u5185\u5b58\u5b89\u5168\u7684\u540c\u65f6, \u80fd\u591f\u62e5\u6709\u8db3\u591f\u5f3a\u7684\u7075\u6d3b\u6027\u4e0e\u8868\u8fbe\u529b</li> <li>\u9664\u6b64\u4e4b\u5916, \u4ed6\u8fd8\u878d\u5165\u4e86\u5927\u91cf\u5df2\u7ecf\u5e7f\u6cdb\u4f7f\u7528\u7684\u96f6\u6210\u672c\u62bd\u8c61</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#rust_1","title":"Rust \u5bfc\u89c8","text":"<ul> <li>Rust \u786e\u5b9e\u62e5\u6709\u975e\u5e38\u4f18\u79c0\u7684\u4e00\u4e2a\u5de5\u5177\u94fe</li> <li>cargo \u63d0\u4f9b\u4e86\u4e00\u4e9b\u89c4\u8303\u6027\u7684\u9879\u76ee\u7ed3\u6784, \u8fd9\u5f80\u5f80\u6211\u4eec\u8ba4\u4e3a\u662f\u6846\u67b6\u5f53\u4e2d\u5e94\u8be5\u63d0\u4f9b\u7684</li> <li>\u4ee5\u53ca\u975e\u5e38\u4f18\u79c0\u7684\u5305\u7ba1\u7406, \u975e\u5e38\u4f18\u79c0\u7684\u6784\u5efa, \u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u4ee3\u66ff make</li> <li>\u4e00\u4e2a Rust \u5305, \u79f0\u4e3a\u4e00\u4e2a crate</li> </ul> <pre><code>[package]\nname = \"hello_world\"\nversion = \"0.1.0\"\nedition = \"2018\"\n\n[dependencies]\n... = \"1.0.0\"\n</code></pre> <ul> <li>\u8be6\u89c1 The Cargo Book</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_5","title":"\u51fd\u6570","text":"<pre><code>fn add(mut a:i32, b:i32) -&gt; i32 {\n    println!(\"Hello, world!\");\n}\n</code></pre> <ul> <li><code>mut</code> \u8868\u793a\u53ef\u53d8\u53c2\u6570, \u9ed8\u8ba4\u4e3a\u4e0d\u53ef\u53d8</li> <li><code>assert!()</code> \u8868\u793a\u65ad\u8a00, \u7528\u4e8e\u8c03\u8bd5, \u5176\u4e2d, <code>!</code> \u8868\u793a\u4e3a\u5b8f\u8c03\u7528</li> </ul> <pre><code>{\n    ...;\n    m // \u4efb\u610f\u4ee5 {} \u5305\u4f4f\u7684\u4ee3\u7801\u5757\u90fd\u53ef\u4ee5\u7528\u4f5c\u8868\u8fbe\u5f0f, \n      // \u82e5\u4ee5\u6ca1\u6709\u5c3e\u968f\u7740\u5206\u53f7\u7684\u8868\u8fbe\u5f0f\u7ed3\u5c3e, \u5219\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u5c31\u662f\u6574\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\n      // \u5982\u679c\u6ca1\u6709\u8fd9\u4e2a\u7ed3\u5c3e\u65e0\u5206\u53f7\u8868\u8fbe\u5f0f\u7684\u8bdd, \u5219\u8fd9\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u5c31\u662f \"()\"\n}\n</code></pre> <ul> <li>Rust \u5b58\u5728 <code>return</code> , \u9002\u7528\u4e8e\u5728\u51fd\u6570\u4e2d\u63d0\u524d\u8fd4\u56de</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_6","title":"\u5c5e\u6027","text":"<ul> <li>Rust \u5c5e\u6027, \u7c7b\u4f3c Jave \u6ce8\u89e3</li> </ul> <pre><code>#[test] // debug \u65f6\u8fd0\u884c, \u53d1\u5e03\u65f6\u5ffd\u7565\nfn test_add() -&gt; () {\n    assert_eq!(add(1, 2), 3);\n}\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_7","title":"\u7279\u578b","text":"<ul> <li>\u7c7b\u4f3c\u63a5\u53e3, \u4efb\u610f\u7c7b\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u7279\u578b, \u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u7279\u578b\u7684\u65b9\u6cd5</li> <li>\u4f7f\u7528 <code>use</code> \u5173\u952e\u5b57\u5f15\u5165\u7279\u578b\u4e0e\u6a21\u5757</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#result-option","title":"<code>Result</code> \u4e0e <code>Option</code>","text":"<ul> <li>\u4e24\u4e2a\u679a\u4e3e\u7c7b\u578b</li> <li><code>Result</code> \u8868\u793a\u6210\u529f\u6216\u5931\u8d25, \u6210\u529f\u5219\u8fd4\u56de <code>Ok(T)</code>, \u5931\u8d25\u5219\u8fd4\u56de <code>Err(E)</code></li> <li><code>Option</code> \u8868\u793a\u53ef\u9009\u503c, \u6709\u503c\u5219\u8fd4\u56de <code>Some(T)</code>, \u65e0\u503c\u5219\u8fd4\u56de <code>None</code></li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_8","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b","text":"<ul> <li>Rust \u62e5\u6709\u7b80\u5355\u7684\u7c7b\u578b\u63a8\u65ad\u548c\u6cdb\u578b\u51fd\u6570, \u8fd9\u79cd\u6cdb\u578b\u4e5f\u662f\u96f6\u6210\u672c\u62bd\u8c61</li> <li>Rust \u51e0\u4e4e\u4e0d\u4f1a\u8fdb\u884c\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362, \u53ef\u4ee5\u4f7f\u7528 <code>num as type</code> \u53bb\u8fdb\u884c\u663e\u793a\u8f6c\u6362</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_9","title":"\u56fa\u5b9a\u5bbd\u5ea6\u7684\u6570\u503c\u7c7b\u578b","text":"<ul> <li>u8-u128, i8-i128, f32-f64, \u663e\u800c\u6613\u89c1, \u975e\u5e38\u723d</li> <li>usize \u4e0e isize \u8868\u793a\u4e0e\u5f53\u524d\u673a\u5668\u5b57\u7b49\u5bbd\u7684\u7c7b\u578b</li> <li>\u5728\u5b57\u9762\u503c\u5f53\u4e2d\u53ef\u4ee5\u6307\u5b9a\u7c7b\u578b, \u5982\u679c\u6ca1\u6709\u6307\u5b9a, \u4f1a\u8fdb\u884c\u7c7b\u578b\u63a8\u65ad, \u6709\u591a\u79cd\u5019\u9009\u7c7b\u578b, \u9ed8\u8ba4\u4f7f\u7528 i32, \u65e0\u6cd5\u8ba4\u5b9a\u5219\u62a5\u9519</li> <li>0x, 0o, 0b \u4f5c\u4e3a\u8fdb\u5236\u524d\u7f00</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_10","title":"\u64cd\u4f5c","text":"<ul> <li><code>(-4).abs()</code> \u662f\u9519\u8bef\u7684, \u56e0\u4e3a\u65e0\u6cd5\u8fdb\u884c\u4efb\u4f55\u7c7b\u578b\u63a8\u65ad</li> <li><code>-4i32.abs()</code> \u53ef\u80fd\u4e0e\u4f60\u7684\u9884\u671f\u4e0d\u7b26, \u65b9\u6cd5\u7684\u4f18\u5148\u7ea7\u5927\u4e8e\u4e00\u5143\u8fd0\u7b97\u7b26</li> <li><code>(-4i32).abs()</code> \u4e0e <code>i32::abs(-4)</code> \u53ef\u80fd\u8fbe\u5230\u4f60\u7684\u9884\u671f</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_11","title":"\u6ea2\u51fa","text":"<ul> <li>\u5f53\u4f60\u8fdb\u884c\u8c03\u8bd5\u6784\u5efa\u7684\u65f6\u5019, \u6574\u6570\u8fd0\u7b97\u6ea2\u51fa\u4f1a\u4ea7\u751f\u4e00\u4e2a panic \u6216\u8005\u8bf4 'error'</li> <li>\u4f46\u5728\u53d1\u5e03\u6784\u5efa\u5f53\u4e2d, \u4f1a\u53d1\u751f\u56de\u7ed5, \u4e5f\u5c31\u662f\u8bf4\u6b63\u786e\u7684\u7ed3\u679c\u5bf9\u7c7b\u578b\u8303\u56f4\u7684\u53d6\u6a21</li> <li>\u6574\u578b\u63d0\u4f9b\u65b9\u6cd5\u53bb\u7981\u6b62\u8fd9\u4e9b\u884c\u4e3a<ul> <li><code>checked_</code> \u65b9\u6cd5, \u7ed3\u679c\u6b63\u786e\u8fd4\u56de <code>Some(result)</code>, \u7ed3\u679c\u4e0d\u6b63\u786e\u5219\u4e3a <code>None</code></li> <li><code>wrapping_</code> \u65b9\u6cd5, \u7ed3\u679c\u6b63\u786e\u8fd4\u56de <code>result</code>, \u7ed3\u679c\u4e0d\u6b63\u786e\u5219\u56de\u7ed5</li> <li><code>saturating_</code> \u65b9\u6cd5, \u7ed3\u679c\u6b63\u786e\u8fd4\u56de <code>result</code>, \u7ed3\u679c\u4e0d\u6b63\u786e\u5219\u8fd4\u56de\u8fb9\u754c\u503c</li> <li><code>overflowing_</code> \u65b9\u6cd5, \u7ed3\u679c\u6b63\u786e\u8fd4\u56de <code>(result, false)</code>, \u7ed3\u679c\u4e0d\u6b63\u786e\u5219\u8fd4\u56de <code>(result, true)</code><ul> <li>\u6ce8\u610f\u4e0d\u5b58\u5728\u9971\u548c\u9664\u6cd5, \u6c42\u4f59\u6cd5\u548c\u4f4d\u79fb\u6cd5</li> </ul> </li> </ul> </li> <li>\u8fd9\u4e9b\u524d\u7f00\u652f\u6301\u4ee5\u4e0b\u51e0\u79cd\u8fd0\u7b97\u540e\u7f00<ul> <li><code>add</code>, <code>sub</code>, <code>mul</code>, <code>div</code>, <code>rem</code>, <code>shl</code>, <code>shr</code></li> <li><code>neg</code> (\u53d6\u53cd), <code>abs</code>, <code>pow</code></li> </ul> </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_12","title":"\u6d6e\u70b9\u7c7b\u578b","text":"<ul> <li>f32/f63 \u7cbe\u5ea6\u81f3\u5c11\u4e3a 6/15 \u4f4d</li> <li>\u6d6e\u70b9\u6570\u7684\u5b57\u9762\u91cf\u7c7b\u578b\u884c\u4e3a\u4e0e\u6574\u578b\u5dee\u4e0d\u591a, \u9ed8\u8ba4\u7c7b\u578b\u662f f64</li> <li>\u7279\u522b\u7684, \u5b57\u9762\u91cf\u5305\u542b <code>MIN</code>, <code>MAX</code>, <code>NEG_INFINITY</code>, <code>INFINITY</code>, <code>NAN</code></li> <li>\u6d6e\u70b9\u6570\u63d0\u4f9b\u4e00\u4e9b\u65b9\u6cd5, \u6bd4\u5982 <code>sqrt</code></li> <li><code>std::f32::consts</code> \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5e38\u91cf, \u6bd4\u5982 <code>PI</code>, <code>E</code></li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_13","title":"\u5e03\u5c14\u7c7b\u578b","text":"<ul> <li>\u53ea\u6709\u4e24\u4e2a\u503c, <code>true</code> \u548c <code>false</code></li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_14","title":"\u5b57\u7b26\u7c7b\u578b","text":"<ul> <li>\u5b57\u7b26\u7c7b\u578b\u4e0e\u6574\u578b\u622a\u7136\u4e0d\u540c</li> <li>\u5b57\u7b26\u7c7b\u578b\u662f <code>char</code>, \u5360 4 \u5b57\u8282, \u53ef\u4ee5\u8868\u793a\u4efb\u4f55 Unicode \u5b57\u7b26</li> <li>\u8f6c\u4e49\u5b57\u7b26\u662f\u6709\u6548\u7684, \u5982<code>'\\n'</code>, <code>'\\xHH'</code> (HH \u662f\u4efb\u610f\u4e24\u4f4d\u5341\u516d\u8fdb\u5236\u6570)</li> <li>\u7279\u522b\u7684, \u53ef\u4ee5\u4f7f\u7528 <code>b'c'</code> \u53bb\u8868\u793a\u4e00\u4e2a u8 \u5b57\u9762\u91cf (\u4ec5\u9650 ASCII \u7801)<ul> <li>u8 \u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528 <code>as</code> \u8f6c\u6362\u4e3a char</li> <li>char \u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528 <code>as</code> \u8f6c\u6362\u4e3a \u6574\u578b (\u53ef\u80fd\u622a\u65ad)</li> </ul> </li> <li><code>std::char::from_u32</code> \u65b9\u6cd5\u53ef\u4ee5\u5c06 u32 \u8f6c\u6362\u4e3a char<ul> <li>\u5176\u8fd4\u56de\u503c\u662f <code>Option&lt;char&gt;</code> (<code>Some(char)</code> \u6216\u8005 <code>None</code>)</li> </ul> </li> <li><code>string</code> \u662f UTF-8 \u5b57\u8282\u5e8f\u5217\u800c\u975e char \u6570\u7ec4</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_15","title":"\u5143\u7ec4\u7c7b\u578b","text":"<ul> <li>\u5143\u7ec4\u7c7b\u578b\u7c7b\u4f3c\u4e0e\u7ed3\u6784\u4f53, \u5176\u7c7b\u578b\u8868\u8fbe\u4e3a <code>(T1, T2, ..., Tn)</code></li> <li>\u5143\u7ec4\u7c7b\u578b\u53ef\u4ee5\u4f7f\u7528 <code>let</code> \u8fdb\u884c\u89e3\u6784, \u5982 <code>let (x, y) = (1, 2)</code></li> <li>\u5bf9\u4e8e\u4e00\u4e2a\u5143\u7ec4\u5bf9\u8c61 <code>name.0</code> \u53ef\u4ee5\u8bbf\u95ee\u5176\u7b2c 0 \u4e2a\u5143\u7d20, \u4ee5\u6b64\u7c7b\u63a8<ul> <li><code>name.i</code> \u662f\u4e0d\u5408\u6cd5\u7684</li> </ul> </li> <li><code>()</code> \u8868\u793a\u4e00\u4e2a\u7a7a\u5143\u7ec4, \u5176\u7c7b\u578b\u4e3a <code>()</code>, \u7c7b\u4f3c\u4e8e <code>void</code></li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_16","title":"\u6307\u9488\u7c7b\u578b","text":"<ul> <li>Rust \u65e8\u5728\u5c06\u5185\u5b58\u5206\u914d\u4fdd\u6301\u5728\u6700\u4f4e\u9650\u5ea6, \u5982 <code>((10, 20), (30, 40))</code> \u7b49\u6548\u4e8e <code>(10, 20, 30, 40)</code></li> <li>Rust \u63d0\u4f9b\u4e86 <code>&amp;</code> \u5f15\u7528\u7c7b\u578b, \u5176\u884c\u4e3a\u7c7b\u4f3c\u6307\u9488, \u79f0 <code>&amp;x</code> \u662f\u501f\u7528\u4e86\u5bf9 x \u7684\u5f15\u7528</li> <li>Rust \u6709\u4e24\u79cd\u5f15\u7528, \u5b83\u4eec\u662f\u4e92\u65a5\u7684, \u53ea\u80fd\u4e8c\u9009\u4e00, \u5206\u522b\u662f\u5171\u7528\u5f15\u7528\u548c\u53ef\u53d8\u5f15\u7528<ul> <li><code>&amp;x</code> \u662f\u5171\u7528\u5f15\u7528, \u53ef\u4ee5\u88ab\u591a\u4e2a\u5f15\u7528\u540c\u65f6\u62e5\u6709</li> <li><code>&amp;mut x</code> \u662f\u53ef\u53d8\u5f15\u7528, \u53ea\u80fd\u6709\u4e00\u4e2a\u5f15\u7528\u62e5\u6709</li> </ul> </li> <li><code>let a = Box::new(10);</code> \u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5806\u4e0a\u7684\u5bf9\u8c61, \u5176\u7c7b\u578b\u4e3a <code>Box&lt;T&gt;</code><ul> <li><code>Box&lt;T&gt;</code> \u662f\u4e00\u4e2a\u667a\u80fd\u6307\u9488, \u5176\u884c\u4e3a\u7c7b\u4f3c\u6307\u9488, \u4f46\u5176\u53ef\u4ee5\u81ea\u52a8\u91ca\u653e</li> <li>\u9664\u975e <code>Box&lt;T&gt;</code> \u88ab\u79fb\u52a8 (move)</li> </ul> </li> <li>\u5bf9\u4e8e\u88f8\u6307\u9488 <code>*const T</code> \u548c <code>*mut T</code>, \u89e3\u5f15\u7528\u65f6\u9700\u8981\u4f7f\u7528 <code>unsafe</code></li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_17","title":"\u6570\u7ec4, \u5411\u91cf\u548c\u5207\u7247","text":"<ul> <li>\u6570\u7ec4\u662f\u56fa\u5b9a\u957f\u5ea6\u7684\u5e8f\u5217, \u5176\u7c7b\u578b\u4e3a <code>[T; n]</code>, \u5176\u4e2d <code>n</code> \u662f\u4e00\u4e2a\u5e38\u91cf\u8868\u8fbe\u5f0f</li> <li>\u5411\u91cf\u662f\u53ef\u53d8\u957f\u5ea6\u7684\u5e8f\u5217, \u5176\u7c7b\u578b\u4e3a <code>Vec&lt;T&gt;</code>, \u5176\u5143\u7d20\u5b58\u5728\u4e8e\u5806\u4e0a</li> <li>\u5207\u7247\u662f\u5bf9\u4e00\u7cfb\u5217\u503c\u7684\u5f15\u7528, \u5176\u7c7b\u578b\u5f53\u7136\u4e5f\u5305\u62ec <code>&amp;mut [T]</code> \u4e0e <code>&amp;[T]</code></li> <li>\u5207\u7247\u4ece\u6570\u7ec4\u6216\u5411\u91cf\u7684\u67d0\u4e00\u70b9\u5f00\u59cb, \u4e00\u76f4\u5230\u5b83\u7684\u7ed3\u675f</li> </ul> <pre><code>let a = [1, 2, 3, 4, 5]; // \u521d\u59cb\u5316\u4e00\u4e2a\u6570\u7ec4\nlet b = [0u8; 10]; // \u521d\u59cb\u5316\u4e00\u4e2a\u957f\u5ea6\u4e3a 10 \u7684\u6570\u7ec4, \u6240\u6709\u5143\u7d20\u4e3a 0\n\nfor i in 0..a.len() { // \u904d\u5386\u6570\u7ec4\n    a[i] = i as u8;\n}\n\nif a[0] == 0 { // \u8bbf\u95ee\u6570\u7ec4\u5143\u7d20\n    a[0] = 1;\n}\n\n```rust\nlet mut v = Vec::new(); // \u521d\u59cb\u5316\u4e00\u4e2a\u5411\u91cf\nlet mut v = vec![1, 2, 3]; // \u521d\u59cb\u5316\u4e00\u4e2a\u5411\u91cf, \u5e76\u6dfb\u52a0\u5143\u7d20\nlet mut v = vec![0u8; 10]; // \u521d\u59cb\u5316\u4e00\u4e2a\u957f\u5ea6\u4e3a 10 \u7684\u5411\u91cf, \u6240\u6709\u5143\u7d20\u4e3a 0\nlet v: Vec&lt;u8&gt; = (0..10).collect(); // \u521d\u59cb\u5316\u4e00\u4e2a\u5411\u91cf, collect() \u8868\u793a\u5c06\u5143\u7ec4\u8fed\u4ee3\u5668\u7684\u6240\u6709\u5143\u7d20\u6536\u96c6\u5230\u4e00\u4e2a\u5411\u91cf\u4e2d\nlet mut v = Vec::with_capacity(10); // \u521d\u59cb\u5316\u4e00\u4e2a\u5bb9\u91cf\u4e3a 10 \u7684\u5411\u91cf\n\nv.push(1); // \u5411\u5411\u91cf\u4e2d\u6dfb\u52a0\u5143\u7d20\nv.pop(); // \u5f39\u51fa\u5411\u91cf\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n\nv.len(); // \u83b7\u53d6\u5411\u91cf\u7684\u957f\u5ea6\nv.capacity(); // \u83b7\u53d6\u5411\u91cf\u7684\u5bb9\u91cf\n\nv.is_empty(); // \u5224\u65ad\u5411\u91cf\u662f\u5426\u4e3a\u7a7a\nv.clear(); // \u6e05\u7a7a\u5411\u91cf\n\nv.insert(0, 1); // \u63d2\u5165\u5143\u7d20\u5230\u5411\u91cf\u7684\u7b2c 0 \u4e2a\u4f4d\u7f6e\nv.remove(0); // \u79fb\u9664\u5411\u91cf\u7684\u7b2c 0 \u4e2a\u5143\u7d20\n</code></pre> <ul> <li>\u5411\u91cf\u672c\u8d28\u5305\u542b\u4e00\u4e2a\u6307\u9488, \u4e00\u4e2a\u957f\u5ea6, \u4e00\u4e2a\u5bb9\u91cf</li> <li>\u5f53\u5411\u91cf\u7684\u957f\u5ea6\u8d85\u8fc7\u5bb9\u91cf\u65f6, \u5411\u91cf\u4f1a\u9500\u6bc1\u7f13\u51b2\u533a, \u5e76\u91cd\u65b0\u5206\u914d\u4e00\u4e2a\u66f4\u5927\u7684\u7f13\u51b2\u533a</li> <li>Vec \u4e0d\u662f\u5185\u7f6e\u7c7b\u578b</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_18","title":"\u5b57\u7b26\u4e32","text":"<ul> <li>Rust \u63d0\u4f9b\u4e86\u4e24\u79cd\u5b57\u7b26\u4e32\u7c7b\u578b, \u5206\u522b\u662f <code>String</code> \u548c <code>&amp;str</code></li> </ul> <pre><code>let s = \"Hello, world!\"; // \u521d\u59cb\u5316\u4e00\u4e2a\u5b57\u7b26\u4e32\nlet s = \"Hello, w \\ // \u6ce8\u610f\u5148\u5bfc\u7a7a\u683c\n    orld!\" // \u7b49\u6548\nlet s = \"Hello, \n    world!\" // \u4f1a\u4fdd\u7559\u6362\u884c\u7b26\n\nlet s = r#\"...\"# // \u539f\u59cb\u5b57\u7b26\u4e32, \u4e0d\u4f1a\u8f6c\u4e49\n// \u4efb\u610f\u6570\u91cf\u7684 # \u6807\u8bc6\u8fb9\u754c, \u4ee5\u5728\u539f\u59cb\u5b57\u7b26\u4e32\u5f53\u4e2d\u4f7f\u7528 \" \u548c #\n\n// \u5b57\u8282\u4e32\nlet s = b\"Hello, world!\"; // &amp;[u8; n] \u7c7b\u578b\n</code></pre> <ul> <li>\u5185\u5b58\u4e2d\u4f7f\u7528 UTF-8 \u7f16\u7801\u8868\u793a\u5b57\u7b26\u4e32, \u5176\u5355\u5b57\u7b26\u7684\u957f\u5ea6\u53ef\u4ee5\u662f 1 \u5230 4 \u5b57\u8282</li> <li>String \u7c7b\u578b\u7c7b\u4f3c <code>Vec&lt;u8&gt;</code>, &amp;str \u7c7b\u578b\u7c7b\u4f3c <code>&amp;[u8]</code></li> <li>&amp;str \u5bf9\u4e8e\u9884\u5206\u914d\u6587\u672c\u884c\u4e3a\u7c7b\u4f3c C \u4e2d\u7684\u5b57\u7b26\u4e32\u5b57\u9762\u91cf</li> </ul> <pre><code>let s = \"Hello, world!\".to_string(); // \u5c06\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u8f6c\u6362\u4e3a String\nlet s = format!(\"Hello, {}!\", \"world\"); // \u5c06\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u8f6c\u6362\u4e3a String\n\n// ss \u4e3a\u5b57\u7b26\u4e32\u7684\u6570\u7ec4, \u5411\u91cf, \u5207\u7247\nlet s = ss.join(\", \"); // \u5c06\u5b57\u7b26\u4e32\u6570\u7ec4, \u5411\u91cf, \u5207\u7247\u8fde\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\nlet s = ss.concat(); // \u5c06\u5b57\u7b26\u4e32\u6570\u7ec4, \u5411\u91cf, \u5207\u7247\u8fde\u63a5\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\n</code></pre> <ul> <li>\u5b57\u7b26\u4e32\u53ef\u4ee5\u4f7f\u7528 <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>&gt;</code>, <code>&gt;=</code> \u8fdb\u884c\u6bd4\u8f83</li> <li>\u4f46\u5176\u884c\u4e3a\u56e0\u4e3a Unicode \u7684\u6027\u8d28\u5e76\u4e0d\u603b\u7b26\u5408\u4f60\u7684\u9884\u671f</li> <li>\u7279\u522b\u7684, Rust \u4e3a C \u5b57\u7b26\u4e32 / OsString / \u6587\u4ef6\u540d\u63d0\u4f9b\u4e86\u4e00\u4e9b\u4e13\u7528\u7684\u7c7b\u578b</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_19","title":"\u7c7b\u578b\u522b\u540d","text":"<ul> <li><code>type name = Vec&lt;u8&gt;</code> \u53ef\u4ee5\u5b9a\u4e49\u7c7b\u578b\u522b\u540d</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_20","title":"\u6240\u6709\u6743\u4e0e\u79fb\u52a8","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Rust/Rust/#_21","title":"Rust\u7a0b\u5e8f\u8bbe\u8ba1","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Zig/Zig/","title":"Zig","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/Zig/Zig/#_1","title":"\u53c2\u8003","text":"<ul> <li>Zig \u5b98\u65b9\u6587\u6863 \u6ca1\u522b\u7684\u4e86 4</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/HeadFirst%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/","title":"\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u4e0e\u5206\u6790","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/HeadFirst%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>HeadFirst \u9762\u5411\u5bf9\u8c61\u5206\u6790\u4e0e\u8bbe\u8ba1 - ... - </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/HeadFirst%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/#tips","title":"Tips","text":"<ul> <li>\u679a\u4e3e\u7c7b\u578b\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u4e0e\u503c\u68c0\u67e5</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/HeadFirst%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/#_3","title":"\u5206\u6790","text":"<ul> <li>\u6316\u6398\u9700\u6c42</li> <li>\u7f16\u5199\u6d4b\u8bd5\u6837\u4f8b</li> <li>\u6d4b\u8bd5\u9a71\u52a8\u5f00\u53d1</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/HeadFirst%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E5%88%86%E6%9E%90%E4%B8%8E%E8%AE%BE%E8%AE%A1/#_4","title":"\u8bbe\u8ba1","text":"<ul> <li>\u5982\u679c\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\u603b\u6709\u4e00\u4e9b\u503c\u4e3a NULL, \u90a3\u4e0d\u59a8\u5c06\u5e38\u7528\u5b50\u96c6\u62bd\u8c61\u4e3a\u4e00\u4e2a\u7c7b, \u539f\u7c7b\u578b\u7ee7\u627f / \u4f9d\u8d56\u6b64\u7c7b</li> <li>\u89e3\u8026\u7684\u5173\u952e\u662f\u5c06\u4e0d\u5c5e\u4e8e\u81ea\u5df1\u7684\u804c\u8d23\u59d4\u6258</li> <li></li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/","title":"\u8f6f\u4ef6\u5206\u6790","text":"<p>\u95ee deepseek v3 \u4e0d\u592a\u597d\u7406\u89e3, \u4f46\u53ef\u4ee5\u4e00\u76f4\u95ee 3</p>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_1","title":"\u57fa\u4e8e\u62bd\u8c61\u89e3\u91ca\u7684\u5206\u6790","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_2","title":"\u6570\u636e\u6d41\u5206\u6790","text":"<ul> <li>\u5206\u6790\u7a0b\u5e8f\u4e2d\u6570\u636e\u7684\u6d41\u52a8\u60c5\u51b5, \u4f8b\u5982\u53d8\u91cf\u7684\u8d4b\u503c \u4f7f\u7528\u7b49, \u4ee5\u786e\u5b9a\u6570\u636e\u7684\u4f20\u64ad\u8def\u5f84\u548c\u6f5c\u5728\u95ee\u9898</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#control-flow-graph-cfg","title":"\u63a7\u5236\u6d41\u56fe(Control Flow Graph, CFG)","text":"<ul> <li>\u5c06\u7a0b\u5e8f\u5206\u89e3\u4e3a\u57fa\u672c\u5757(Basic Blocks), \u5e76\u901a\u8fc7\u8fb9\u8868\u793a\u63a7\u5236\u6d41, \u6bcf\u4e2a\u57fa\u672c\u5757\u662f\u4e00\u4e2a\u8fde\u7eed\u7684\u8bed\u53e5\u5e8f\u5217, \u53ea\u6709\u4e00\u4e2a\u5165\u53e3\u548c\u4e00\u4e2a\u51fa\u53e3</li> <li>\u8282\u70b9:\u57fa\u672c\u5757 </li> <li>\u8fb9:\u57fa\u672c\u5757\u4e4b\u95f4\u7684\u63a7\u5236\u6d41\u8f6c\u79fb(\u5982\u6761\u4ef6\u5206\u652f \u5faa\u73af) </li> <li>\u6570\u636e\u6d41\u5206\u6790\u7684\u7cbe\u5ea6\u548c\u6548\u7387\u53d6\u51b3\u4e8e\u662f\u5426\u8003\u8651\u63a7\u5236\u6d41\u987a\u5e8f \u51fd\u6570\u8c03\u7528\u4e0a\u4e0b\u6587 \u8def\u5f84\u6761\u4ef6\u7b49\u56e0\u7d20</li> <li>\u6570\u636e\u6d41\u5206\u6790\u8fc7\u7a0b:</li> <li>\u4e3a\u6bcf\u4e2a\u7a0b\u5e8f\u70b9\u521d\u59cb\u5316\u6570\u636e\u6d41\u5c5e\u6027(\u5982\u7a7a\u96c6 \u672a\u77e5\u503c) </li> <li>\u904d\u5386\u63a7\u5236\u6d41\u56fe, \u5e94\u7528\u4f20\u9012\u51fd\u6570\u548c\u4ea4\u6c47\u64cd\u4f5c\u66f4\u65b0\u6570\u636e\u6d41\u5c5e\u6027, \u76f4\u5230\u6570\u636e\u6d41\u5c5e\u6027\u4e0d\u518d\u53d8\u5316(\u5373\u8fbe\u5230\u4e0d\u52a8\u70b9) </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_3","title":"\u6570\u636e\u6d41\u5c5e\u6027","text":"<p>\u6570\u636e\u6d41\u5206\u6790\u7684\u76ee\u6807\u662f\u63a8\u5bfc\u7a0b\u5e8f\u70b9(Program Points)\u4e0a\u7684\u6570\u636e\u6d41\u5c5e\u6027 \u5e38\u89c1\u7684\u6570\u636e\u6d41\u5c5e\u6027\u5305\u62ec</p>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_4","title":"\u524d\u5411\u6570\u636e\u6d41\u5206\u6790","text":"<ul> <li>\u53ef\u8fbe\u5b9a\u4e49(Reaching Definitions):\u67d0\u4e2a\u53d8\u91cf\u7684\u5b9a\u4e49\u662f\u5426\u80fd\u591f\u5230\u8fbe\u67d0\u4e2a\u7a0b\u5e8f\u70b9(\u4f5c\u7528\u57df)</li> <li>\u53ef\u80fd/\u80af\u5b9a\u5df2\u5b9a\u4e49(PD/DD): \u4e86\u89e3\u88ab\u4f7f\u7528\u53d8\u91cf\u662f\u5426\u88ab\u5b9a\u4e49</li> <li>\u53ef\u7528\u8868\u8fbe\u5f0f(Available Expressions):\u67d0\u4e2a\u8868\u8fbe\u5f0f\u5728\u67d0\u4e2a\u7a0b\u5e8f\u70b9\u662f\u5426\u5df2\u7ecf\u88ab\u8ba1\u7b97\u8fc7\u4e14\u672a\u88ab\u4fee\u6539(\u91cd\u590d\u5229\u7528)</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_5","title":"\u540e\u5411\u6570\u636e\u6d41\u5206\u6790","text":"<ul> <li>\u9884\u671f\u6267\u884c(AE): \u4e86\u89e3\u4e00\u5b9a\u4f1a\u6267\u884c\u7684\u8bed\u53e5</li> <li>\u6d3b\u8dc3\u53d8\u91cf(Live Variables):\u67d0\u4e2a\u53d8\u91cf\u5728\u67d0\u4e2a\u7a0b\u5e8f\u70b9\u662f\u5426\u53ef\u80fd\u88ab\u540e\u7eed\u4f7f\u7528(\u751f\u5b58\u5468\u671f)</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_6","title":"\u7686\u53ef","text":"<ul> <li>\u5b9a\u503c-\u4f7f\u7528\u94fe(DF \u94fe): \u4e86\u89e3\u53d8\u91cf\u5728\u54ea\u4e9b\u7a0b\u5e8f\u70b9\u88ab\u5b9a\u4e49-\u4f7f\u7528</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_7","title":"\u6570\u636e\u6d41\u65b9\u7a0b","text":"<p>\u6570\u636e\u6d41\u5206\u6790\u901a\u8fc7\u5efa\u7acb\u548c\u6c42\u89e3\u6570\u636e\u6d41\u65b9\u7a0b\u6765\u63a8\u5bfc\u6570\u636e\u6d41\u5c5e\u6027 \u6570\u636e\u6d41\u65b9\u7a0b\u901a\u5e38\u5305\u62ec</p> <ul> <li>\u4f20\u9012\u51fd\u6570(Transfer Function):\u63cf\u8ff0\u57fa\u672c\u5757\u5982\u4f55\u6539\u53d8\u6570\u636e\u6d41\u5c5e\u6027 </li> <li>\u4ea4\u6c47\u64cd\u4f5c(Meet Operator):\u63cf\u8ff0\u591a\u4e2a\u63a7\u5236\u6d41\u8def\u5f84\u5982\u4f55\u5408\u5e76\u6570\u636e\u6d41\u5c5e\u6027 </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_8","title":"\u8fc7\u7a0b\u95f4\u5206\u6790","text":"<ul> <li>\u5206\u6790\u7a0b\u5e8f\u4e2d\u4e0d\u540c\u8fc7\u7a0b(\u51fd\u6570 \u6a21\u5757\u7b49)\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\u548c\u6570\u636e\u4ea4\u4e92, \u4ee5\u7406\u89e3\u6574\u4e2a\u7a0b\u5e8f\u7684\u884c\u4e3a </li> <li>\u8fc7\u7a0b\u95f4\u5206\u6790\u5206\u6790\u6574\u4e2a\u7a0b\u5e8f, \u5305\u62ec\u51fd\u6570\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb\u548c\u53c2\u6570\u4f20\u9012, \u8fc7\u7a0b\u5185\u5206\u6790\u53cd\u4e4b</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#call-graph","title":"\u8c03\u7528\u56fe(Call Graph)","text":"<ul> <li>\u8c03\u7528\u56fe\u662f\u8fc7\u7a0b\u95f4\u5206\u6790\u7684\u57fa\u7840, \u8868\u793a\u51fd\u6570\u4e4b\u95f4\u7684\u8c03\u7528\u5173\u7cfb</li> <li>\u8282\u70b9:\u51fd\u6570</li> <li>\u8fb9:\u51fd\u6570\u8c03\u7528(\u5982 <code>A -&gt; B</code> \u8868\u793a\u51fd\u6570 <code>A</code> \u8c03\u7528\u51fd\u6570 <code>B</code>)</li> <li>\u8c03\u7528\u56fe\u7684\u6784\u5efa\u53ef\u80fd\u96be\u4ee5\u9759\u6001\u786e\u5b9a(\u52a8\u6001\u8bed\u8a00), \u90e8\u5206\u53ef\u4ee5\u6307\u5411\u5206\u6790(\u865a\u51fd\u6570)</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_9","title":"\u8fc7\u7a0b\u95f4\u5206\u6790\u7684\u6280\u672f","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_10","title":"\u514b\u9686","text":"<ul> <li>\u5c06\u88ab\u8c03\u7528\u7684\u51fd\u6570\u590d\u5236\u5230\u8c03\u7528\u70b9(\u5185\u8054)</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_11","title":"\u6458\u8981","text":"<ul> <li>\u5bf9\u88ab\u8c03\u7528\u7684\u51fd\u6570\u8fdb\u884c\u62bd\u8c61, \u8f93\u5165-&gt;\u8f93\u51fa</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_12","title":"\u4e0a\u4e0b\u6587\u654f\u611f\u5206\u6790","text":"<ul> <li>\u8c03\u7528\u70b9\u654f\u611f(Call-Site Sensitivity):\u4e3a\u6bcf\u4e2a\u8c03\u7528\u70b9\u521b\u5efa\u72ec\u7acb\u7684\u4e0a\u4e0b\u6587 </li> <li>\u5bf9\u8c61\u654f\u611f(Object Sensitivity):\u4e3a\u6bcf\u4e2a\u5bf9\u8c61\u521b\u5efa\u72ec\u7acb\u7684\u4e0a\u4e0b\u6587(\u9002\u7528\u4e8e\u9762\u5411\u5bf9\u8c61\u8bed\u8a00) </li> <li>\u7c7b\u578b\u654f\u611f(Type Sensitivity):\u4e3a\u6bcf\u4e2a\u7c7b\u578b\u521b\u5efa\u72ec\u7acb\u7684\u4e0a\u4e0b\u6587 </li> <li>\u7c7b\u6bd4\u53ef\u77e5.\u5177\u4f53\u60c5\u51b5\u5177\u4f53\u5206\u6790</li> <li>\u4e0d\u654f\u611f: \u4e0d\u8003\u8651\u4e0a\u4e0b\u6587</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_13","title":"\u6307\u5411\u5206\u6790","text":"<ul> <li>\u786e\u5b9a\u7a0b\u5e8f\u4e2d\u6307\u9488\u53d8\u91cf\u7684\u6307\u5411\u5173\u7cfb, \u5373\u6307\u9488\u53ef\u80fd\u6307\u5411\u54ea\u4e9b\u5185\u5b58\u5730\u5740, \u8fd9\u5bf9\u4e8e\u7406\u89e3\u7a0b\u5e8f\u7684\u5185\u5b58\u64cd\u4f5c\u548c\u6570\u636e\u5171\u4eab\u975e\u5e38\u91cd\u8981 </li> <li>\u6307\u9488:\u6307\u5411\u5185\u5b58\u5730\u5740\u7684\u53d8\u91cf(\u5982 C/C++ \u4e2d\u7684\u6307\u9488 Java \u4e2d\u7684\u5f15\u7528) </li> <li>\u6307\u5411\u5173\u7cfb:\u6307\u9488\u53d8\u91cf\u53ef\u80fd\u6307\u5411\u7684\u5bf9\u8c61\u6216\u5185\u5b58\u533a\u57df</li> <li>\u76ee\u6807\u4e3a\u63a8\u5bfc\u6bcf\u4e2a\u6307\u9488\u53d8\u91cf\u5728\u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u6307\u5411\u7684\u5bf9\u8c61\u96c6\u5408 </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#alias-analysis","title":"\u522b\u540d\u5206\u6790(Alias Analysis)","text":"<ul> <li>\u522b\u540d\u5206\u6790\u662f\u9762\u5411\u6307\u9488\u5206\u6790\u7684\u4e00\u79cd\u5f62\u5f0f, \u7528\u4e8e\u5224\u65ad\u4e24\u4e2a\u6307\u9488\u662f\u5426\u53ef\u80fd\u6307\u5411\u540c\u4e00\u5bf9\u8c61 </li> <li>\u4f8b\u5982, \u5982\u679c <code>p</code> \u548c <code>q</code> \u53ef\u80fd\u6307\u5411\u540c\u4e00\u5bf9\u8c61, \u5219\u79f0 <code>p</code> \u548c <code>q</code> \u662f\u522b\u540d </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#heap-abstraction","title":"\u5806\u62bd\u8c61(Heap Abstraction)","text":"<ul> <li>\u5806\u5bf9\u8c61\u5efa\u6a21:\u5982\u4f55\u8868\u793a\u52a8\u6001\u5206\u914d\u7684\u5bf9\u8c61(\u5982 <code>malloc</code> \u6216 <code>new</code> \u521b\u5efa\u7684\u5bf9\u8c61)</li> <li>\u5e38\u89c1\u65b9\u6cd5:</li> <li>\u5206\u914d\u70b9\u62bd\u8c61(Allocation-Site Abstraction):\u4e3a\u6bcf\u4e2a\u5206\u914d\u70b9\u521b\u5efa\u4e00\u4e2a\u62bd\u8c61\u5bf9\u8c61 </li> <li>\u7c7b\u578b\u62bd\u8c61(Type-Based Abstraction):\u4e3a\u6bcf\u4e2a\u7c7b\u578b\u521b\u5efa\u4e00\u4e2a\u62bd\u8c61\u5bf9\u8c61 </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_14","title":"\u6307\u5411\u5206\u6790\u7684\u7b97\u6cd5","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_15","title":"\u57fa\u4e8e\u7ea6\u675f\u7684\u6307\u5411\u5206\u6790","text":"<ul> <li>\u5c06\u6307\u5411\u5173\u7cfb\u8868\u793a\u4e3a\u7ea6\u675f, \u5e76\u901a\u8fc7\u6c42\u89e3\u7ea6\u675f\u63a8\u5bfc\u6307\u5411\u5173\u7cfb </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_16","title":"\u57fa\u4e8e\u56fe\u7684\u6307\u5411\u5206\u6790","text":"<ul> <li>\u5c06\u6307\u5411\u5173\u7cfb\u8868\u793a\u4e3a\u56fe\u7ed3\u6784, \u5e76\u901a\u8fc7\u56fe\u7b97\u6cd5\u63a8\u5bfc\u6307\u5411\u5173\u7cfb</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_17","title":"\u63a7\u5236\u6d41\u5206\u6790","text":"<ul> <li>\u5206\u6790\u7a0b\u5e8f\u7684\u6267\u884c\u8def\u5f84, \u5373\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u53ef\u80fd\u7ecf\u8fc7\u54ea\u4e9b\u5206\u652f\u548c\u5faa\u73af, \u4ee5\u786e\u5b9a\u7a0b\u5e8f\u7684\u63a7\u5236\u7ed3\u6784 </li> <li>\u4f9d\u65e7\u5229\u7528\u63a7\u5236\u6d41\u56fe, \u4f46\u91cd\u5fc3\u653e\u5728\u63a7\u5236\u6d41\u4e0a, \u5373\u7a0b\u5e8f\u7684\u6267\u884c\u8def\u5f84</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_18","title":"\u63a7\u5236\u6d41\u5206\u6790\u7684\u76ee\u6807","text":"<ul> <li>\u63a8\u5bfc\u7a0b\u5e8f\u7684\u63a7\u5236\u6d41\u7ed3\u6784, \u5305\u62ec:</li> <li>\u6761\u4ef6\u5206\u652f(\u5982 <code>if</code> \u8bed\u53e5) </li> <li>\u5faa\u73af(\u5982 <code>for</code> <code>while</code> \u8bed\u53e5) </li> <li>\u51fd\u6570\u8c03\u7528\u548c\u8fd4\u56de </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_19","title":"\u63a7\u5236\u6d41\u5206\u6790\u7684\u7b97\u6cd5","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_20","title":"\u5faa\u73af\u8bc6\u522b","text":"<ul> <li>\u5229\u7528 Tarjan \u7b97\u6cd5\u8bc6\u522b\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf(\u5f3a\u8fde\u901a\u56fe), \u5373\u5faa\u73af\u7ed3\u6784</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_21","title":"\u4e0d\u53ef\u8fbe\u4ee3\u7801\u68c0\u6d4b","text":"<ul> <li>\u5bfb\u627e\u56fe\u4e2d\u7684\u4e0d\u53ef\u8fbe\u8282\u70b9(\u65e0\u6cd5\u5230\u8fbe\u7684\u57fa\u672c\u5757)</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_22","title":"\u6761\u4ef6\u5206\u652f\u5206\u6790","text":"<ul> <li>\u6839\u636e\u4e0a\u4e0b\u6587\u5224\u65ad\u6761\u4ef6\u8868\u8fbe\u5f0f\u53ef\u80fd\u7684\u53d6\u503c</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_23","title":"\u62bd\u8c61\u89e3\u91ca\u7406\u8bba","text":"<ul> <li>\u62bd\u8c61\u89e3\u91ca\u662f\u4e00\u79cd\u5f62\u5f0f\u5316\u65b9\u6cd5, \u901a\u8fc7\u5728\u62bd\u8c61\u7684\u8bed\u4e49\u57df\u4e0a\u8fdb\u884c\u89e3\u91ca\u6765\u5206\u6790\u7a0b\u5e8f\u7684\u6027\u8d28, \u5b83\u4e3a\u5404\u79cd\u5206\u6790\u63d0\u4f9b\u4e86\u7406\u8bba\u57fa\u7840 </li> <li>\u76f8\u8f83\u4e8e\u96be\u4ee5\u5f97\u51fa\u7684\u5177\u4f53\u8bed\u4e49(Concrete Semantics)(\u7a0b\u5e8f\u771f\u5b9e\u884c\u4e3a), \u62bd\u8c61\u89e3\u91ca\u7406\u8bba\u63cf\u8ff0\u62bd\u8c61\u8bed\u4e49(Abstract Semantics)</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#abstract-domain","title":"\u62bd\u8c61\u57df(Abstract Domain)","text":"<ul> <li>\u62bd\u8c61\u57df\u662f\u62bd\u8c61\u89e3\u91ca\u7406\u8bba\u7684\u6838\u5fc3, \u7528\u4e8e\u8868\u793a\u7a0b\u5e8f\u72b6\u6001\u7684\u62bd\u8c61\u4fe1\u606f </li> <li>\u4f8b\u5982:</li> <li>\u533a\u95f4\u57df(Interval Domain):\u8868\u793a\u53d8\u91cf\u7684\u53d6\u503c\u8303\u56f4(\u5982 <code>x \u2208 [1, 10]</code>) </li> <li>\u7b26\u53f7\u57df(Sign Domain):\u8868\u793a\u53d8\u91cf\u7684\u7b26\u53f7(\u5982 <code>x \u2208 {+, -, 0}</code>) </li> <li>\u4f3d\u7f57\u74e6\u8fde\u63a5(Galois Connection)\u662f\u5177\u4f53\u57df\u548c\u62bd\u8c61\u57df\u4e4b\u95f4\u7684\u6570\u5b66\u5173\u7cfb, \u7528\u4e8e\u4fdd\u8bc1\u62bd\u8c61\u89e3\u91ca\u7684\u6b63\u786e\u6027 </li> <li>\u62bd\u8c61\u51fd\u6570(Abstraction Function, \u03b1):\u5c06\u5177\u4f53\u72b6\u6001\u6620\u5c04\u5230\u62bd\u8c61\u72b6\u6001 </li> <li>\u5177\u4f53\u5316\u51fd\u6570(Concretization Function, \u03b3):\u5c06\u62bd\u8c61\u72b6\u6001\u6620\u5c04\u56de\u5177\u4f53\u72b6\u6001 </li> <li>\u62bd\u8c61\u89e3\u91ca\u7406\u8bba\u7684\u6838\u5fc3\u601d\u60f3\u5728\u4e8e\u8fd1\u4f3c\u6027, \u5b89\u5168\u6027(\u63a8\u5bfc\u6027\u8d28\u5fc5\u7136\u6210\u7acb), </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_24","title":"\u56fa\u5b9a\u70b9\u8ba1\u7b97","text":"<ul> <li>\u62bd\u8c61\u89e3\u91ca\u901a\u8fc7\u8fed\u4ee3\u8ba1\u7b97\u56fa\u5b9a\u70b9(Fixpoint)\u6765\u63a8\u5bfc\u7a0b\u5e8f\u7684\u4e0d\u53d8\u6027\u8d28 </li> <li>\u5982\u901a\u8fc7\u8fed\u4ee3\u8ba1\u7b97\u5faa\u73af\u4e0d\u53d8\u5f0f(Loop Invariant) </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_25","title":"\u7b26\u53f7\u62bd\u8c61","text":"<ul> <li>\u4f7f\u7528\u7b26\u53f7\u6765\u8868\u793a\u7a0b\u5e8f\u4e2d\u7684\u6570\u636e\u548c\u64cd\u4f5c, \u800c\u4e0d\u662f\u5177\u4f53\u7684\u6570\u503c, \u8fd9\u6709\u52a9\u4e8e\u5728\u66f4\u9ad8\u7684\u62bd\u8c61\u5c42\u6b21\u4e0a\u8fdb\u884c\u5206\u6790, \u63d0\u9ad8\u5206\u6790\u7684\u6548\u7387\u548c\u53ef\u6269\u5c55\u6027  </li> <li>\u4e00\u79cd\u62bd\u8c61\u89e3\u91ca\u65b9\u6cd5, \u53ef\u4ee5\u57fa\u4e8e\u7ea6\u675f\u6c42\u89e3/\u57fa\u4e8e\u5176\u5b83\u62bd\u8c61\u57df\u6c42\u89e3/\u57fa\u4e8e SMT \u6c42\u89e3\u5668\u6c42\u89e3</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_26","title":"\u57fa\u4e8e\u7ea6\u675f\u6c42\u89e3\u7684\u5206\u6790","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#sat","title":"SAT \u6c42\u89e3\u7b97\u6cd5","text":"<ul> <li>SAT(\u5e03\u5c14\u53ef\u6ee1\u8db3\u6027\u95ee\u9898)\u6c42\u89e3\u7b97\u6cd5\u7528\u4e8e\u786e\u5b9a\u4e00\u4e2a\u5e03\u5c14\u8868\u8fbe\u5f0f\u662f\u5426\u53ef\u6ee1\u8db3, \u5373\u662f\u5426\u5b58\u5728\u4e00\u7ec4\u53d8\u91cf\u8d4b\u503c\u4f7f\u5f97\u8868\u8fbe\u5f0f\u4e3a\u771f</li> <li>\u5728\u7a0b\u5e8f\u5206\u6790\u4e2d, \u53ef\u4ee5\u5c06\u7a0b\u5e8f\u7684\u67d0\u4e9b\u6027\u8d28\u8f6c\u5316\u4e3a SAT \u95ee\u9898, \u7136\u540e\u5229\u7528 SAT \u6c42\u89e3\u5668\u6765\u9a8c\u8bc1\u8fd9\u4e9b\u6027\u8d28 </li> <li>SAT \u95ee\u9898\u901a\u5e38\u8868\u793a\u4e3a\u5408\u53d6\u8303\u5f0f(Conjunctive Normal Form, CNF), \u5373\u591a\u4e2a\u5b50\u53e5\u7684\u5408\u53d6 </li> <li>SAT \u95ee\u9898\u662f NP \u5b8c\u5168\u95ee\u9898, \u5373\u76ee\u524d\u6ca1\u6709\u5df2\u77e5\u7684\u591a\u9879\u5f0f\u65f6\u95f4\u7b97\u6cd5\u53ef\u4ee5\u89e3\u51b3\u6240\u6709 SAT \u95ee\u9898 </li> <li>\u4f46\u5bf9\u4e8e\u8bb8\u591a\u5b9e\u9645\u95ee\u9898, \u73b0\u4ee3 SAT \u6c42\u89e3\u5668\u53ef\u4ee5\u9ad8\u6548\u6c42\u89e3 </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#sat_1","title":"SAT \u6c42\u89e3\u7b97\u6cd5\u7684\u5206\u7c7b","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_27","title":"\u5b8c\u5907\u7b97\u6cd5","text":"<ul> <li>\u5b8c\u5907\u7b97\u6cd5\u53ef\u4ee5\u4fdd\u8bc1\u627e\u5230\u89e3(\u5982\u679c\u5b58\u5728)\u6216\u8bc1\u660e\u65e0\u89e3 </li> <li>\u4f8b\u5982:</li> <li>DPLL \u7b97\u6cd5:\u57fa\u4e8e\u56de\u6eaf\u641c\u7d22\u7684\u7ecf\u5178\u7b97\u6cd5 </li> <li>CDCL \u7b97\u6cd5:\u73b0\u4ee3 SAT \u6c42\u89e3\u5668\u7684\u6838\u5fc3\u7b97\u6cd5 </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_28","title":"\u4e0d\u5b8c\u5907\u7b97\u6cd5","text":"<ul> <li>\u4e0d\u5b8c\u5907\u7b97\u6cd5\u4e0d\u80fd\u4fdd\u8bc1\u627e\u5230\u89e3\u6216\u8bc1\u660e\u65e0\u89e3, \u4f46\u901a\u5e38\u6548\u7387\u66f4\u9ad8 </li> <li>\u4f8b\u5982:</li> <li> <p>\u5c40\u90e8\u641c\u7d22\u7b97\u6cd5:\u5982 WalkSAT </p> </li> <li> <p>\u9009\u62e9\u5206\u652f\u53d8\u91cf\u65f6, \u4f7f\u7528\u542f\u53d1\u5f0f\u7b56\u7565(\u5982 VSIDS)\u4f18\u5148\u9009\u62e9\u6d3b\u8dc3\u53d8\u91cf </p> </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#sat_2","title":"\u5b8c\u5907 SAT \u6c42\u89e3\u7b97\u6cd5","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#dpll","title":"DPLL \u7b97\u6cd5","text":"<ul> <li>DPLL(Davis-Putnam-Logemann-Loveland)\u7b97\u6cd5\u662f SAT \u6c42\u89e3\u7684\u7ecf\u5178\u7b97\u6cd5, \u57fa\u4e8e\u56de\u6eaf\u641c\u7d22 </li> <li>\u526a\u679d\u624b\u6bb5:</li> <li>\u5355\u5143\u4f20\u64ad(Unit Propagation):\u5982\u679c\u67d0\u4e2a\u5b50\u53e5\u53ea\u6709\u4e00\u4e2a\u672a\u8d4b\u503c\u53d8\u91cf, \u5219\u8d4b\u503c</li> <li>\u7eaf\u6587\u5b57\u6d88\u9664(Pure Literal Elimination):\u5982\u679c\u67d0\u4e2a\u53d8\u91cf\u5728\u6240\u6709\u5b50\u53e5\u4e2d\u90fd\u662f\u6b63/\u8d1f, \u5219\u76f4\u63a5\u8d4b\u503c</li> <li>\u6b65\u9aa4:</li> <li>\u5206\u652f(Branching):\u9009\u62e9\u4e00\u4e2a\u53d8\u91cf\u8d4b\u503c, \u9012\u5f52\u6c42\u89e3 </li> <li>\u56de\u6eaf(Backtracking):\u5982\u679c\u5f53\u524d\u8d4b\u503c\u5bfc\u81f4\u51b2\u7a81, \u5219\u56de\u6eaf\u5e76\u5c1d\u8bd5\u53e6\u4e00\u79cd\u8d4b\u503c </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#cdcl","title":"CDCL \u7b97\u6cd5","text":"<ul> <li>CDCL(Conflict-Driven Clause Learning)\u7b97\u6cd5\u662f\u73b0\u4ee3 SAT \u6c42\u89e3\u5668\u7684\u6838\u5fc3\u7b97\u6cd5, \u57fa\u4e8e DPLL \u5e76\u5f15\u5165\u4e86\u51b2\u7a81\u5206\u6790\u548c\u5b66\u4e60 </li> <li>\u5728 DPLL \u57fa\u7840\u4e0a, \u5f15\u5165\u4e86\u51b2\u7a81\u5206\u6790\u548c\u5b66\u4e60\u4ee5\u53ca\u975e\u65f6\u5e8f\u56de\u6eaf</li> <li>\u51b2\u7a81\u5206\u6790:\u6839\u636e\u5f53\u524d\u7684\u8d4b\u503c, \u627e\u5230\u5bfc\u81f4\u51b2\u7a81\u7684\u5b50\u53e5, \u5b66\u4e60\u5230\u65b0\u7684\u5b50\u53e5(\u63a8\u7406\u8bc1\u660e)</li> <li>\u56de\u6eaf:\u6839\u636e\u5b66\u4e60\u5230\u7684\u5b50\u53e5\u8fdb\u884c\u975e\u65f6\u5e8f\u56de\u6eaf(Non-Chronological Backtracking), \u6309\u5b66\u4e60\u7ed3\u679c\u8fdb\u884c\u56de\u6eaf </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#sat_3","title":"\u4e0d\u5b8c\u5907 SAT \u6c42\u89e3\u7b97\u6cd5","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#walksat","title":"WalkSAT","text":"<ul> <li>WalkSAT \u662f\u4e00\u79cd\u5c40\u90e8\u641c\u7d22\u7b97\u6cd5, \u9002\u7528\u4e8e\u6c42\u89e3\u53ef\u6ee1\u8db3\u7684 SAT \u95ee\u9898 </li> <li>\u6b65\u9aa4:</li> <li>\u968f\u673a\u521d\u59cb\u5316\u53d8\u91cf\u8d4b\u503c </li> <li>\u9009\u62e9\u4e00\u4e2a\u672a\u6ee1\u8db3\u7684\u5b50\u53e5 </li> <li>\u968f\u673a\u7ffb\u8f6c\u8be5\u5b50\u53e5\u4e2d\u7684\u4e00\u4e2a\u53d8\u91cf, \u4ee5\u6700\u5c0f\u5316\u672a\u6ee1\u8db3\u5b50\u53e5\u7684\u6570\u91cf(\u8d2a\u5fc3) </li> <li>\u91cd\u590d\u76f4\u5230\u627e\u5230\u89e3\u6216\u8fbe\u5230\u6700\u5927\u8fed\u4ee3\u6b21\u6570(\u4e00\u76f4\u4e0d\u6210\u529f\u5c31\u6362) </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#smt","title":"SMT \u6c42\u89e3\u7b97\u6cd5","text":"<ul> <li>SMT(\u53ef\u6ee1\u8db3\u6027\u6a21\u7406\u8bba)\u6c42\u89e3\u7b97\u6cd5\u662f SAT \u6c42\u89e3\u7684\u6269\u5c55, \u5b83\u4e0d\u4ec5\u53ef\u4ee5\u5904\u7406\u5e03\u5c14\u903b\u8f91, \u8fd8\u53ef\u4ee5\u5904\u7406\u5176\u4ed6\u7406\u8bba(\u5982\u7ebf\u6027\u7b97\u672f \u6570\u7ec4\u7b49)</li> <li>SMT \u95ee\u9898\u662f SAT \u95ee\u9898\u7684\u6269\u5c55, \u652f\u6301\u5728\u5e03\u5c14\u903b\u8f91\u7684\u57fa\u7840\u4e0a\u7ed3\u5408\u7406\u8bba </li> <li>\u4f8b\u5982, \u516c\u5f0f <code>(x + y &gt; 0) \u2227 (y &lt; 0)</code> \u662f\u4e00\u4e2a SMT \u516c\u5f0f, \u7ed3\u5408\u4e86\u7b97\u672f\u7406\u8bba </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_29","title":"\u7406\u8bba","text":"<ul> <li>SMT \u6c42\u89e3\u5668\u652f\u6301\u591a\u79cd\u7406\u8bba, \u4f8b\u5982:</li> <li>\u7ebf\u6027\u7b97\u672f\u7406\u8bba(Linear Arithmetic):\u5982 <code>x + y &gt; 0</code> </li> <li>\u6570\u7ec4\u7406\u8bba(Arrays):\u5982 <code>A[i] = x</code> </li> <li>\u4f4d\u5411\u91cf\u7406\u8bba(Bit-Vectors):\u5982 <code>x &amp; y = 0</code> </li> <li>\u672a\u89e3\u91ca\u51fd\u6570\u7406\u8bba(Uninterpreted Functions):\u5982 <code>f(x) = f(y)</code> </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#dpllt","title":"\u57fa\u4e8e DPLL(T) \u7684\u7b97\u6cd5","text":"<ul> <li>DPLL(T) \u662f SMT \u6c42\u89e3\u7684\u6838\u5fc3\u6846\u67b6, \u7ed3\u5408\u4e86 DPLL \u7b97\u6cd5\u548c\u7406\u8bba\u6c42\u89e3\u5668 </li> <li>\u6b65\u9aa4:</li> <li>\u5e03\u5c14\u62bd\u8c61:\u5c06 SMT \u516c\u5f0f\u62bd\u8c61\u4e3a\u5e03\u5c14\u516c\u5f0f </li> <li>DPLL \u6c42\u89e3:\u4f7f\u7528 DPLL \u7b97\u6cd5\u6c42\u89e3\u5e03\u5c14\u516c\u5f0f </li> <li>\u7406\u8bba\u6c42\u89e3\u51b2\u7a81\u5206\u6790\u4e0e:\u8c03\u7528\u7406\u8bba\u6c42\u89e3\u5668</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#cdclt","title":"\u57fa\u4e8e CDCL(T) \u7684\u7b97\u6cd5","text":"<ul> <li>CDCL(T) \u662f DPLL(T) \u7684\u6269\u5c55, \u7ed3\u5408\u4e86 CDCL \u7b97\u6cd5\u548c\u7406\u8bba\u6c42\u89e3\u5668 </li> <li>\u6b65\u9aa4\u540c\u4e0a, \u6539\u6210\u8c03\u7528 CDCL</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_30","title":"\u7406\u8bba\u6c42\u89e3\u5668","text":"<ul> <li>\u7406\u8bba\u6c42\u89e3\u5668\u7528\u4e8e\u9a8c\u8bc1\u5e03\u5c14\u8d4b\u503c\u5728\u7406\u8bba\u4e0a\u7684\u53ef\u884c\u6027 </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_31","title":"\u4f18\u5316\u6280\u672f","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_32","title":"\u7ebf\u6027\u89c4\u5212","text":"<ul> <li>\u5bf9\u4e8e\u7ebf\u6027\u7b97\u672f\u7406\u8bba, \u53ef\u4ee5\u4f7f\u7528\u7ebf\u6027\u89c4\u5212\u7684\u7b97\u6cd5\u89e3\u51b3, \u5982\u5185\u70b9\u6cd5/\u5355\u7eaf\u5f62\u6cd5</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_33","title":"\u542f\u53d1\u5f0f\u5206\u652f","text":"<ul> <li>\u9009\u62e9\u5206\u652f\u53d8\u91cf\u65f6, \u4f7f\u7528\u542f\u53d1\u5f0f\u7b56\u7565\u4f18\u5148\u9009\u62e9\u6d3b\u8dc3\u53d8\u91cf </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_34","title":"\u7406\u8bba\u4f20\u64ad","text":"<ul> <li>\u5728\u5e03\u5c14\u6c42\u89e3\u8fc7\u7a0b\u4e2d, \u7406\u8bba\u6c42\u89e3\u5668\u53ef\u4ee5\u4e3b\u52a8\u63a8\u5bfc\u65b0\u7684\u7ea6\u675f </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_35","title":"\u9884\u5904\u7406","text":"<ul> <li>\u5728\u6c42\u89e3\u524d\u5bf9\u516c\u5f0f\u8fdb\u884c\u9884\u5904\u7406, \u5982\u7406\u8bba\u5316\u7b80 \u53d8\u91cf\u66ff\u6362 </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_36","title":"\u7406\u8bba\u7ec4\u5408","text":"<ul> <li>\u5bf9\u4e8e\u591a\u7406\u8bba\u7684 SMT \u95ee\u9898, \u4f7f\u7528\u7406\u8bba\u7ec4\u5408\u6280\u672f(\u5982 Nelson-Oppen \u65b9\u6cd5, \u62c6\u5206\u540e\u72ec\u7acb\u6c42\u89e3)\u6c42\u89e3</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_37","title":"\u7b26\u53f7\u6267\u884c","text":"<ul> <li>\u7b26\u53f7\u6267\u884c\u662f\u4e00\u79cd\u52a8\u6001\u5206\u6790\u6280\u672f, \u5b83\u5c06\u7a0b\u5e8f\u7684\u8f93\u5165\u8868\u793a\u4e3a\u7b26\u53f7, \u800c\u4e0d\u662f\u5177\u4f53\u7684\u503c, \u7136\u540e\u901a\u8fc7\u7b26\u53f7\u6267\u884c\u6765\u63a2\u7d22\u7a0b\u5e8f\u7684\u6240\u6709\u53ef\u80fd\u6267\u884c\u8def\u5f84, \u4ee5\u53d1\u73b0\u6f5c\u5728\u7684\u7f3a\u9677\u548c\u9519\u8bef </li> <li>\u4f7f\u7528\u7b26\u53f7\u503c(\u800c\u4e0d\u662f\u5177\u4f53\u503c)\u4f5c\u4e3a\u8f93\u5165, \u8ddf\u8e2a\u7a0b\u5e8f\u6267\u884c\u8def\u5f84 </li> <li>\u7b26\u53f7\u72b6\u6001\u5305\u62ec:</li> <li>\u7b26\u53f7\u53d8\u91cf:\u8868\u793a\u8f93\u5165\u6216\u4e2d\u95f4\u53d8\u91cf\u7684\u7b26\u53f7\u503c </li> <li>\u8def\u5f84\u6761\u4ef6:\u8868\u793a\u5f53\u524d\u8def\u5f84\u7684\u7ea6\u675f\u6761\u4ef6 </li> <li>\u5185\u5b58\u72b6\u6001:\u8868\u793a\u5185\u5b58\u7684\u7b26\u53f7\u5316\u5185\u5bb9 </li> <li>\u7b26\u53f7\u6267\u884c\u7684\u8f93\u51fa\u662f\u8def\u5f84\u6761\u4ef6\u548c\u5bf9\u5e94\u7684\u7a0b\u5e8f\u72b6\u6001 </li> <li>\u4f8b\u5982, \u8def\u5f84\u6761\u4ef6 <code>x &gt; 0 \u2227 y &lt; 0</code> \u548c\u5bf9\u5e94\u7684\u7a0b\u5e8f\u72b6\u6001 <code>z = x + y</code> </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_38","title":"\u4f18\u5316\u6280\u672f","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_39","title":"\u52a8\u6001\u7b26\u53f7\u6267\u884c","text":"<ul> <li>\u7ed3\u5408\u5177\u4f53\u6267\u884c\u548c\u7b26\u53f7\u6267\u884c, \u63d0\u9ad8\u6548\u7387 </li> <li>\u4f8b\u5982, Concolic Execution \u662f\u4e00\u79cd\u52a8\u6001\u7b26\u53f7\u6267\u884c\u6280\u672f </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_40","title":"\u8def\u5f84\u9009\u62e9\u7b56\u7565","text":"<ul> <li>\u4f7f\u7528\u542f\u53d1\u5f0f\u7b56\u7565\u9009\u62e9\u91cd\u8981\u8def</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_41","title":"\u7ea6\u675f\u7b80\u5316","text":"<ul> <li>\u5728\u6c42\u89e3\u8def\u5f84\u6761\u4ef6\u524d, \u7b80\u5316\u7ea6\u675f\u4ee5\u63d0\u9ad8\u6c42\u89e3\u6548\u7387</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_42","title":"\u970d\u5c14\u903b\u8f91\u548c\u8c13\u8bcd\u53d8\u6362","text":"<ul> <li>\u970d\u5c14\u903b\u8f91\u662f\u4e00\u79cd\u7528\u4e8e\u7a0b\u5e8f\u9a8c\u8bc1\u7684\u5f62\u5f0f\u5316\u65b9\u6cd5, \u901a\u8fc7\u5728\u7a0b\u5e8f\u7684\u6bcf\u4e2a\u70b9\u4e0a\u9644\u52a0\u903b\u8f91\u65ad\u8a00(\u8c13\u8bcd)\u6765\u63cf\u8ff0\u7a0b\u5e8f\u7684\u72b6\u6001\u548c\u884c\u4e3a</li> <li>\u8c13\u8bcd\u53d8\u6362\u7528\u4e8e\u5728\u7a0b\u5e8f\u7684\u4e0d\u540c\u70b9\u4e4b\u95f4\u63a8\u5bfc\u548c\u9a8c\u8bc1\u8fd9\u4e9b\u903b\u8f91\u65ad\u8a00 </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#hoare-logic","title":"\u970d\u5c14\u903b\u8f91(Hoare Logic)","text":"<ul> <li>\u970d\u5c14\u903b\u8f91\u7528\u4e8e\u8bc1\u660e\u7a0b\u5e8f\u7684\u90e8\u5206\u6b63\u786e\u6027(Partial Correctness), \u5373\u5982\u679c\u7a0b\u5e8f\u7ec8\u6b62, \u5219\u6ee1\u8db3\u540e\u7f6e\u6761\u4ef6 </li> <li>\u5982\u679c\u9700\u8981\u8bc1\u660e\u5b8c\u5168\u6b63\u786e\u6027(Total Correctness), \u8fd8\u9700\u8bc1\u660e\u7a0b\u5e8f\u7ec8\u6b62 </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_43","title":"\u970d\u5c14\u4e09\u5143\u7ec4","text":"<ul> <li>\u970d\u5c14\u903b\u8f91\u7684\u6838\u5fc3\u662f\u970d\u5c14\u4e09\u5143\u7ec4(Hoare Triple), \u5f62\u5f0f\u4e3a <code>{P} C {Q}</code>, \u5176\u4e2d:</li> <li><code>P</code> \u662f\u524d\u7f6e\u6761\u4ef6(Precondition) </li> <li><code>C</code> \u662f\u7a0b\u5e8f\u8bed\u53e5(Command) </li> <li><code>Q</code> \u662f\u540e\u7f6e\u6761\u4ef6(Postcondition) </li> <li>\u542b\u4e49:\u5982\u679c\u5728\u6267\u884c <code>C</code> \u4e4b\u524d <code>P</code> \u6210\u7acb, \u5219\u6267\u884c <code>C</code> \u540e <code>Q</code> \u6210\u7acb </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_44","title":"\u970d\u5c14\u903b\u8f91\u7684\u89c4\u5219","text":"<p>\u970d\u5c14\u903b\u8f91\u901a\u8fc7\u4e00\u7ec4\u63a8\u7406\u89c4\u5219\u63cf\u8ff0\u7a0b\u5e8f\u7684\u8bed\u4e49, \u4f8b\u5982:</p> <ul> <li>\u8d4b\u503c\u89c4\u5219(Assignment Rule):</li> <li><code>{P[E/x]} x := E {P}</code></li> <li>\u987a\u5e8f\u89c4\u5219(Sequencing Rule):</li> <li>\u5982\u679c <code>{P} C1 {R}</code> \u4e14 <code>{R} C2 {Q}</code>, \u5219 <code>{P} C1; C2 {Q}</code> </li> <li>\u6761\u4ef6\u89c4\u5219(Conditional Rule):</li> <li>\u5982\u679c <code>{P \u2227 B} C1 {Q}</code> \u4e14 <code>{P \u2227 \u00acB} C2 {Q}</code>, \u5219 <code>{P} if B then C1 else C2 {Q}</code> </li> <li>\u5faa\u73af\u89c4\u5219(While Rule):</li> <li>\u5982\u679c <code>{P \u2227 B} C {P}</code>, \u5219 <code>{P} while B do C {P \u2227 \u00acB}</code> </li> <li>\u5f3a\u5316\u524d\u7f6e\u6761\u4ef6(Strengthening Precondition):</li> <li>\u5982\u679c <code>P \u21d2 P'</code> \u4e14 <code>{P'} C {Q}</code>, \u5219 <code>{P} C {Q}</code> </li> <li>\u5f31\u5316\u540e\u7f6e\u6761\u4ef6(Weakening Postcondition):</li> <li>\u5982\u679c <code>{P} C {Q'}</code> \u4e14 <code>Q' \u21d2 Q</code>, \u5219 <code>{P} C {Q}</code> </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#predicate-transformers","title":"\u8c13\u8bcd\u53d8\u6362(Predicate Transformers)","text":"<ul> <li>\u970d\u5c14\u903b\u8f91\u662f\u7a0b\u5e8f\u9a8c\u8bc1\u7684\u903b\u8f91\u6846\u67b6, \u800c\u8c13\u8bcd\u53d8\u6362\u662f\u5176\u6570\u5b66\u5b9e\u73b0 </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_45","title":"\u8c13\u8bcd\u53d8\u6362\u7684\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u8c13\u8bcd\u53d8\u6362\u662f\u970d\u5c14\u903b\u8f91\u7684\u6570\u5b66\u57fa\u7840, \u7528\u4e8e\u63cf\u8ff0\u7a0b\u5e8f\u8bed\u53e5\u5bf9\u8c13\u8bcd(\u903b\u8f91\u6761\u4ef6)\u7684\u53d8\u6362 </li> <li>\u4e3b\u8981\u6709\u4e24\u79cd\u8c13\u8bcd\u53d8\u6362:</li> <li>\u6700\u5f31\u524d\u7f6e\u6761\u4ef6(Weakest Precondition, WP) </li> <li>\u6700\u5f3a\u540e\u7f6e\u6761\u4ef6(Strongest Postcondition, SP) </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#wp","title":"\u6700\u5f31\u524d\u7f6e\u6761\u4ef6(WP)","text":"<ul> <li>\u7ed9\u5b9a\u7a0b\u5e8f\u8bed\u53e5 <code>C</code> \u548c\u540e\u7f6e\u6761\u4ef6 <code>Q</code>, <code>WP(C, Q)</code> \u662f\u6ee1\u8db3 <code>{P} C {Q}</code> \u7684\u6700\u5f31\u524d\u7f6e\u6761\u4ef6 </li> <li>\u4f8b\u5982:</li> <li><code>WP(x := E, Q) = Q[E/x]</code> </li> <li><code>WP(C1; C2, Q) = WP(C1, WP(C2, Q))</code> </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#sp","title":"\u6700\u5f3a\u540e\u7f6e\u6761\u4ef6(SP)","text":"<ul> <li>\u7ed9\u5b9a\u7a0b\u5e8f\u8bed\u53e5 <code>C</code> \u548c\u524d\u7f6e\u6761\u4ef6 <code>P</code>, <code>SP(C, P)</code> \u662f\u6ee1\u8db3 <code>{P} C {Q}</code> \u7684\u6700\u5f3a\u540e\u7f6e\u6761\u4ef6 </li> <li>\u4f8b\u5982:</li> <li><code>SP(x := E, P) = \u2203v. P[v/x] \u2227 x = E[v/x]</code> </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_46","title":"\u8c13\u8bcd\u53d8\u6362\u7684\u6027\u8d28","text":"<ul> <li>\u5355\u8c03\u6027:\u5982\u679c <code>P \u21d2 P'</code>, \u5219 <code>WP(C, P) \u21d2 WP(C, P')</code> </li> <li>\u5206\u914d\u6027:<code>WP(C, P \u2227 Q) = WP(C, P) \u2227 WP(C, Q)</code> </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E6%9C%AF/%E8%BD%AF%E4%BB%B6%E5%88%86%E6%9E%90/#_47","title":"\u8c13\u8bcd\u53d8\u6362\u7684\u5e94\u7528","text":"<ul> <li>\u8c13\u8bcd\u53d8\u6362\u7528\u4e8e\u81ea\u52a8\u5316\u7a0b\u5e8f\u9a8c\u8bc1\u548c\u9759\u6001\u5206\u6790 </li> <li>\u4f8b\u5982, \u901a\u8fc7\u8ba1\u7b97 <code>WP</code> \u63a8\u5bfc\u7a0b\u5e8f\u7684\u524d\u7f6e\u6761\u4ef6 </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/","title":"MySQL \u4f7f\u7528\u57fa\u7840","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>MySQL \u5fc5\u77e5\u5fc5\u4f1a - \u8ddf\u524d\u4f5c\u51e0\u4e4e\u4e00\u6837, \u5355\u62ff\u51fa\u6765\u6bd4\u524d\u4f5c\u5f3a, \u56e0\u4e3a\u6709 MySQL \u5185\u5bb9 - 4</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#mysql_1","title":"\u4f7f\u7528 MySQL","text":"<ul> <li>MySQL \u9664\u4e86\u672c\u4f53\u5916, \u8fd8\u63d0\u4f9b\u4e86\u547d\u4ee4\u884c\u5de5\u5177, \u56fe\u5f62\u5316\u5de5\u5177 (\u4e0d\u597d\u7528), \u4ee5\u53ca\u6570\u636e\u5e93\u7ba1\u7406\u5de5\u5177<ul> <li>\u5f53\u7136, \u672c\u8d28\u4e0a\u90fd\u662f SQL \u8bed\u53e5</li> </ul> </li> <li>\u60f3\u8981\u4f7f\u7528\u8fd9\u4e9b\u5de5\u5177\u5fc5\u987b\u8fde\u63a5\u5230 MySQL \u9700\u8981\u6307\u5b9a<ul> <li>\u4e3b\u673a\u540d (\u672c\u5730\u662f localhost)</li> <li>\u7aef\u53e3\u53f7 (\u9ed8\u8ba4\u662f 3306)</li> <li>\u7528\u6237\u540d (\u6570\u636e\u5e93\u53ef\u4ee5\u521b\u5efa\u4e0d\u540c\u6743\u9650\u7684\u7528\u6237)</li> <li>\u5bc6\u7801 (\u53ef\u4ee5\u6ca1\u6709)</li> </ul> </li> <li>\u4e0b\u9762\u5217\u4e3e\u4e00\u4e9b\u56fe\u5f62\u5316\u754c\u9762\u5de5\u5177\u4f7f\u7528\u7684\u8bed\u53e5 (\u5168\u6ca1\u7528!!!)</li> </ul> <pre><code>SHOW DATABASES; -- \u67e5\u770b\u6240\u6709\u6570\u636e\u5e93\n\nSHOW TABLES; -- \u67e5\u770b\u5f53\u524d\u6570\u636e\u5e93\u4e2d\u7684\u6240\u6709\u8868\n\nSHOW COLUMNS FROM table_name; -- \u67e5\u770b\u8868\u7684\u6240\u6709\u5217\nDESCRIBE table_name; -- \u540c\u4e0a\n\nSHOW STATUS; -- \u67e5\u770b\u6570\u636e\u5e93\u7684\u72b6\u6001\n\nSHOW CREATE TABLE table_name; -- \u67e5\u770b\u8868\u7684\u521b\u5efa\u8bed\u53e5\nSHOW CREATE DATABASE database_name; -- \u67e5\u770b\u6570\u636e\u5e93\u7684\u521b\u5efa\u8bed\u53e5\n\nSHOW GRANTS; -- \u67e5\u770b\u7528\u6237\u7684\u6743\u9650\n\nSHOW ERRORS; -- \u67e5\u770b\u9519\u8bef\u4fe1\u606f\nSHOW WARNINGS; -- \u67e5\u770b\u8b66\u544a\u4fe1\u606f\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_2","title":"\u7528\u6b63\u5219\u8868\u8fbe\u5f0f\u8fdb\u884c\u641c\u7d22","text":"<ul> <li><code>REGEXP</code> \u7684\u4f7f\u7528\u770b\u8d77\u6765\u5f88\u50cf <code>LIKE</code>, \u4f46\u8bf7\u6ce8\u610f <code>LIKE</code> \u5339\u914d\u7684\u662f\u6574\u4e2a\u5b57\u7b26\u4e32, \u800c <code>REGEXP</code> \u5339\u914d\u7684\u662f\u6a21\u5f0f (\u5b50\u4e32)</li> <li>MySQL \u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u4e0d\u533a\u5206\u5927\u5c0f\u5199</li> <li><code>^</code> \u6307\u5b9a\u540e\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u5b57\u7b26\u4e32\u7684\u5f00\u59cb</li> <li><code>$</code> \u6307\u5b9a\u524d\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u5b57\u7b26\u4e32\u7684\u7ed3\u675f</li> <li><code>*</code> \u5339\u914d\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26</li> <li><code>+</code> \u5339\u914d\u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26</li> <li><code>?</code> \u5339\u914d\u96f6\u6216\u4e00\u4e2a\u5b57\u7b26</li> <li><code>{n}</code> \u5339\u914d n \u4e2a <code>{n}</code> \u524d\u9762\u7684\u6a21\u5f0f</li> <li><code>{n, }</code> \u5339\u914d\u81f3\u5c11 n \u4e2a <code>{n, }</code> \u524d\u9762\u7684\u6a21\u5f0f</li> <li><code>{n, m}</code> \u5339\u914d n \u5230 m \u4e2a <code>{n, m}</code> \u524d\u9762\u7684\u6a21\u5f0f</li> <li><code>[]</code> \u5339\u914d\u4efb\u610f\u5b57\u7b26\u4e2d\u7684\u4e00\u4e2a</li> <li><code>[^]</code> \u5339\u914d\u4efb\u610f\u5b57\u7b26\u4e2d\u7684\u4e00\u4e2a (\u53d6\u53cd)</li> <li><code>|</code> \u903b\u8f91\u6216, \u8fde\u63a5\u4e24\u4e2a\u6a21\u5f0f</li> <li><code>()</code> \u5206\u7ec4</li> <li><code>\\\\</code> \u8f6c\u4e49</li> <li><code>[:classname:]</code> \u5339\u914d\u5b57\u7b26\u7c7b<ul> <li><code>[:alnum:]</code> \u5b57\u6bcd\u548c\u6570\u5b57</li> <li><code>[:alpha:]</code> \u5b57\u6bcd</li> <li><code>[:blank:]</code> \u7a7a\u683c\u548c\u5236\u8868\u7b26</li> <li><code>[:cntrl:]</code> \u63a7\u5236\u5b57\u7b26</li> <li><code>[:digit:]</code> \u6570\u5b57</li> <li><code>[:graph:]</code> \u53ef\u6253\u5370\u5b57\u7b26</li> <li><code>[:lower:]</code> \u5c0f\u5199\u5b57\u6bcd</li> </ul> </li> </ul> <pre><code>SELECT * FROM table_name WHERE column_name REGEXP '\u6b63\u5219\u8868\u8fbe\u5f0f'; -- \u6b63\u5219\u8868\u8fbe\u5f0f\u641c\u7d22\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_3","title":"\u5168\u6587\u672c\u641c\u7d22","text":"<ul> <li>MySQL \u652f\u6301\u591a\u79cd\u6570\u636e\u5f15\u64ce, \u5176\u4e2d MyISAM \u652f\u6301\u5168\u6587\u672c\u641c\u7d22, \u66f4\u5e38\u7528\u7684 InnoDB \u4e0d\u652f\u6301</li> <li>\u6ca1\u7528\u7684\u4e1c\u897f (FOR WEB DEV)</li> </ul> <pre><code>-- \u521b\u5efa\u8868\u65f6\u6307\u5b9a\u5168\u6587\u672c\u641c\u7d22\nFULLTEXT(\u5217\u540d)\n\n-- \u4f7f\u7528\nSELECT * FROM table_name WHERE MATCH(column_name) AGAINST('\u641c\u7d22\u5173\u952e\u5b57'); -- \u4e0d\u533a\u5206\u5927\u5c0f\u5199, \u641c\u7d22\u5b50\u4e32\n-- \u6ce8\u610f, \u5168\u6587\u672c\u641c\u7d22\u4f1a\u7ed9\u7ed3\u679c\u6309\u5339\u914d\u5ea6(\u5b50\u4e32\u51fa\u73b0\u7684\u5148\u540e)\u6392\u5e8f\n\n-- \u67e5\u8be2\u62d3\u5c55\nSELECT * FROM table_name WHERE MATCH(column_name) AGAINST('\u641c\u7d22\u5173\u952e\u5b57' WITH QUERY EXPANSION);  -- \u5c06\u7ed3\u679c\u4f5c\u4e3a\u5173\u952e\u5b57\u641c\u7d22\n\n-- \u5e03\u5c14\u641c\u7d22\nSELECT * FROM table_name WHERE MATCH(column_name) AGAINST('+\u641c\u7d22\u5173\u952e\u5b57 1 -\u641c\u7d22\u5173\u952e\u5b57 2' IN BOOLEAN MODE); -- \u641c\u7d22 \u5173\u952e\u5b57 1 \u51fa\u73b0, \u641c\u7d22 \u5173\u952e\u5b57 2 \u4e0d\u51fa\u73b0\n-- \u6709\u8bb8\u591a\u7b26\u53f7\u53ef\u4ee5\u4f7f\u7528\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_4","title":"\u521b\u5efa\u548c\u64cd\u7eb5\u8868","text":"<ul> <li>\u8868\u95f4\u53ef\u4ee5\u6df7\u7528\u5f15\u64ce, \u4f46\u4e0d\u652f\u6301\u5916\u952e</li> <li>MYISAM \u652f\u6301\u5168\u6587\u672c\u641c\u7d22 InnoDB \u652f\u6301\u4e8b\u52a1\u5904\u7406, MEMORY \u662f\u5b58\u5728\u4e8e\u5185\u5b58\u4e2d\u7684 MYISAM</li> </ul> <pre><code>CREATE TABLE \u8868\u540d(\u5217\u540d 1 \u6570\u636e\u7c7b\u578b NOT NULL, \u5217\u540d 2 \u6570\u636e\u7c7b\u578b, ...)ENGINE=InnoDB; -- \u6307\u5b9a\u5f15\u64ce\n\n\u5217\u540d \u6570\u636e\u7c7b\u578b NOT NULL AUTO_INCREMENT; -- \u6307\u5b9a\u81ea\u589e\u5217 (\u884c\u95f4\u503c\u552f\u4e00)(\u6709\u4e2a\u5168\u5c40\u53d8\u91cf, \u6bcf\u6b21\u81ea\u589e 1 \u4f5c\u4e3a\u9ed8\u8ba4\u503c)\n-- \u4f46\u4e5f\u53ef\u4ee5\u5728 INSERT \u4e2d\u6307\u5b9a (\u76f8\u5f53\u4e8e\u6539\u53d8\u53d8\u91cf\u503c, \u4ee5\u6b64\u81ea\u589e)\n\nSELECT last_insert_id(); -- \u83b7\u53d6\u6700\u540e\u4e00\u6b21\u63d2\u5165\u7684\u81ea\u589e\u5217\u7684\u503c\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_5","title":"\u521b\u5efa\u5b58\u50a8\u8fc7\u7a0b","text":"<ul> <li>\u53c2\u6570\u540d\u524d\u7684 <code>IN</code>, <code>OUT</code>, <code>INOUT</code> \u6307\u5b9a\u53c2\u6570\u7684\u7c7b\u578b (\u4f20\u5165, \u4f20\u51fa, \u4f20\u5165\u4f20\u51fa)</li> <li>MySQL \u7684\u53d8\u91cf\u540d\u5fc5\u987b\u4ee5 <code>@</code>\u5f00\u5934<ul> <li><code>SELECT ... INTO @\u53d8\u91cf\u540d;</code> \u8d4b\u503c</li> <li><code>SET @\u53d8\u91cf\u540d=\u503c;</code> \u8d4b\u503c</li> <li><code>SELECT @\u53d8\u91cf\u540d;</code> \u67e5\u770b\u503c</li> </ul> </li> </ul> <pre><code>CREATE PROCEDURE \u5b58\u50a8\u8fc7\u7a0b\u540d(IN \u53c2\u6570 1 \u6570\u636e\u7c7b\u578b, OUT \u53c2\u6570 2 \u6570\u636e\u7c7b\u578b, INOUT ...)COMMENT '\u6ce8\u91ca' -- \u4f1a\u5728 SHOW PROCEDURE STATUS \u4e2d\u663e\u793a\nBEGIN\n    -- \u5b58\u50a8\u8fc7\u7a0b\u4f53\n    IF \u6761\u4ef6 THEN\n        -- \u8bed\u53e5\n    END IF;\nEND;\n\nCALL \u5b58\u50a8\u8fc7\u7a0b\u540d(123456, @AAAA, ...); -- \u8c03\u7528\u5b58\u50a8\u8fc7\u7a0b\n\nDROP PROCEDURE \u5b58\u50a8\u8fc7\u7a0b\u540d; -- \u5220\u9664\u5b58\u50a8\u8fc7\u7a0b\n\nSHOW PROCEDURE STATUS; -- \u67e5\u770b\u6240\u6709\u5b58\u50a8\u8fc7\u7a0b\u7684\u4fe1\u606f\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_6","title":"\u89e6\u53d1\u5668","text":"<ul> <li>\u89e6\u53d1\u5668\u662f\u7279\u6b8a\u7684\u5b58\u50a8\u8fc7\u7a0b, \u5f53\u5b83\u4f9d\u6258\u7684\u8868\u53d1\u751f\u7279\u5b9a\u64cd\u4f5c (\u63d2\u5165 / \u66f4\u65b0) \u65f6, \u4f1a\u81ea\u52a8\u6267\u884c</li> <li><code>BEFORE</code>/<code>AFTER</code> \u6307\u5b9a\u89e6\u53d1\u5668\u5728\u4e8b\u4ef6\u4e4b\u524d / \u4e4b\u540e\u6267\u884c<ul> <li><code>BEFORE</code> \u89e6\u53d1\u5668\u5982\u679c\u6267\u884c\u5931\u8d25, \u5219\u4e8b\u4ef6\u4e0d\u4f1a\u53d1\u751f</li> </ul> </li> </ul> <pre><code>CREATE TRIGGER \u89e6\u53d1\u5668\u540d BEFORE/AFTER INSERT/UPDATE/DELETE ON \u8868\u540d FOR EACH ROW \u884c\u4e3a -- FOR EACH ROW \u8868\u793a\u884c\u4e3a\u9488\u5bf9\u6bcf\u4e00\u884c INSERT/UPDATE/DELETE\n-- \u884c\u4e3a\u53ef\u4ee5\u662f\u8bed\u53e5 / BEGIN END \u5757\n\nDROP TRIGGER \u89e6\u53d1\u5668\u540d; -- \u5220\u9664\u89e6\u53d1\u5668\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#insert","title":"<code>INSERT</code>\u89e6\u53d1\u5668","text":"<ul> <li>\u65b0\u884c\u7684\u4fe1\u606f\u53ef\u4ee5\u901a\u8fc7 <code>NEW</code> \u865a\u62df\u8868\u8bbf\u95ee<ul> <li>\u53ef\u4ee5\u4fee\u6539\u65b0\u884c\u7684\u4fe1\u606f</li> </ul> </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#delete","title":"<code>DELETE</code>\u89e6\u53d1\u5668","text":"<ul> <li>\u65e7\u884c\u7684\u4fe1\u606f\u53ef\u4ee5\u901a\u8fc7 <code>OLD</code> \u865a\u62df\u8868\u8bbf\u95ee<ul> <li>\u4e0d\u53ef\u4fee\u6539\u65e7\u884c\u7684\u4fe1\u606f</li> </ul> </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#update","title":"<code>UPDATE</code>\u89e6\u53d1\u5668","text":"<ul> <li>\u4e0a\u9762\u4fe9\u7684\u878d\u5408</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_7","title":"\u5b57\u7b26\u96c6\u4e0e\u6821\u5bf9\u987a\u5e8f","text":"<ul> <li>Cast ()/Convert () \u53ef\u4ee5\u4e34\u65f6\u8f6c\u6362\u5b57\u7b26\u4e32\u5b57\u7b26\u96c6</li> </ul> <pre><code>SHOW CHARACTER SET; -- \u67e5\u770b\u6240\u6709\u5b57\u7b26\u96c6\n\nSHOW COLLATION; -- \u67e5\u770b\u6240\u6709\u6821\u5bf9\u987a\u5e8f\n\nCREATE TABLE \u8868\u540d(\u5217\u540d 1 \u6570\u636e\u7c7b\u578b DEFAULT CHARACTER SET \u5b57\u7b26\u96c6 COLLATE \u6821\u5bf9\u987a\u5e8f, \u5217\u540d 2 \u6570\u636e\u7c7b\u578b)DEFAULT CHARACTER SET \u5b57\u7b26\u96c6 COLLATE \u6821\u5bf9\u987a\u5e8f; -- \u6307\u5b9a\u5217/\u5168\u5c40\u5b57\u7b26\u96c6\u548c\u6821\u5bf9\u987a\u5e8f\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_8","title":"\u7528\u6237\u7ba1\u7406","text":"<ul> <li>MySQL \u4e2d\u6709\u4e00\u4e2a mysql \u6570\u636e\u5e93, \u5176\u4e2d\u6709\u4e00\u4e2a user \u8868, \u5b83\u7684 user \u5217\u5b58\u50a8\u4e86\u6240\u6709\u7528\u6237\u8d26\u53f7</li> <li>\u7528\u6237\u540d\u540e\u53ef\u4ee5\u52a0\u4e0a <code>@\u4e3b\u673a\u540d</code>\u6307\u5b9a\u7528\u6237\u7684\u4e3b\u673a\u540d, \u5982\u679c\u7701\u7565\u5219\u8868\u793a\u7528\u6237\u53ef\u4ee5\u4ece\u6240\u6709\u4e3b\u673a\u8bbf\u95ee</li> </ul> <pre><code>CREATE USER \u7528\u6237\u540d IDENTIFIED BY '\u5bc6\u7801'; -- \u521b\u5efa\u7528\u6237\nRENAME USER \u7528\u6237\u540d TO \u65b0\u7528\u6237\u540d; -- \u91cd\u547d\u540d\u7528\u6237\nDROP USER \u7528\u6237\u540d; -- \u5220\u9664\u7528\u6237\n\nSHOW GRANTS FOR \u7528\u6237\u540d; -- \u67e5\u770b\u7528\u6237\u7684\u6743\u9650\n\nGRANT \u6743\u9650 1, \u6743\u9650 2 ON \u6570\u636e\u5e93.\u8868 TO \u7528\u6237\u540d; -- \u6388\u4e88\u7528\u6237\u6743\u9650\nREVOKE ALL \u6743\u9650 FROM \u7528\u6237\u540d; -- \u64a4\u9500\u7528\u6237\u6743\u9650\n-- \u53ef\u4ee5\u662f ALL \u6216 ON ...\n\nSET PASSWORD FOR \u7528\u6237\u540d=\u5bc6\u7801; -- \u8bbe\u7f6e\u7528\u6237\u5bc6\u7801\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_9","title":"\u6570\u636e\u5e93\u7ef4\u62a4","text":"<ul> <li>\u5907\u4efd\u7684\u6700\u4f73\u65b9\u5f0f\u8fd8\u662f\u4f7f\u7528\u5907\u4efd\u5de5\u5177</li> <li><code>data</code> \u76ee\u5f55\u4e2d\u6709\u8bb8\u591a\u65e5\u5fd7\u6587\u4ef6<ul> <li><code>hostname.err</code> \u9519\u8bef\u65e5\u5fd7</li> <li><code>hostname.log</code> \u67e5\u8be2\u65e5\u5fd7</li> <li><code>hostname-slow.log</code> \u6162\u8bed\u53e5\u65e5\u5fd7 (\u7528\u4e8e\u8bb0\u5f55\u6267\u884c\u65f6\u95f4\u8d85\u8fc7 <code>long_query_time</code> \u7684\u8bed\u53e5)</li> <li><code>hostname-bin</code> \u4e8c\u8fdb\u5236\u65e5\u5fd7</li> <li><code>FLUSH LOGS</code> \u5237\u65b0\u7f13\u5b58</li> <li>\u6587\u4ef6\u540d\u53ef\u4ee5\u6307\u5b9a</li> </ul> </li> </ul> <pre><code>FLUSH TABLES; -- \u5237\u65b0\u7f13\u5b58\n\nBACKUP TABLE \u8868\u540d TO '\u6587\u4ef6\u8def\u5f84'; -- \u5907\u4efd\u8868\nSELECT * FROM \u8868\u540d INTO OUTFILE '\u6587\u4ef6\u8def\u5f84'; -- \u5907\u4efd\u8868\nRESTORE TABLE \u8868\u540d FROM '\u6587\u4ef6\u8def\u5f84'; -- \u6062\u590d\u8868\n\nANALYZE TABLE \u8868\u540d; -- \u5206\u6790\u8868\u72b6\u6001\n-- \u7c7b\u4f3c\u7684\u6709\u8bb8\u591a, \u4e0d\u5217\u4e3e\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_10","title":"\u6027\u80fd\u4f18\u5316","text":"<ul> <li>\u8c03\u6574\u5185\u5b58\u5206\u914d / \u7f13\u51b2\u533a\u5927\u5c0f\u7b49</li> <li>\u7981\u6b62\u4f4e\u6027\u80fd\u8fdb\u7a0b</li> <li>\u7f16\u5199\u9ad8\u6548\u7684 SQL \u8bed\u53e5 (<code>EXPLAIN</code> \u53ef\u4ee5\u67e5\u770b <code>SELECT</code> \u8bed\u53e5\u7684\u6267\u884c\u7ec6\u8282)</li> <li>\u4f7f\u7528\u5b58\u50a8\u8fc7\u7a0b / \u89e6\u53d1\u5668</li> <li>\u5efa\u7acb\u6b63\u786e\u7684\u8868\u7ed3\u6784</li> <li>\u5bfc\u5165\u6570\u636e\u65f6\u5173\u95ed\u81ea\u52a8\u63d0\u4ea4 / \u7d22\u5f15</li> <li>\u4f7f\u7528\u7d22\u5f15\u5f3a\u5316\u8bfb\u6027\u80fd (\u4f46\u5b83\u4f1a\u964d\u4f4e\u5199\u6027\u80fd)</li> <li><code>UNION</code> &gt; <code>OR</code></li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_11","title":"\u6570\u636e\u7c7b\u578b","text":"<ul> <li>\u5b57\u7b26\u4e32<ul> <li><code>CHAR(1~255)</code> \u5b9a\u957f\u5b57\u7b26\u4e32</li> <li><code>TEXT</code> \u53d8\u957f\u5b57\u7b26\u4e32 (\u6700\u5927 64K)</li> <li><code>MEDIUMTEXT</code> \u53d8\u957f\u5b57\u7b26\u4e32 (\u6700\u5927 16k)</li> <li><code>LONGTEXT</code> \u53d8\u957f\u5b57\u7b26\u4e32 (\u6700\u5927 4G)</li> <li><code>TINYTEXT</code> \u53d8\u957f\u5b57\u7b26\u4e32 (\u6700\u5927 255 \u5b57\u8282)</li> <li><code>VARCHAR(n)</code> \u53d8\u957f\u5b57\u7b26\u4e32 (\u6700\u5927 n \u5b57\u8282, n \u6700\u5927\u4e3a 255)</li> <li><code>ENUM</code> \u63a5\u53d7\u4e00\u4e2a\u9884\u5b9a\u4e49\u7684\u96c6\u5408 (\u6700\u591a 64K \u4e2a\u503c) \u4e2d\u7684\u4e00\u4e2a\u503c</li> <li><code>SET</code> \u63a5\u53d7\u4e00\u4e2a\u9884\u5b9a\u4e49\u7684\u96c6\u5408 (\u6700\u591a 64 \u4e2a\u503c) \u4e2d\u7684\u4e00\u4e2a\u5b50\u96c6</li> <li>\u53d8\u957f\u4e32\u6162\u4e14\u4e0d\u652f\u6301\u7d22\u5f15</li> </ul> </li> <li>\u6574\u6570<ul> <li><code>BIT</code> 1~64 \u4f4d</li> <li><code>TINYINT</code> 1 \u5b57\u8282</li> <li><code>SMALLINT</code> 2 \u5b57\u8282</li> <li><code>MEDIUMINT</code> 3 \u5b57\u8282</li> <li><code>INT</code> 4 \u5b57\u8282</li> <li><code>BIGINT</code> 8 \u5b57\u8282</li> <li>\u524d\u52a0 <code>UNSIGNED</code> \u4e3a\u540c\u5b57\u8282\u65e0\u7b26\u53f7\u6574\u6570</li> </ul> </li> <li>\u6d6e\u70b9\u6570<ul> <li><code>REAL</code> 4 \u5b57\u8282</li> <li><code>FLOAT</code> \u5355\u7cbe\u5ea6</li> <li><code>DOUBLE</code> \u53cc\u7cbe\u5ea6</li> <li><code>DECIMAL(\u603b\u4f4d\u6570, \u5c0f\u6570\u4f4d\u6570)</code> \u53ef\u53d8\u7cbe\u5ea6</li> </ul> </li> <li>\u5e03\u5c14<ul> <li><code>BOOL</code> 1bit</li> </ul> </li> <li>\u65e5\u671f<ul> <li><code>DATE</code>YYYY-MM-DD (1000-9999)</li> <li><code>TIME</code>HH:MM:SS</li> <li><code>DATETIME</code> \u65e5\u671f\u548c\u65f6\u95f4</li> <li><code>TIMESTAMP</code> \u5c0f\u8303\u56f4\u7684 <code>DATETIME</code></li> <li><code>YEAR</code> 2 \u4f4d (1970-2069) / 4 \u4f4d (1901-2155)</li> </ul> </li> <li>\u4e8c\u8fdb\u5236<ul> <li><code>BLOB</code>64K</li> <li><code>MEDIUMBLOB</code>16M</li> <li><code>LONGBLOB</code>4G</li> </ul> </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/","title":"SQL \u8bed\u6cd5\u57fa\u7840","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>SQL \u5fc5\u77e5\u5fc5\u4f1a - \u592a\u7b80\u5355\u4e86, \u4e0d\u5982\u770b\u83dc\u9e1f\u6559\u7a0b, \u800c\u4e14\u8bb8\u591a\u73af\u5883\u76f8\u5173\u7684\u8bed\u53e5\u6ca1\u5199 - 3</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_2","title":"\u6570\u636e\u5e93","text":"<ul> <li>\u6570\u636e\u5e93\u4e2d\u6709\u591a\u4e2a\u8868</li> <li>\u6a21\u5f0f\u63cf\u8ff0\u4e86\u8868\u7684\u7ed3\u6784</li> <li>\u663e\u7136\u8868\u7531\u5217 (\u5b57\u6bb5) \u4e0e\u884c (\u8bb0\u5f55) \u7ec4\u6210</li> <li>\u4e3b\u952e (\u4e00\u4e2a\u5b57\u6bb5) \u6807\u8bc6\u4e86\u884c\u7684\u552f\u4e00\u6027<ul> <li>\u4e0d\u53ef\u4e3a\u7a7a</li> <li>\u4e0d\u53ef\u91cd\u590d (\u4e0d\u540c\u65f6\u4e5f\u4e0d\u884c)</li> <li>\u4e0d\u53ef\u4fee\u6539</li> </ul> </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_3","title":"\u68c0\u7d22\u6570\u636e","text":"<ul> <li>sql \u4e0d\u533a\u5206\u5927\u5c0f\u5199</li> <li>sql \u53ef\u4ee5\u4e0d\u52a0<code>;</code></li> <li>sql \u5bf9\u7a7a\u683c\u4e0d\u654f\u611f</li> </ul> <pre><code>SELECT \u5217\u540d FROM \u8868\u540d; -- \u68c0\u7d22\u4e00\u5217\nSELECT \u5217\u540d 1, \u5217\u540d 2 FROM \u8868\u540d; -- \u68c0\u7d22\u591a\u5217\nSELECT * FROM \u8868\u540d; -- \u68c0\u7d22\u6240\u6709\u5217\n\nSELECT DISTINCT \u5217\u540d FROM \u8868\u540d; -- \u68c0\u7d22\u4e0d\u91cd\u590d\u7684\u5217 (\u53bb\u91cd), \u4fee\u9970 SELECT \u800c\u975e\u5217\u540d\n\nSELECT \u5217\u540d FROM \u8868\u540d LIMIT N OFFSET M; -- \u8fd4\u56de\u7b2c M \u884c(\u4ece 0 \u5f00\u59cb\u6570)\u8d77\u524d N \u884c\nSELECT \u5217\u540d FROM \u8868\u540d LIMIT M, N -- \u7b49\u6548\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_4","title":"\u6392\u5e8f\u68c0\u7d22\u6570\u636e","text":"<ul> <li>\u5b57\u5178\u5e8f\u4e2d <code>A</code> \u7b49\u4e8e <code>a</code> (MySQL \u7684\u9ed8\u8ba4\u60c5\u51b5), \u53ef\u4ee5\u4fee\u6539</li> </ul> <pre><code>SELECT \u5217\u540d 1 FROM \u8868\u540d ORDER BY \u5217\u540d 2, \u5217\u540d 3 -- \u68c0\u7d22\u7ed3\u679c\u6309 \u5217 2 \u6392\u5e8f (\u76f8\u540c\u6309 \u5217 3 ...)\nSELECT \u5217\u540d 1 FROM \u8868\u540d ORDER BY 2, 3 -- \u68c0\u7d22\u7ed3\u679c\u6309\u7b2c 2 \u5217 (\u5217\u5b58\u5728\u987a\u5e8f) \u6392\u5e8f\n\nSELECT \u5217\u540d 1 FROM \u8868\u540d ORDER BY \u5217\u540d 2 DESC, \u5217\u540d 3 DESC -- \u964d\u5e8f, \u4fee\u9970\u5217\u540d\u800c\u975e ORDER BY\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_5","title":"\u8fc7\u6ee4\u6570\u636e / \u9ad8\u7ea7\u6570\u636e\u8fc7\u6ee4","text":"<ul> <li>\u4f7f\u7528 <code>AND</code>, <code>OR</code>, <code>NOT</code> \u8054\u7ed3\u4fee\u9970\u771f\u503c</li> <li><code>AND</code> \u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e <code>OR</code></li> <li>\u6570\u503c\u4e0e <code>NULL</code> \u4e0d\u5b58\u5728<code>!=</code> \u5173\u7cfb</li> </ul> <pre><code>SELECT \u5217\u540d 1 FROM \u8868\u540d WHERE \u771f\u503c\u8868\u8fbe\u5f0f ORDER BY \u5217\u540d 2, \u5217\u540d 3 -- \u5e94\u5728 ORDER BY \u524d\u9762\n\n/*\n= != &lt;&gt; \u7b49\u4e8e \u4e0d\u7b49\u4e8e \u4e0d\u7b49\u4e8e\n&lt; &lt;= !&lt; \u5c0f\u4e8e \u5c0f\u4e8e\u7b49\u4e8e \u4e0d\u5c0f\u4e8e \u5927\u4e8e\u4e00\u6837\nBETWEEN low AND high \u4e24\u6570\u4e4b\u95f4\nIS NULL \u4e3a NULL\nIN (\u503c 1, ...) \u7b49\u4e8e () \u5185\u4efb\u4f55\u503c (\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u5b50\u53e5)\n*/\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_6","title":"\u7528\u901a\u914d\u7b26\u8fdb\u884c\u8fc7\u6ee4","text":"<ul> <li><code>%</code> \u5339\u914d\u4efb\u610f\u591a\u4e2a\u4efb\u610f\u5b57\u7b26</li> <li><code>_</code>\u5339\u914d\u5355\u4e2a\u4efb\u610f\u5b57\u7b26</li> <li><code>[\u5b57\u7b26\u8303\u56f4]</code> \u5339\u914d\u5355\u4e2a <code>[]</code> \u5185\u4efb\u610f\u5b57\u7b26<ul> <li><code>[^\u5b57\u7b26\u8303\u56f4]</code> \u5339\u914d\u5355\u4e2a <code>[]</code> \u5916\u4efb\u610f\u5b57\u7b26 (\u5426\u5b9a)</li> </ul> </li> <li>\u6570\u636e\u5e93\u4e2d\u4e00\u4e9b\u5b57\u6bb5\u7c7b\u578b\u672a\u4f7f\u7528\u5b57\u7b26\u4f4d\u7f6e\u53ef\u80fd\u7528<code>' '</code> \u586b\u5145<ul> <li>\u5f71\u54cd\u901a\u914d\u7b26\u7684\u5339\u914d</li> </ul> </li> </ul> <pre><code>SELECT \u5217\u540d 1 FROM \u8868\u540d WHERE \u5217\u540d 2 LIKE '\u901a\u914d\u7b26\u5b57\u7b26\u4e32'; -- LIKE \u76f8\u5f53\u4e8e =\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_7","title":"\u521b\u5efa\u8ba1\u7b97\u5b57\u6bb5","text":"<ul> <li>\u8ba1\u7b97\u5b57\u6bb5\u662f\u8868\u8fbe\u5f0f / \u51fd\u6570\u7684\u7ed3\u679c (\u4e34\u65f6\u5b57\u6bb5)</li> </ul> <pre><code>SELECT Concat(\u5217\u540d 1, \u5217\u540d 2, '666') FROM \u8868\u540d -- MySQL \u7684\u51fd\u6570\nSELECT \u5217\u540d 1*\u5217\u540d 2 FROM \u8868\u540d -- \u7b97\u672f\u8fd0\u7b97\n\nSELECT Concat(\u5217\u540d 1, \u5217\u540d 2, '666') AS \u522b\u540d FROM \u8868\u540d -- \u4fbf\u4e8e\u5ba2\u6237\u7aef\u5f15\u7528\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_8","title":"\u4f7f\u7528\u51fd\u6570\u5904\u7406\u6570\u636e","text":"<ul> <li>SQL \u51fd\u6570\u5f80\u5f80\u4e0d\u53ef\u79fb\u690d</li> <li>\u751a\u81f3\u6709\u5bfb\u627e\u8bfb\u97f3\u7c7b\u4f3c\u5b57\u7b26\u4e32\u7684\u51fd\u6570</li> </ul> <pre><code>-- \u4e0d\u5217\u4e3e\u4e86, \u6ca1\u610f\u4e49\n/*\n\u8fd4\u56de\u5b57\u7b26\u4e32\u957f\u5ea6\n\u53bb\u7a7a\u683c\n\u5927\u5c0f\u5199\u8f6c\u6362\n\u7c7b\u578b\u8f6c\u6362\n\u7b80\u5355\u7684\u6570\u5b66\u8ba1\u7b97\n*/\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_9","title":"\u6c47\u603b\u6570\u636e","text":"<ul> <li>\u4f7f\u7528\u805a\u96c6\u51fd\u6570 (\u6709\u7edf\u4e00\u7684\u5b9a\u4e49)</li> <li>MySQL \u652f\u6301\u8bb8\u591a \"\u6807\u51c6\u504f\u5dee\" \u805a\u96c6\u51fd\u6570</li> </ul> <pre><code>AVG()\nCOUNT()\nMAX()/MIN()\nSUM() -- \u5b57\u9762\u610f\u601d, \u90fd\u4f1a\u5ffd\u7565 NULL\n-- \u9664 COUNT() \u90fd\u53ef\u4ee5\u7528 DISTINCT \u4fee\u9970\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_10","title":"\u5206\u7ec4\u6570\u636e","text":"<ul> <li><code>GROUP BY</code> \u5e94\u5728 <code>WHERE</code> \u540e\u9762, <code>ORDER BY</code> \u524d\u9762</li> <li><code>NULL</code> \u503c\u4f1a\u88ab\u5355\u72ec\u5206\u7ec4</li> <li><code>GROUP BY</code> \u4e0d\u53ef\u8ddf\u968f\u805a\u96c6\u51fd\u6570, \u9664\u6b64\u4e4b\u5916\u7684 <code>SELECT</code> \u5217\u90fd\u9700\u8981\u51fa\u73b0\u5728 <code>GROUP BY</code> \u4e2d</li> <li><code>HAVING</code> \u51e0\u4e4e\u4e0e <code>WHERE</code> \u76f8\u540c, \u4f46\u5b83\u8fc7\u6ee4\u7684\u5bf9\u8c61\u662f\u5206\u7ec4\u540e\u7684\u7ed3\u679c (\u6bd4\u5982\u805a\u96c6\u51fd\u6570)</li> </ul> <pre><code>SELECT \u5217\u540d 1, \u5217\u540d 2 FROM \u8868\u540d GROUP BY \u5217\u540d 1, \u5217\u540d 2; -- \u5206\u7ec4\u540e, \u5217\u540d 1, \u5217\u540d 2 \u76f8\u540c\u7684\u884c\u88ab\u5206\u4e3a\u4e00\u7ec4\n\nSELECT \u5217\u540d 1, \u5217\u540d 2 FROM \u8868\u540d GROUP BY \u5217\u540d 1 HAVING \u771f\u503c\u8868\u8fbe\u5f0f; -- \u5bf9\u5206\u7ec4\u540e\u7684\u7ed3\u679c\u8fc7\u6ee4\n\nSELECT \u5217\u540d 1, \u5217\u540d 2 FROM \u8868\u540d GROUP BY \u5217\u540d 1 HAVING \u771f\u503c\u8868\u8fbe\u5f0f ORDER BY \u5217\u540d 3, \u5217\u540d 4; -- \u5bf9\u5206\u7ec4\u540e\u7684\u7ed3\u679c\u8fc7\u6ee4\u5e76\u6392\u5e8f\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_11","title":"\u4f7f\u7528\u5b50\u67e5\u8be2","text":"<ul> <li>\u5b50\u67e5\u8be2\u5229\u7528 <code>IN</code> \u5173\u952e\u5b57, \u5728 <code>()</code> \u4e2d\u4f7f\u7528\u53e6\u4e00\u4e2a\u67e5\u8be2 (\u4ee5\u53e6\u4e00\u4e2a\u67e5\u8be2\u7684\u7ed3\u679c\u4f5c\u4e3a\u7ea6\u675f\u7684\u67e5\u8be2)</li> <li>\u5b50\u67e5\u8be2\u4ec5\u53ef\u8fd4\u56de\u4e00\u5217</li> </ul> <pre><code>SELECT \u5217\u540d 1 FROM \u8868\u540d 1 WHERE \u5217\u540d 2 IN (SELECT \u5217\u540d 3 FROM \u8868\u540d 2 WHERE \u771f\u503c\u8868\u8fbe\u5f0f); -- \u5b50\u67e5\u8be2\u53ef\u4ee5\u662f\u4efb\u4f55\u4ec5\u8fd4\u56de\u4e00\u5217\u7684 SELECT \u8bed\u53e5\n\nSELECT \u5217\u540d 1 (SELECT \u8ba1\u7b97\u5b57\u6bb5 FROM \u8868\u540d 2 WHERE \u5916\u5c42\u67e5\u8be2\u7ed3\u679c\u53c2\u4e0e\u7684\u771f\u503c\u8868\u8fbe\u5f0f) FROM \u8868\u540d 1; -- \u8981\u6c42\u5b50\u67e5\u8be2\u4e0d\u53ef\u5347\u7ef4\n</code></pre> <ul> <li>\u5b8c\u5168\u9650\u5b9a\u5217\u540d (\u8868\u540d.\u5217\u540d)</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_12","title":"\u8054\u7ed3\u8868","text":"<ul> <li>\u8054\u7ed3\u53ef\u4ee5\u5728\u4e00\u4e2a <code>SELECT</code> \u8bed\u53e5\u4e2d\u8054\u7ed3\u591a\u4e2a\u8868 (\u4e34\u65f6\u8868)</li> <li>\u53ef\u4ee5\u4f7f\u7528\u590d\u6742\u7684\u8054\u7ed3\u6761\u4ef6\u8054\u7ed3\u4efb\u610f\u591a\u4e2a\u8868<ul> <li>SQL \u4f1a\u5c1d\u8bd5\u6240\u6709\u53ef\u80fd\u7684\u7ec4\u5408, \u56e0\u6b64\u6027\u80fd\u4f1a\u5f88\u5dee</li> </ul> </li> </ul> <pre><code>SELECT \u5217\u540d 1, \u5217\u540d 2 FROM \u8868\u540d 1, \u8868\u540d 2 WHERE \u771f\u503c\u8868\u8fbe\u5f0f; -- \u6ee1\u8db3\u771f\u503c\u8868\u8fbe\u5f0f\u7684\u884c\u88ab\u8054\u7ed3\u5373\u7b49\u503c\u8054\u7ed3(\u5185\u8054\u7ed3)\n-- \u6ca1 WHERE \u4f1a\u8fd4\u56de\u7b1b\u5361\u5c14\u79ef\n-- \u4ea6\u53ef\nSELECT \u5217\u540d 1, \u5217\u540d 2 FROM \u8868\u540d 1 INNER JOIN \u8868\u540d 2 ON \u771f\u503c\u8868\u8fbe\u5f0f; -- \u5185\u8054\u7ed3\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_13","title":"\u521b\u5efa\u9ad8\u7ea7\u8054\u7ed3","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_14","title":"\u81ea\u8054\u7ed3","text":"<ul> <li>\u8868\u4e5f\u53ef\u4ee5\u6709\u522b\u540d, \u4f46\u4ec5\u4f5c\u4e34\u65f6\u4f7f\u7528, \u4e0d\u8fd4\u56de\u5ba2\u6237\u7aef</li> <li>\u56e0\u6b64\u5f53\u81ea\u8054\u7ed3\u65f6, \u53ef\u4f7f\u7528\u522b\u540d\u533a\u5206\u540c\u4e00\u7269\u7406\u8868\u7684\u4e24\u4e2a\u903b\u8f91\u8868</li> <li>\u81ea\u8054\u7ed3\u5f80\u5f80\u6bd4\u540c\u7c7b\u578b\u7684\u5b50\u67e5\u8be2\u66f4\u9ad8\u6548</li> </ul> <pre><code>SELECT \u5217\u540d 1, \u5217\u540d 2 FROM \u8868\u540d 1 AS \u522b\u540d 1, \u8868\u540d 1 AS \u522b\u540d 2 WHERE \u771f\u503c\u8868\u8fbe\u5f0f; -- \u81ea\u8054\u7ed3\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_15","title":"\u81ea\u7136\u8054\u7ed3","text":"<ul> <li>\u81ea\u7136\u8054\u7ed3\u662f\u7279\u6b8a\u7684\u81ea\u8054\u7ed3, \u5b83\u8fd4\u56de\u6240\u6709\u4e0d\u91cd\u590d\u7684\u5217 (\u53d6\u6bcf\u4e2a\u8868\u4e2d\u975e\u516c\u6709\u7684\u5217)</li> <li>\u663e\u7136 \"\u975e\u81ea\u7136\u8054\u7ed3\" \u6ca1\u4ec0\u4e48\u610f\u4e49</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_16","title":"\u5916\u90e8\u8054\u7ed3","text":"<ul> <li>\u5916\u90e8\u8054\u7ed3\u8fd4\u56de\u5185\u8054\u7ed3\u7684\u7ed3\u679c\u4e0e\u5de6\u8868\u4e0d\u6ee1\u8db3\u8054\u7ed3\u6761\u4ef6\u7684\u884c</li> </ul> <pre><code>SELECT \u5217\u540d 1, \u5217\u540d 2 FROM \u8868\u540d 1 LEFT OUTER JOIN \u8868\u540d 2 ON \u771f\u503c\u8868\u8fbe\u5f0f; -- \u5de6\u5916\u90e8\u8054\u7ed3, \u53f3 / \u5168\u5916\u90e8\u8054\u7ed3\u4e0d\u5177\u6709\u53ef\u79fb\u690d\u6027\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_17","title":"\u7ec4\u5408\u67e5\u8be2","text":"<ul> <li>\u4f7f\u7528 <code>UNION</code> \u8054\u7ed3\u591a\u4e2a\u67e5\u8be2\u7684\u7ed3\u679c (\u5e76\u96c6)<ul> <li>\u6ce8\u610f <code>UNION</code> \u7684\u6bcf\u4e2a SELECT \u6240\u67e5\u8be2\u7684\u540d\u5b57\u5fc5\u987b\u76f8\u540c</li> <li><code>UNION</code> \u9ed8\u8ba4\u4f1a\u53bb\u91cd, \u4f7f\u7528 <code>UNION ALL</code> \u53ef\u4ee5\u4e0d\u53bb\u91cd</li> </ul> </li> <li><code>UNION</code> \u7b49\u6548\u4e8e\u591a\u5b50\u53e5 <code>WHERE</code>, \u6570\u636e\u5e93\u4e5f\u4f1a\u5c3d\u91cf\u4f18\u5316\u6210\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5</li> <li>\u82e5\u60f3\u6392\u5e8f, \u5219\u5e94\u5728 <code>UNION</code> \u7684\u6700\u540e\u4e00\u4e2a <code>SELECT</code> \u5b50\u53e5\u4f7f\u7528 <code>ORDER BY</code></li> <li><code>UNION</code> \u53ef\u4ee5\u7528\u4e8e\u67e5\u8be2\u591a\u4e2a\u8868, \u4f7f\u7528\u522b\u540d\u8ba9\u67e5\u8be2\u7684\u5bf9\u8c61\u4e00\u81f4 (\u7c7b\u578b\u4e5f\u5f97\u53ef\u4ee5\u8f6c\u6362)</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_18","title":"\u63d2\u5165\u6570\u636e","text":"<ul> <li>\u4e00\u6b21\u63d2\u5165\u591a\u884c\u4f18\u4e8e\u591a\u6761\u5355\u884c\u63d2\u5165</li> </ul> <pre><code>INSERT INTO \u8868\u540d VALUES(\u503c 1, \u503c 2, ...); -- \u6309\u6b21\u5e8f\u63d2\u5165, \u8df3\u8fc7\u5e94\u6307\u660e NULL\n\nINSERT INTO \u8868\u540d(\u5217\u540d 1, \u5217\u540d 2, ...) VALUES(\u503c 1, \u503c 2, ...); -- \u66f4\u5b89\u5168, \u7701\u7565\u7684\u5217\u4f1a\u88ab\u7f6e\u4e3a NULL (\u82e5\u8868\u5b9a\u4e49, \u4e3a\u9ed8\u8ba4\u503c)\n\nINSERT INTO \u8868\u540d(\u5217\u540d 1, \u5217\u540d 2, ...) VALUES(\u503c 1, \u503c 2, ...), VALUES(\u503c 3, \u503c 4, ...); -- \u63d2\u5165\u591a\u884c, MySQL \u652f\u6301\n\nINSERT INTO \u8868\u540d(\u5217\u540d 1, \u5217\u540d 2, ...) SELECT \u5217\u540d 1, \u5217\u540d 2, ... FROM \u8868\u540d 2; -- \u4ece \u8868 2 \u4e2d\u9009\u62e9\u884c\u63d2\u5165 \u8868 1\n-- \u6ce8\u610f\u88ab\u63d2\u5165\u8868\u5fc5\u987b\u5b58\u5728\n\nSELECT * INTO \u8868\u540d 1 FROM \u8868\u540d 2; -- \u4ece \u8868 2 \u4e2d\u5bfc\u51fa \u8868 1 , \u6ce8\u610f \u8868 1 \u4e0d\u5b58\u5728\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_19","title":"\u66f4\u65b0\u4e0e\u5220\u9664\u6570\u636e","text":"<ul> <li><code>UPDATE IGNORE</code> \u53ef\u4ee5\u5f3a\u5236\u66f4\u65b0\u591a\u884c\u7684 <code>UPDATE</code> \u8bed\u53e5\u4e0d\u4fdd\u6301\u539f\u5b50\u6027</li> </ul> <pre><code>UPDATE \u8868\u540d SET \u5217\u540d 1=\u503c 1, \u5217\u540d 2=\u503c 2, ... WHERE \u771f\u503c\u8868\u8fbe\u5f0f; -- \u66f4\u65b0\u5217, \u4e0d\u6307\u5b9a WHERE \u5219\u66f4\u65b0\u6240\u6709\u884c (\u5c0f\u5fc3!)\n\nDELETE FROM \u8868\u540d WHERE \u771f\u503c\u8868\u8fbe\u5f0f; -- \u5220\u9664\u884c, \u4e0d\u6307\u5b9a WHERE \u5219\u5220\u9664\u6240\u6709\u884c (\u5c0f\u5fc3!)\n-- \u60f3\u5220\u9664\u67d0\u884c\u67d0\u5217, \u5219\u5e94 UPDATE \u4e3a NULL\n</code></pre> <ul> <li>\u5916\u952e\u6307\u8868\u4e2d\u7684\u5217\u5173\u8054\u4e86\u53e6\u4e00\u4e2a\u8868\u7684\u5217 (\u6700\u597d\u662f\u4e3b\u952e), \u6570\u636e\u5e93\u4ee5\u6b64\u4fdd\u8bc1\u6570\u636e\u7684\u5f15\u7528\u5b8c\u6574\u6027<ul> <li>\u6570\u636e\u5e93\u4f1a\u963b\u6b62\u5220\u9664\u5916\u952e\u5728\u5176\u5b83\u8868\u4e2d\u5177\u6709\u5b9e\u4f8b\u7684\u884c</li> </ul> </li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_20","title":"\u521b\u5efa\u548c\u64cd\u7eb5\u8868","text":"<pre><code>CREATE TABLE \u8868\u540d(\u5217\u540d 1 \u6570\u636e\u7c7b\u578b NOT NULL, \u5217\u540d 2 \u6570\u636e\u7c7b\u578b, ...); -- \u521b\u5efa\u8868, NOT NULL \u8868\u793a\u4e0d\u53ef\u4e3a\u7a7a (\u9ed8\u8ba4\u4e3a NULL, \u53ef\u4e3a\u7a7a)\n\n\u5217\u540d \u6570\u636e\u7c7b\u578b NOT NULL DEFAULT \u503c; -- \u6307\u5b9a\u9ed8\u8ba4\u503c\n\nALTER TABLE \u8868\u540d ADD \u5217\u540d \u6570\u636e\u7c7b\u578b; -- \u6dfb\u52a0\u5217, ALTER TABLE \u8fd8\u652f\u6301\u8bb8\u591a\u64cd\u4f5c, \u4f46\u5f3a\u4f9d\u8d56\u73af\u5883, \u4e0d\u5efa\u8bae\u4f7f\u7528\n\nRENAME TABLE \u65e7\u8868\u540d TO \u65b0\u8868\u540d; -- \u91cd\u547d\u540d\u8868\n\nDROP TABLE \u8868\u540d; -- \u5220\u9664\u8868\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_21","title":"\u4f7f\u7528\u89c6\u56fe","text":"<ul> <li>\u89c6\u56fe\u662f\u865a\u62df\u7684\u8868, \u5176\u5185\u5bb9\u662f\u67e5\u8be2\u7684\u7ed3\u679c, \u89c6\u56fe\u672c\u8eab\u4e0d\u5305\u542b\u6570\u636e</li> <li>\u89c6\u56fe\u7684\u529f\u80fd (\u5982\u53ef\u5426\u4f9d\u9760\u89c6\u56fe\u5199\u5165) \u7531\u6570\u636e\u5e93\u51b3\u5b9a<ul> <li>MySQL \u652f\u6301\u57fa\u4e8e\u89c6\u56fe\u7684\u4fee\u6539, \u4f46\u8981\u6c42\u89c6\u56fe\u6709\u5b8c\u6574\u7684\u8868\u7684\u57fa\u6570\u636e (\u4e0d\u542b\u805a\u96c6\u51fd\u6570 / \u5206\u7ec4 /...SQL \u8bed\u53e5)</li> </ul> </li> <li>\u89c6\u56fe\u4f1a\u4fdd\u5b58\u67e5\u8be2\u7684\u987a\u5e8f</li> </ul> <pre><code>CREATE VIEW \u89c6\u56fe\u540d AS SELECT \u5217\u540d 1, \u5217\u540d 2, ... FROM \u8868\u540d; -- \u521b\u5efa\u89c6\u56fe, \u6ce8\u610f\u89c6\u56fe\u540d\u4e0d\u80fd\u91cd\u590d\n\nDROP VIEW \u89c6\u56fe\u540d; -- \u5220\u9664\u89c6\u56fe\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_22","title":"\u5b58\u50a8\u8fc7\u7a0b","text":"<ul> <li>\u5b58\u50a8\u8fc7\u7a0b\u662f\u4e00\u7ec4\u6d41\u7a0b\u63a7\u5236\u7684 SQL \u8bed\u53e5</li> </ul> <pre><code>EXECUTE \u5b58\u50a8\u8fc7\u7a0b\u540d(\u53c2\u6570 1, \u53c2\u6570 2, ...); -- \u6267\u884c\u5b58\u50a8\u8fc7\u7a0b\n</code></pre> <ul> <li>\u5b58\u50a8\u8fc7\u7a0b\u7684\u521b\u5efa\u4e0e\u7f16\u5199\u4f9d\u8d56\u6570\u636e\u5e93, \u5728 MySQL \u5fc5\u77e5\u5fc5\u4f1a\u4e2d\u8ba8\u8bba\u5427</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_23","title":"\u7ba1\u7406\u4e8b\u52a1\u5904\u7406","text":"<ul> <li>\u4e8b\u52a1\u5904\u7406\u786e\u4fdd\u4e86\u8981\u4e48\u4e00\u7ec4 SQL \u8bed\u53e5 (\u4e8b\u52a1) \u8981\u4e48\u5b8c\u5168\u6267\u884c, \u8981\u4e48\u5b8c\u5168\u4e0d\u6267\u884c (\u539f\u5b50\u6027)</li> </ul> <pre><code>START TRANSACTION; -- \u5f00\u59cb\u4e8b\u52a1\n\n-- \u4e00\u7cfb\u5217 SQL \u8bed\u53e5\n\nROLLBACK; -- \u56de\u6eda\u5230\u4e8b\u52a1\u5f00\u59cb\u524d\u7684\u72b6\u6001\n\nCOMMIT; -- \u63d0\u4ea4\u4e8b\u52a1, \u6ce8\u610f\u63d0\u4ea4\u540e\u4e0d\u53ef\u56de\u6eda\n\nSAVEPOINT \u4fdd\u5b58\u70b9\u540d; -- \u8bbe\u7f6e\u4fdd\u5b58\u70b9\nROLLBACK TO \u4fdd\u5b58\u70b9\u540d; -- \u56de\u6eda\u5230\u4fdd\u5b58\u70b9\n-- \u53ef\u4ee5\u90e8\u5206\u56de\u6eda\n\n-- \u7ed3\u5408\u6d41\u7a0b\u63a7\u5236\u8bed\u53e5\u4f7f\u7528\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_24","title":"\u4f7f\u7528\u6e38\u6807","text":"<ul> <li>\u6e38\u6807\u662f\u7528\u4e8e\u53ef\u89c6\u5316\u64cd\u4f5c\u7684\u6570\u636e\u5e93\u5bf9\u8c61, WEB \u5e94\u7528\u4e2d\u4e0d\u5e38\u7528</li> <li>MySQL \u7684\u6e38\u6807\u53ea\u80fd\u7528\u4e8e\u5b58\u50a8\u8fc7\u7a0b</li> </ul> <pre><code>DECLARE \u6e38\u6807\u540d CURSOR FOR SELECT \u5217\u540d 1, \u5217\u540d 2, ... FROM \u8868\u540d; -- \u58f0\u660e\u6e38\u6807, \u6b64\u65f6\u8fd8\u672a\u67e5\u8be2\n\nOPEN CURSOR \u6e38\u6807\u540d; -- \u6253\u5f00\u6e38\u6807\n\nFETCH CURSOR \u6e38\u6807\u540d INTO \u53d8\u91cf 1, \u53d8\u91cf 2, ...; -- \u4ece\u6e38\u6807\u4e2d\u83b7\u53d6\u4e00\u884c\u6570\u636e\u5230\u53d8\u91cf\u4e2d\n\nCLOSE CURSOR \u6e38\u6807\u540d; -- \u5173\u95ed\u6e38\u6807\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#sql_1","title":"\u9ad8\u7ea7 SQL \u7279\u6027","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_25","title":"\u7ea6\u675f","text":"<pre><code>\u5217\u540d \u6570\u636e\u7c7b\u578b NOT NULL DEFAULT \u503c PRIMARY KEY -- \u58f0\u660e\u4e3b\u952e\n\n\u5217\u540d 1 \u6570\u636e\u7c7b\u578b NOT NULL DEFAULT \u503c REFERENCES \u8868\u540d(\u5217\u540d 2) -- \u58f0\u660e\u5916\u952e\n\n\u5217\u540d \u6570\u636e\u7c7b\u578b NOT NULL DEFAULT \u503c UNIQUE -- \u58f0\u660e\u552f\u4e00\u952e (\u4e0d\u53ef\u4f5c\u5916\u952e)\n\n\u5217\u540d \u6570\u636e\u7c7b\u578b NOT NULL DEFAULT \u503c CHECK(\u771f\u503c\u8868\u8fbe\u5f0f) -- \u68c0\u67e5\u7ea6\u675f\n\nALTER TABLE \u8868\u540d ADD CONSTRAINT \u7ea6\u675f; -- \u6dfb\u52a0\u7ea6\u675f\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_26","title":"\u7d22\u5f15","text":"<ul> <li>\u7d22\u5f15\u662f\u5bf9\u8868\u4ee5\u5176\u4e2d\u4e00\u5217\u503c\u8fdb\u884c\u6392\u5e8f\u7684\u7f13\u5b58 (\u4fbf\u4e8e\u5feb\u901f\u67e5\u627e)</li> </ul> <pre><code>CREATE INDEX \u7d22\u5f15\u540d ON \u8868\u540d(\u5217\u540d); -- \u521b\u5efa\u7d22\u5f15\n</code></pre>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E6%95%B0%E6%8D%AE%E5%BA%93/SQL%E5%BF%85%E7%9F%A5%E5%BF%85%E4%BC%9A/#_27","title":"\u89e6\u53d1\u5668","text":"<ul> <li>\u89e6\u53d1\u5668\u662f\u7279\u6b8a\u7684\u5b58\u50a8\u8fc7\u7a0b, \u5f53\u5b83\u4f9d\u6258\u7684\u8868\u53d1\u751f\u7279\u5b9a\u64cd\u4f5c (\u63d2\u5165 / \u66f4\u65b0) \u65f6, \u4f1a\u81ea\u52a8\u6267\u884c</li> </ul>"},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/TCPIP%E8%AF%A6%E8%A7%A3/","title":"TCP/IP","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95/","title":"\u81ea\u9876\u5411\u4e0b\u65b9\u6cd5","text":""},{"location":"%E6%B7%B1%E5%85%A5%E6%96%B9%E5%90%91/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E6%96%B9%E6%B3%95/#_2","title":"\u5de5\u5177","text":"<ul> <li>wireshark</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/","title":"CPrimePlus","text":"<ul> <li>\u7fc1\u607a\u8001\u5e08\u7684 C \u8bed\u8a00\u8bfe \u795e\u4f5c 5</li> <li>c prime plus \u5927\u800c\u5168 5</li> </ul> <p>\u9996\u5148\u4ee5\u4e00\u4e2a\u8f7b\u677e\u7684\u89c6\u9891\u8bfe\u7a0b\u4e86\u89e3 c, \u7136\u540e</p> <p>PS:\u4ee5\u4e0b\u5173\u4e8e\u6807\u51c6\u5e93\u7684\u5185\u5bb9\u6ca1\u6709\u8be6\u7ec6\u5199, \u6211\u4e0d\u8ba4\u4e3a\u8fd9\u4e9b\u5185\u5bb9\u5177\u6709\u53ef\u6982\u62ec\u6027</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#c-prime-plus","title":"c prime plus","text":"<p>\u6b63\u5982\u5b83\u7684\u4e66\u540d\u6240\u793a, \u5b83\u5f88\u597d\u5730\u4ecb\u7ecd\u4e86 C \u8bed\u8a00\u7684\u4e3b\u8981\u5185\u5bb9, \u5e76\u4e14\u9887\u6709\u5e7f\u5ea6\u4e0e\u6df1\u5ea6, \u8bfb\u8fd9\u672c\u4e66\u786e\u5b9e\u80fd\u8ba9\u4eba\u53d7\u76ca\u532a\u6d45 \u4f46\u662f\u8981\u6ce8\u610f\u8fd8\u7f3a\u5c11\u51e0\u90e8\u5206\u5185\u5bb9:</p> <ul> <li>C \u8bed\u8a00\u7ecf\u9a8c, \u8fd9\u4f1a\u5728\u63a5\u4e0b\u6765\u7684\u51e0\u672c\u4e66\u5f53\u4e2d\u8865\u5168</li> <li>C \u8bed\u8a00\u6781\u6df1\u7684\u7ec6\u8282, \u8fd9\u4e0d\u4e00\u5b9a\u662f\u6709\u6548\u7684, \u4f46\u662f\u5982\u679c\u4f60\u60f3\u8981\u4e86\u89e3, \u4e5f\u8bb8\u53ea\u6709\u9605\u8bfb C \u6807\u51c6</li> <li>C \u8bed\u8a00\u7684\u7684\u7f16\u8bd1\u94fe\u63a5\u4ee5\u53ca\u786c\u4ef6\u5c42\u9762\u7684\u7ec6\u8282, \u5728\u6c47\u7f16\u8bed\u8a00, \u8ba1\u7b97\u673a\u7cfb\u7edf\u57fa\u7840, \u8ba1\u7b97\u673a\u7ec4\u6210\u539f\u7406\u4e0e\u4f53\u7cfb\u7ed3\u6784, \u7f16\u8bd1\u539f\u7406\u8fd9\u4e9b\u5185\u5bb9\u4e2d\u63d0\u53ca, \u4f46\u4e5f\u8bb8\u76f8\u5f53\u5177\u4f53\u7684\u5185\u5bb9\u9700\u8981\u4e86\u89e3\u7f16\u8bd1\u5668\u5b9e\u73b0</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#c","title":"\u521d\u8bc6 c \u8bed\u8a00","text":"<ul> <li>\u9009\u62e9 c \u8bed\u8a00\u4f5c\u4e3a\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u8bed\u8a00\u7684\u539f\u56e0/c \u8bed\u8a00\u7684\u5e95\u5c42\u6027, \u4f8b\u5982\u6700\u63a5\u8fd1\u6c47\u7f16, \u6307\u9488\u6709\u5229\u4e8e\u7406\u89e3\u5185\u5b58\u6a21\u578b</li> <li>c \u8bed\u8a00\u7684\u8bbe\u8ba1\u5b97\u65e8/\u81ea\u7531\u4e0e\u5feb \u4e3a\u4e86\u5feb\u53ef\u4ee5\u727a\u7272\u79fb\u690d\u6027</li> <li>\u7a0b\u5e8f\u8bbe\u8ba1\u6b65\u9aa4/\u4e0d\u8981\u5ffd\u89c6\u975e\u7f16\u5199\u7684\u6b65\u9aa4, \u5f53\u4f60\u7684\u7a0b\u5e8f\u53d8\u5f97\u590d\u6742, \u5b83\u4eec\u663e\u5f97\u683c\u5916\u91cd\u8981</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#c_1","title":"c \u8bed\u8a00\u6982\u8ff0","text":"<ul> <li>\u5982\u9898</li> </ul> <p>ps:c \u8bed\u8a00 6 \u5927\u57fa\u672c\u8bed\u53e5, c \u5c06\u8d4b\u503c\u4e5f\u8ba4\u4e3a\u4e00\u79cd\u8fd0\u7b97\u7b26\u8868\u8fbe\u5f0f, \u58f0\u660e\u4e0d\u662f\u8868\u8fbe\u5f0f</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#c_2","title":"\u6570\u636e\u4e0e c","text":"<ul> <li>\u6d6e\u70b9\u578b\u7cbe\u5ea6 6/13</li> <li>\u5bf9\u5b57\u9762\u91cf\u7684\u4fee\u9970\u5f88\u91cd\u8981 (\u8b66\u60d5\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362)</li> <li>\u5b57\u7b26/'FATE'\u8d4b\u503c\u7b49\u540c\u4e8e'E', \u56e0\u4e3a''\u5728 c \u4e2d\u5f80\u5f80\u662f int \u578b</li> <li>\u8f6c\u4e49\u5b57\u7b26\u53ef\u4ee5\u76f4\u63a5\u52a0\u7f16\u7801</li> <li>\u5b57\u9762\u91cf\u7684\u9ed8\u8ba4\u7c7b\u578b int/double</li> <li>\u5237\u65b0\u8f93\u51fa\u7f13\u51b2\u533a (\u6ee1/\u9047\u5230\\n/\u9700\u8981\u8f93\u5165)fflush()\u5f3a\u5236\u5237</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#_1","title":"\u5b57\u7b26\u4e32\u548c\u683c\u5f0f\u5316\u8f93\u5165/\u8f93\u51fa","text":"<ul> <li>sizeof \u7c7b\u578b\u5fc5\u987b\u52a0() \u8fd4\u56de\u7c7b\u578b\u662f lu/llu (\u6bd4\u8f83\u65f6\u6ce8\u610f\u7c7b\u578b)</li> <li>printf \u4fee\u9970\u7b26 # (\u5b8c\u5168\u5c55\u793a)</li> <li>c \u4f1a\u5c06\u8fde\u7eed\u5b57\u7b26\u4e32\u878d\u5408</li> <li>\u6ce8\u610f scanf()\u7684\u8bfb\u53d6\u8fc7\u7a0b/\u7f13\u51b2\u533a\u4e2d\u7559\u4e0b\u4e86\u4ec0\u4e48</li> <li>*\u5728 pri \u4e2d\u662f\u9650\u5236\u5bbd\u5ea6(\u8bfb\u53d6\u4e00\u4e2a\u53c2\u6570), scan \u4e2d\u662f\u8df3\u8fc7</li> <li>\u51fd\u6570\u53c2\u6570\u5728\u6808\u4e2d, \u6839\u636e\u7c7b\u578b\u8bfb\u53d6\u957f\u5ea6, \u4f46\u662f\u7269\u7406\u5148\u540e\u7531\u5b9e\u73b0\u51b3\u5b9a</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#_2","title":"\u8fd0\u7b97\u7b26 \u8868\u8fbe\u5f0f\u4e0e\u8bed\u53e5","text":"<ul> <li>C \u6807\u51c6\u4e2d\u7684\u6570\u636e\u5bf9\u8c61/\u5de6\u503c\u7528\u4e8e\u6807\u8bc6\u5b58\u50a8\u4f4d\u7f6e/\u5bf9\u8c61\u5b9a\u4f4d\u503c</li> <li>\u9664\u6cd5\u8d8b\u96f6\u622a\u65ad</li> <li>\u53ea\u6709\u5171\u4eab\u8fd0\u7b97\u5bf9\u8c61\u65f6\u624d\u8003\u8651\u7ed3\u5408\u5f8b/\u5426\u5219\u7531\u7f16\u8bd1\u5668\u51b3\u5b9a</li> <li>a%b \u7b49\u4e8e a-(a/b)*b</li> <li>\u4e0d\u8981\u5728\u53d8\u91cf\u591a\u6b21\u51fa\u73b0\u65f6\u4f7f\u7528++--, \u56e0\u4e3a\u987a\u5e8f\u4e0d\u786e\u5b9a</li> <li>c \u53ea\u4fdd\u8bc1\u5e8f\u5217\u70b9\u4e4b\u524d\u5b8c\u6210\u526f\u4f5c\u7528</li> </ul> <p>PS:\u5173\u4e8e\u590d\u5408\u8bed\u53e5 (\u5757), \u5b83\u7684\u503c\u662f\u6700\u540e\u4e00\u4e2a\u8bed\u53e5\u7684\u503c;\u4f46\u662f\u5b83\u9700\u8981\u88ab()\u624d\u662f\u8868\u8fbe\u5f0f</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#c_3","title":"C \u63a7\u5236\u8bed\u53e5:\u5faa\u73af","text":"<ul> <li>\u6d6e\u70b9\u6570\u6bd4\u8f83\u4e0d\u8981\u4f7f\u7528==</li> <li>\u975e 0 \u5373\u4e3a\u771f</li> <li>==\u65f6\u5e38\u91cf\u653e\u5728\u5de6\u8fb9</li> <li>\u9017\u53f7\u8868\u8fbe\u5f0f\u662f\u4e00\u4e2a\u5e8f\u5217\u70b9, \u5148\u5de6\u540e\u53f3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#c_4","title":"C \u63a7\u5236\u8bed\u53e5:\u5206\u652f\u548c\u8df3\u8f6c","text":"<ul> <li>else \u4e0e\u540c\u5c42\u6b21\u7684\u6700\u8fd1 if \u914d\u5bf9, c \u89c4\u5b9a\u6700\u5c11\u652f\u6301 127 \u5c42 if else</li> <li>&amp;&amp; ||\u90fd\u662f\u5e8f\u5217\u70b9</li> <li>break \u53ea\u8df3\u51fa\u4e00\u5c42</li> <li>\u4ec5\u5728\u8df3\u51fa\u591a\u91cd\u5faa\u73af\u65f6\u8003\u8651\u4f7f\u7528 goto</li> <li>stwich case \u5fc5\u9700\u5168\u662f\u6574\u578b, \u6807\u7b7e\u8fd8\u5f97\u662f\u5e38\u91cf</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#_3","title":"\u5b57\u7b26\u8f93\u5165/\u8f93\u51fa\u548c\u8f93\u5165\u9a8c\u8bc1","text":"<ul> <li>\u5b8c\u5168\u7f13\u51b2 (\u7f13\u51b2\u533a\u6ee1\u624d\u5237\u65b0, \u5e38\u89c1 512/4096 \u5b57\u8282)\u4e0e\u884c\u7f13\u51b2 (\u9047\u89c1\u6362\u884c\u5c31\u5237\u65b0)</li> <li>\u8ba1\u7b97\u673a\u7528\\n^z \u6216\u8005\u8bb0\u5f55\u5b57\u8282\u6570\u6765\u6807\u8bb0\u6587\u4ef6\u7684\u7ed3\u675f\u4f46 c \u5168\u8ba4\u4e3a\u662f EOF (\u5e38\u89c1-1)</li> <li>\u7528\u5faa\u73af\u4e0e\u9a8c\u8bc1\u6765\u4fdd\u8bc1\u6b63\u786e\u7684\u8f93\u5165</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#_4","title":"\u51fd\u6570","text":"<ul> <li>\u5c3d\u91cf\u5355\u4e00\u51fa\u53e3</li> <li>C \u51fd\u6570\u662f\u5e73\u7b49\u7684</li> <li>\u6307\u9488 \u503c\u4e3a\u5730\u5740\u7684\u53d8\u91cf</li> <li>\u7a0b\u5e8f\u4e86\u89e3\u540d\u79f0\u4e0e\u503c, \u8ba1\u7b97\u673a\u4e86\u89e3\u5730\u5740\u4e0e\u503c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#_5","title":"\u6570\u7ec4\u4e0e\u6307\u9488","text":"<ul> <li>\u6570\u7ec4\u53ef\u4ee5\u6307\u5b9a\u521d\u59cb\u5316{[]=6}</li> <li>\u6570\u7ec4\u6307\u5b9a\u5927\u5c0f\u4e3a\u53d8\u91cf\u5c06\u5efa\u7acb VLA</li> <li>\u6570\u7ec4\u540d\u662f\u9996\u5143\u7d20\u7684\u5730\u5740</li> <li>\u5728\u5f62\u53c2\u4e2d\u52a0 const \u907f\u514d\u4fee\u6539</li> <li>const \u4e0e*\u7684\u76f8\u5bf9\u4f4d\u7f6e\u51b3\u5b9a\u6548\u679c</li> <li>VLA \u5fc5\u987b\u662f auto \u7684</li> <li>\u590d\u5408\u5b57\u9762\u91cf (\u5757\u751f\u5b58\u5468\u671f)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#_6","title":"\u5b57\u7b26\u4e32\u4e0e\u5b57\u7b26\u4e32\u51fd\u6570","text":"<ul> <li>\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u5b57\u7b26\u4e32\u5e38\u91cf</li> <li>\u8bfb\u5165\u5b57\u7b26\u4e32\u65f6\u7559\u597d\u4f4d\u7f6e</li> <li>\u547d\u4ee4\u884c\u53c2\u6570 (main \u7684\u53c2\u6570)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#_7","title":"\u5b58\u50a8\u7c7b\u522b \u94fe\u63a5\u548c\u5185\u5b58\u7ba1\u7406","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#_8","title":"\u4f5c\u7528\u57df","text":"<ul> <li>\u5757, \u51fd\u6570, \u51fd\u6570\u539f\u578b, \u6587\u4ef6</li> <li>\u4ec5\u6709 goto \u6807\u7b7e\u662f\u51fd\u6570\u4f5c\u7528\u57df</li> <li>\u4ec5\u6709\u51fd\u6570\u58f0\u660e\u7684\u53d8\u91cf\u540d\u624d\u6709\u51fd\u6570\u539f\u578b\u4f5c\u7528\u57df int fun(int n, int m, int[n][m]);</li> <li>\u6587\u4ef6\u4f5c\u7528\u57df\u5373\u5168\u5c40\u53d8\u91cf (\u6309\u9ed8\u8ba4\u5916\u90e8\u94fe\u63a5\u5373\u672c\u7a0b\u5e8f)</li> <li>static \u53ef\u4ee5\u4f7f\u6587\u4ef6\u4f5c\u7528\u57df\u5185\u90e8\u94fe\u63a5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#_9","title":"\u5b58\u50a8\u671f","text":"<ul> <li>\u9759\u6001, \u7ebf\u7a0b, \u81ea\u52a8, \u52a8\u6001\u5206\u914d</li> <li>\u6587\u4ef6\u4f5c\u7528\u57df\u62e5\u6709\u9759\u6001\u5b58\u50a8\u671f (\u672c\u7a0b\u5e8f)</li> <li>_Thread_local \u58f0\u660e\u4e00\u4e2a\u5bf9\u8c61\u5728\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u4e00\u4e2a\u5907\u4efd</li> <li>\u5757\u4f5c\u7528\u57df\u6709\u81ea\u52a8\u5b58\u50a8\u671f\u4f46 static \u53ef\u4ee5\u8ba9\u5b83\u6709\u9759\u6001\u5b58\u50a8\u671f</li> <li>register \u58f0\u660e\u5bc4\u5b58\u5668\u53d8\u91cf (C \u5c3d\u529b)</li> <li>\u8de8\u6587\u4ef6\u4f7f\u7528\u6587\u4ef6\u4f5c\u7528\u57df\u7684\u53d8\u91cf\u8981\u7528 extern \u58f0\u660e</li> <li>\u51fd\u6570\u58f0\u660e\u9ed8\u8ba4\u5e26 extern</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#_10","title":"\u5185\u5b58\u5f62\u5f0f","text":"<ul> <li>\u6d6e\u70b9\u6570\u5185\u90e8\u5168\u662f 0 \u4e0d\u4e00\u5b9a\u503c\u4e3a 0</li> <li>\u9759\u6001\u6570\u636e\u5728\u4e00\u8d77, \u81ea\u52a8\u5728\u4e00\u8d77 (\u6808), \u52a8\u6001\u5206\u914d\u5728\u4e00\u8d77 (\u5185\u5b58\u5806)</li> <li>volatile \u53ef\u7531\u5916\u90e8\u6539\u53d8 (\u9632\u4e00\u624b\u7f16\u8bd1\u5668)</li> <li>restrict \u4ec5\u7531\u6211 (\u4e00\u4e2a\u6307\u9488)\u6539\u53d8 (\u8ba9\u7f16\u8bd1\u5668\u4f18\u5316)</li> <li>_Atomic \u539f\u5b50\u6027, \u540c\u65f6\u5355\u4e00\u7ebf\u7a0b\u8bbf\u95ee</li> <li>\u5f62\u53c2\u4e2d, int* const/restrict name==int name[const/restrict],  int name[static 20]\u8868\u660e name \u4e2d\u6700\u5c11\u5143\u7d20\u6570 (\u7ed9\u7f16\u8bd1\u5668\u4f18\u5316)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#_11","title":"\u6587\u4ef6\u8f93\u5165/\u8f93\u51fa","text":"<ul> <li>\u6587\u4ef6\u6a21\u5f0f\u4e0e\u4e8c\u8fdb\u5236\u6a21\u5f0f, \u6587\u4ef6\u6a21\u5f0f\u4f1a\u6620\u5c04\u4f8b\u5982\\r\\n-&gt;\\n</li> <li>exit()\u5728\u6700\u521d main \u4e2d==return()</li> <li>FILE \u662f\u4e00\u4e2a\u653e\u6587\u4ef6\u4fe1\u606f\u7684\u7ed3\u6784, \u5176\u5b9e\u662f\u5047\u7ed3\u6784\u7c7b\u4f3c void*</li> <li>\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236 IO \u5728\u6587\u4ef6\u4e2d\u4fdd\u5b58\u6570\u636e\u5bf9\u8c61, \u6570\u636e\u6587\u4ef6\u4e0d\u53ef\u79fb\u690d</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#_12","title":"\u7ed3\u6784\u548c\u5176\u4ed6\u6570\u636e\u7c7b\u578b","text":"<ul> <li>\u7ed3\u6784\u4e5f\u6709\u521d\u59cb\u5316\u5668 struct node n={.next=NULL}</li> <li>\u7ed3\u6784\u53ef\u4ee5\u81ea\u8d4b\u503c</li> <li>\u4f38\u7f29\u578b\u6570\u7ec4\u6210\u5458, \u5360\u7528\u7ed3\u6784\u5269\u4f59\u7684\u7a7a\u95f4, \u8fd9\u79cd\u7ed3\u6784\u4e0d\u80fd\u521d\u59cb\u5316</li> <li>\u5e38\u7528\u533f\u540d\u8054\u5408\u5728\u7ed3\u6784\u4e2d\u4f5c\u4e3a\u6210\u5458</li> <li>\u590d\u6742\u58f0\u660e()[]\u4f18\u5148\u7ea7&gt;*</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#_13","title":"\u4f4d\u64cd\u4f5c","text":"<ul> <li>\u638c\u63e1\u903b\u8f91\u4f4d\u8fd0\u7b97\u7684\u5e38\u89c1\u63a9\u7801\u5957\u8def</li> <li>\u586b\u5145\u4f4d\u6bb5\u4e2d\u7684\"\u6d1e\"</li> <li>\u4f7f\u7528 0 \u5bbd\u5ea6\u7684\u5b57\u6bb5\u53ef\u4ee5\u8df3\u8fc7\u8fd9\u4e2a int \u7684\u5269\u4e0b\u4f4d</li> <li>_Alignof(type)\u5f97\u5230\u5bf9\u9f50\u8981\u6c42 _Alignas \u6307\u5b9a\u5bf9\u9f50\u8981\u6c42</li> <li>stdaligned.h-&gt;alignas alignof(\u4e0e c++\u76f8\u540c)</li> <li>aligned_alloc(\u5bf9\u9f50\u8981\u6c42, \u5b57\u8282\u6570) \u5206\u914d\u5185\u5b58</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#c-c","title":"C \u9884\u5904\u7406\u5668\u548c C \u5e93","text":"<ul> <li>\u7ffb\u8bd1\u5b57\u7b26, \u7269\u7406\u884c\u8f6c\u4e3a\u903b\u8f91\u884c, \u5212\u5206\u5e8f\u5217:\u8bb0\u53f7, \u7a7a\u767d, \u6ce8\u91ca, \u7136\u540e\u7528\" \"\u66ff\u6362\u6ce8\u91ca</li> <li>\u7c7b\u5bf9\u8c61\u5b8f\u4e0e\u7c7b\u51fd\u6570\u5b8f\u5c55\u5f00</li> <li>\u4e0d\u53ef\u91cd\u5b9a\u4e49\u540c\u540d\u5b8f</li> <li>\u7c7b\u51fd\u6570\u5b8f\u6ce8\u610f\u66ff\u6362\u540e\u7684\u8fd0\u7b97\u4f18\u5148\u7ea7</li> <li><code>#x</code>\u53ef\u4ee5\u5728\u66ff\u6362\u4f53\u4e2d\u7684\u5b57\u7b26\u4e32\u4e2d\u4f7f\u7528 x \u8fd9\u4e00\u4e2a\u5b8f\u53c2\u6570\u7684\u5b57\u7b26\u4e32\u5f62\u5f0f</li> <li><code>##</code>\u53ef\u4ee5\u5c06\u8bb0\u53f7\u7c98\u5408</li> <li>\u7c7b\u51fd\u6570\u5b8f\u7684\u53c2\u6570\u53ef\u4ee5\u7528... \u518d\u7528__VA_ARGS__\u5c55\u5f00 #define A(x, ...) printf(#x, <code>__VA_ARGS__</code>)</li> <li>getchar putchar \u4e0d\u662f\u51fd\u6570\u662f\u5b8f</li> <li>ungetc \u662f\u9000\u56de\u4e0d\u662f\u5199\u5165</li> <li>\u5b8f\u4f5c\u7528\u57df\u662f\u672c\u6587\u4ef6</li> <li><code>#if defined (AAA)==#ifdef AAA</code></li> <li>_Generic(object, type:value, default)\u6cdb\u578b\u9009\u62e9</li> <li>inline fun ();</li> <li>_Noreturn type fun ()\u5ba3\u544a\u4e0d\u8fd4\u56de\u4e3b\u8c03\u51fd\u6570</li> <li>atexit()\u5c06\u51fd\u6570\u6307\u9488\u8bb0\u5f55, exit()\u4f1a\u9006\u5e8f\u8c03\u7528\u8fd9\u4e9b\u51fd\u6570</li> <li>assert(bool)\u82e5\u4e3a\u5047\u5219\u6253\u5370 err, \u505c\u6b62\u7a0b\u5e8f _Static_assert(bool, char*)\u82e5\u4e3a\u5047\u5219\u6253\u5370\u5b57\u7b26\u4e32, \u65e0\u6cd5\u7f16\u8bd1</li> <li>type fun (type i, int parmN, ...){     va_list ap;     va_start(ap, parmN);     type j=va_arg(ap, type);     va_end(ap);     }</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/CPrimePlus/#_14","title":"\u9ad8\u7ea7\u6570\u636e\u8868\u793a","text":"<p>\u4ecb\u7ecd\u4e0e\u5b9e\u73b0\u4e86\u4e00\u4e9b ADT (\u62bd\u8c61\u6570\u636e\u7c7b\u578b)\u4e0e\u76f8\u5e94\u7684\u7b80\u5355\u7b97\u6cd5</p> <p>\u4e0d\u5728\u6b64\u8bb0\u5f55</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/","title":"C \u4e13\u5bb6\u7f16\u7a0b","text":"<ul> <li>c \u4e13\u5bb6\u7f16\u7a0b \u8fd9\u672c\u4e66\u975e\u5e38\u6709\u8da3, \u8bb2\u4e86\u8bb8\u591a\u6545\u4e8b, \u6bd4\u8f83\u6df1\u6709\u7528, \u5efa\u8bae\u6df1\u5ea6\u5b66\u4e60 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/#c_1","title":"C:\u7a7f\u8d8a\u65f6\u7a7a\u7684\u8ff7\u96fe","text":"<ul> <li>C \u8bed\u8a00\u7684\u53d1\u5c55\u4e0e\u5386\u53f2</li> <li>\u9664\u4e86\u4f4d\u6bb5\u4e0e\u63a9\u7801, \u4e0d\u8981\u4f7f\u7528\u65e0\u7b26\u53f7\u6574\u578b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/#bug","title":"\u8fd9\u4e0d\u662f BUG, \u800c\u662f\u8bed\u8a00\u7279\u6027","text":"<p>PS:\u91cd\u590d\u5185\u5bb9\u6bd4\u8f83\u591a Switch \u6807\u7b7e\u6253\u9519\u4e86, \u7f16\u8bd1\u5668\u4e5f\u4e0d\u4e00\u5b9a\u4f1a\u53d1\u73b0, \u56e0\u4e3a\u8fd8\u6709 goto</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/#c_2","title":"\u5206\u6790 c \u8bed\u8a00\u7684\u58f0\u660e","text":"<p>\u4e0d\u91cd\u590d</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/#_1","title":"\u4ee4\u4eba\u9707\u60ca\u7684\u4e8b\u5b9e:\u6570\u7ec4\u4e0e\u6307\u9488\u5e76\u4e0d\u76f8\u540c","text":"<p>\u4e0d\u91cd\u590d</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/#_2","title":"\u5bf9\u94fe\u63a5\u7684\u601d\u8003","text":"<ul> <li>\u9a71\u52a8\u5668\u7edf\u7b79 \u9884\u5904\u7406\u5668-&gt;\u524d\u7aef (\u8bed\u6cd5\u4e0e\u8bed\u4e49\u5206\u6790)-&gt;\u540e\u7aef (\u4ee3\u7801\u751f\u6210\u5668)-&gt;\u6c47\u7f16\u7a0b\u5e8f-&gt;\u94fe\u63a5-\u8f7d\u5165\u5668, \u5e76\u5728\u4efb\u610f\u65f6\u4f18\u5316, \u5927\u591a\u5728\u524d\u540e\u7aef\u4e4b\u95f4</li> <li>\u9759\u6001\u94fe\u63a5\u4e0e\u52a8\u6001\u94fe\u63a5(\u66f4\u5177\u4f18\u52bf) \u9759\u6001\u5e93 (archive .a)\u4e0e\u52a8\u6001\u5e93 (ld .so)</li> <li>ABI (\u5e94\u7528\u7a0b\u5e8f\u4e8c\u8fdb\u5236\u63a5\u53e3)\u662f\u52a8\u6001\u94fe\u63a5\u7684\u4f18\u52bf\u4e4b\u4e00, \u51cf\u5c11\u66f4\u65b0\u5e93\u51fd\u6570\u540e\u5bf9\u7a0b\u5e8f\u7684\u7ef4\u62a4</li> <li>\u591a\u4e2a\u8fdb\u7a0b\u4f7f\u7528\u540c\u4e00\u4e2a\u51fd\u6570\u5728\u5185\u5b58\u7a7a\u95f4\u5f53\u4e2d\u53ea\u4f1a\u6709\u4e00\u4e2a\u526f\u672c</li> <li>\u56e0\u4e3a\u6bcf\u4e2a\u4f7f\u7528\u5171\u4eab\u5e93\u7684\u8fdb\u7a0b, \u4e00\u822c\u4f1a\u628a\u5b83\u6620\u5c04\u5230\u4e0d\u540c\u7684\u865a\u62df\u5730\u5740, \u6240\u4ee5\u4f7f\u7528\u4e0e\u4f4d\u7f6e\u65e0\u5173\u7684\u4ee3\u7801, \u5bf9\u4e8e\u5171\u4eab\u5e93\u6765\u8bb2\u8981\u66f4\u5feb</li> <li>-l \u9009\u9879\u6c38\u8fdc\u5728\u6700\u540e (linker \u8981\u5148\u770b\u5230\u672a\u5b9a\u4e49\u7684\u7b26\u53f7\u7136\u540e\u518d\u53bb\u5e93\u91cc\u627e, \u5426\u5219\u4e0d\u77e5\u9053\u8981\u627e\u5565)</li> <li><code>interpositioning</code> \u4f1a\u8986\u76d6\u5e93\u51fd\u6570, \u4e0d\u4ec5\u4ec5\u662f\u5728\u4f60\u7684\u7a0b\u5e8f\u91cc, \u6240\u4ee5\u82e5\u65e0\u5fc5\u987b, \u8bf7\u50cf C++ \u9ed8\u8ba4\u7684\u4e00\u6837\u58f0\u660e <code>static</code></li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/#_3","title":"\u8fd0\u52a8\u7684\u8bd7\u7ae0:\u8fd0\u884c\u65f6\u6570\u636e\u7ed3\u6784","text":"<ul> <li>a.out assembler output \u4f46\u4e8b\u5b9e\u662f\u94fe\u63a5\u5668\u7684\u8f93\u51fa</li> <li>UNIX \u7cfb\u7edf\u5e38\u89c1 ELF \u6587\u4ef6\u683c\u5f0f, \u5176\u4e2d\u4ee5 segment (\u6bb5)\u5212\u5206, \u4e00\u4e2a segment \u5305\u542b\u591a\u4e2a section (\u628a UNIX \u7684\u6bb5\u4e0e x86 \u67b6\u6784\u7684\u6bb5\u533a\u5206\u5f00)</li> <li>a.out \u5305\u542b text, data, bss \u6bb5(\u8bb0\u5f55\u6ca1\u521d\u59cb\u5316\u7684\u53d8\u91cf) gcc \u7f16\u8bd1\u7684\u7a0b\u5e8f\u8fd0\u884c\u65f6, \u5c31\u662f\u8fd9\u4e09\u90e8\u5206 text (\u6307\u4ee4\u4e0e\u5b57\u7b26\u4e32\u5e38\u91cf) data (\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf) bss (\u672a\u521d\u59cb\u5316, \u5982\u679c\u4f60\u5c1d\u8bd5\u521d\u59cb\u5316\u4e3a 0, \u4f1a\u4f18\u5316\u4e3a\u4e0d\u521d\u59cb\u5316) \u52a0\u4e0a\u8fd0\u884c\u65f6\u5206\u914d\u7684 heap (\u52a8\u6001\u5185\u5b58\u5206\u914d\u7684\u5806\u5185\u5b58, \u4e0e\u540c\u540d\u6570\u636e\u7ed3\u6784\u6ca1\u6709\u4efb\u4f55\u5173\u7cfb) stack (\u51fd\u6570\u53c2\u6570\u4e0e\u5c40\u90e8\u53d8\u91cf, \u4e0e\u540c\u540d\u6570\u636e\u7ed3\u6784\u6709\u4e00\u4e9b\u5173\u7cfb) \u4f46\u6709\u65f6, \u5171\u4eab\u5e93\u4e0e\u94fe\u63a5\u5668\u4e5f\u5728\u8be5\u8fdb\u7a0b\u7684\u5185\u5b58\u4e2d  </li> <li>stack \u4e2d, sp \u6307\u9488\u7ef4\u62a4\u6808\u9876, \u6808\u4e2d\u4fdd\u5b58\u51fd\u6570\u53c2\u6570, \u5c40\u90e8\u53d8\u91cf, \u5806\u6808\u7ed3\u6784/\u8fc7\u7a0b\u6d3b\u52a8\u8bb0\u5f55 (\u8fd4\u56de\u5730\u5740, \u51fd\u6570\u8c03\u7528\u5730\u5740, \u4e0d\u9002\u5408\u88c5\u5165\u5bc4\u5b58\u5668\u7684\u53c2\u6570\u4ee5\u53ca\u5bc4\u5b58\u5668\u539f\u6709\u503c\u7684\u4fdd\u5b58)alloca \u51fd\u6570\u53ef\u4ee5\u7533\u8bf7\u5230\u6808\u7684\u7a7a\u95f4</li> <li>stack \u4e3a\u9012\u5f52\u800c\u72ec\u7acb\u5b58\u5728, \u7edd\u5927\u591a\u6570 cpu, stack \u5f80\u4f4e\u5185\u5b58\u751f\u957f</li> <li><code>setjump</code> \u4e0e <code>longjump</code>, \u5728 C++\u53d8\u6210\u4e86\u5f02\u5e38</li> <li>unix \u7684\u6808\u4f1a\u751f\u957f, dos \u9700\u8981\u56fa\u5b9a\u597d (8086 \u4e2d\u6700\u5927 64kb)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/#_4","title":"\u5bf9\u5185\u5b58\u7684\u601d\u8003","text":"<ul> <li>8086 \u9009\u62e9\u91cd\u53e0\u4e24\u4e2a 16 \u4f4d (\u504f\u79fb\u91cf\u4e0e\u6bb5)\u53d8\u6210 20 \u4f4d\u4ee5\u8bbf\u95ee 1gb \u5185\u5b58\u7684\u540c\u65f6\u517c\u5bb9\u539f\u672c\u7684 16 \u4f4d\u7a0b\u5e8f, 8086 \u6709 4 \u4e2a\u6bb5\u5bc4\u5b58\u5668, CS, DS, SS, ES (\u9644\u52a0)</li> <li>\u865a\u62df\u6a21\u5f0f/\u4fdd\u62a4\u6a21\u5f0f\u5c06\u5185\u5b58\u63a7\u5236\u5668\u79fb\u5230\u82af\u7247\u5916, \u6bb5\u5bc4\u5b58\u5668\u4e0d\u4e0e\u504f\u79fb\u91cf\u76f8\u52a0, \u800c\u4e3a\u5b58\u653e\u5b9e\u9645\u6bb5\u5730\u5740\u7684\u8868\u63d0\u4f9b\u7d22\u5f15</li> <li>\u865a\u62df\u5185\u5b58\u4ee5\u9875\u7684\u5f62\u5f0f\u7ec4\u7ec7, \u8fdb\u7a0b\u5c1d\u8bd5\u64cd\u7eb5\u4e0d\u5728\u7269\u7406\u5185\u5b58\u5f53\u4e2d\u7684\u9875\u4f1a\u53d1\u751f\u9875\u9519\u8bef, \u7ecf\u8fc7\u5224\u5b9a\u662f\u5426\u6709\u6548\u800c\u9009\u62e9\u5c06\u9875\u8f7d\u5165\u6216\u8005\u8fd4\u56de\u6bb5\u8fdd\u89c4</li> <li>\u5f53\u6570\u636e\u4ece\u5185\u5b58\u8bfb\u5165, \u6574\u5757\u88ab\u88c5\u5165 cache \u7684\u884c\u7684\u6570\u636e\u90e8\u5206, \u8be5\u884c\u7684\u6807\u7b7e\u8bb0\u5f55\u7269\u7406\u5730\u5740, \u4ee5\u52a0\u901f\u8fde\u7eed\u8bfb\u53d6</li> <li>\u5806\u5185\u5b58\u7684\u672b\u7aef\u7531 break \u6307\u9488\u7ef4\u62a4</li> <li>\u672a\u5bf9\u9f50\u7684\u8bfb\u5199\u4f1a\u5f15\u53d1\u603b\u7ebf\u9519\u8bef, \u5982\u8981\u8bfb 4 \u5b57\u8282\u6574\u5f62, \u4f46\u6307\u5b9a\u7684\u5730\u5740\u4e0d\u662f 4 \u7684\u500d\u6570</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/#_5","title":"\u4e3a\u4ec0\u4e48\u7a0b\u5e8f\u5458\u65e0\u6cd5\u5206\u6e05\u4e07\u5723\u8282\u548c\u5723\u8bde\u8282","text":"<ul> <li>031==25 10==012</li> <li>\u6240\u6709\u957f\u5ea6\u4e0d\u5230 int \u548c double \u7684\u53d8\u91cf, \u5728\u8868\u8fbe\u5f0f\u4e2d\u4f1a\u81ea\u52a8\u7c7b\u578b\u63d0\u5347, \u4ee5\u4fdd\u8bc1\u5728\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u6ea2\u51fa, \u4f46\u662f\u5982\u679c\u7f16\u8bd1\u5668\u786e\u5b9a\u63d0\u5347\u4e0e\u5426\u4e0d\u5f71\u54cd\u7ed3\u679c, \u53ef\u4ee5\u4e0d\u63d0\u5347 (\u9002\u5f53\u7684\u51fd\u6570\u539f\u5f62\u80fd\u963b\u6b62\u8be5\u8fc7\u7a0b)</li> <li>(float)3 \u4e0e(float)3.0 \u7684\u884c\u4e3a\u662f\u4e0d\u4e00\u6837\u7684</li> </ul> <p>PS:\u8fd9\u90e8\u5206\u4ee5\u5b9e\u9645\u7a0b\u5e8f\u7ecf\u9a8c\u4e3a\u4e3b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/#_6","title":"\u518d\u8bba\u6570\u7ec4","text":"<p>\u5df2\u7ecf\u8ba9\u6211\u4eec\u73a9\u900f\u4e86\u4e0d\u662f\u5417?</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/#_7","title":"\u518d\u8bba\u6307\u9488","text":"<p>\u540c\u4e0a</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/#c-c","title":"\u4f60\u61c2\u5f97 C, \u6240\u4ee5 C++\u4e0d\u5728\u8bdd\u4e0b","text":"<p>\u4e0d\u8bb0\u5f55</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E4%B8%93%E5%AE%B6%E7%BC%96%E7%A8%8B/#_8","title":"\u771f\u6b63\u7684\u5927\u5e08\u4e4b\u4f5c","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E5%92%8C%E6%8C%87%E9%92%88/","title":"C \u548c\u6307\u9488","text":"<ul> <li>C \u548c\u6307\u9488 \u8fd9\u672c\u4e66\u662f\u7ed9\u5b66\u4e60\u8fc7\u9ad8\u7ea7\u8bed\u8a00\u4f46\u6ca1\u5b66\u8fc7 C \u7684\u4eba\u51c6\u5907\u7684(\u800c\u4e14\u662f\u4e0a\u53e4\u65f6\u4ee3), \u5165\u95e8\u4e0d\u6d45, \u5185\u5bb9\u8fc7\u65f6 1</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E5%92%8C%E6%8C%87%E9%92%88/#tips","title":"Tips","text":"<ul> <li>\u4f7f\u7528<code>#if 0 ........ #endif</code>\u53bb\u9664\u4ee3\u7801</li> <li>\u8b66\u60d5\u4e09\u5b57\u6bcd\u8bcd</li> <li>typedef \u58f0\u660e\u7684\u6807\u8bc6\u7b26\u662f\u5185\u90e8\u94fe\u63a5\u7684</li> <li>\u53ef\u7528\u5bc4\u5b58\u5668\u6709\u9650, \u51fd\u6570\u7528\u4e4b\u524d\u4f1a\u5728\u8fd0\u884c\u65f6\u5806\u6808\u4e2d\u4fdd\u5b58\u539f\u6709\u6570\u636e</li> <li>\u81ea\u52a8\u53d8\u91cf\u521d\u59cb\u5316\u4e0e\u8d4b\u503c\u65e0\u5dee\u522b</li> <li>\u6ce8\u610f <code>for</code> \u4e0e <code>while</code> \u5728\u4f7f\u7528 <code>continue</code> \u65f6\u7684\u533a\u522b (\u8fed\u4ee3)</li> <li>\u7b97\u672f\u79fb\u4f4d\u4e0e\u903b\u8f91\u79fb\u4f4d\u53d6\u51b3\u4e8e\u5b9e\u73b0</li> <li>\u5185\u5d4c\u8d4b\u503c\u53ef\u80fd\u56e0\u4e3a\u622a\u65ad\u800c\u53d1\u751f\u9519\u8bef</li> <li>\u4e09\u5143\u8fd0\u7b97\u7b26\u5148\u5224\u65ad\u540e\u8fd0\u7b97 (\u6ca1\u8fd0\u7b97\u7684\u4e0d\u4f1a\u6709\u526f\u4f5c\u7528)</li> <li>\u771f\u503c\u592a\u591a\u4e86, <code>if(a)!=if(a==TRUE)</code></li> <li>\u79fb\u4f4d\u5fc5\u987b\u662f\u975e\u8d1f</li> <li>\u6307\u9488\u7684\u6bd4\u8f83\u6807\u51c6\u4fdd\u8bc1\u53ef\u4ee5\u6bd4\u8f83\u6570\u7ec4\u4e0e\u6570\u7ec4\u6700\u540e\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e, \u4f46\u4e0d\u4fdd\u8bc1\u975e\u6570\u7ec4\u6216\u8005\u6570\u7ec4\u524d\u4e00\u4e2a\u4f4d\u7f6e\u7684\u60c5\u51b5, \u4f46\u5b9e\u73b0\u53ef\u80fd\u4f1a\u6309\u7167\u4f60\u7684\u9884\u671f</li> <li>\u7ed3\u6784\u4f1a\u81ea\u52a8\u5bf9\u9f50, \u6240\u4ee5\u5b89\u6392\u597d\u6210\u5458\u987a\u5e8f</li> <li>\u4e00\u4f4d\u7684 <code>signed int</code> \u53ea\u6709-1 \u548c 0</li> <li>\u8b66\u60d5\u5185\u5b58\u5206\u914d\u5931\u8d25, \u6587\u4ef6\u6253\u5f00\u5931\u8d25</li> <li>\u7528 <code>sizeof</code> \u63d0\u9ad8\u53ef\u79fb\u690d\u6027</li> <li>\u6ce8\u610f\u7f13\u51b2\u533a\u5927\u5c0f</li> <li>\u8c03\u8bd5\u7528\u7684 <code>printf</code> \u540e\u5f3a\u5236\u5237\u65b0</li> <li>\u6ce8\u610f\u5206\u914d\u7684\u7f13\u51b2\u533a\u7684\u751f\u5b58\u5468\u671f</li> <li>\u94fe\u63a5\u5668\u51b3\u5b9a\u5916\u90e8\u6807\u8bc6\u7b26\u7684\u6700\u5927\u957f\u5ea6</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E5%92%8C%E6%8C%87%E9%92%88/#_1","title":"\u8fd9\u672c\u4e66\u6bcf\u4e00\u7ae0\u540e\u7684\u603b\u7ed3\u6bd4\u8f83\u597d, \u5efa\u8bae\u770b\u603b\u7ed3\u5c31\u884c","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E7%BC%BA%E9%99%B7%E4%B8%8E%E9%99%B7%E9%98%B1/","title":"C","text":"<ul> <li>c \u7f3a\u9677\u4e0e\u9677\u9631 \u5185\u5bb9\u53e4\u8001\u4f46\u4e0d\u4f1a\u8fc7\u65f6 (\u5c31\u662f\u4ee5\u73b0\u4ee3\u6559\u80b2\u8d44\u6e90\u4e0e\u7f16\u7a0b\u7ecf\u9a8c\u6765\u770b, \u6709\u70b9\u6d45\u663e) 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E7%BC%BA%E9%99%B7%E4%B8%8E%E9%99%B7%E9%98%B1/#_1","title":"\u8bcd\u6cd5\u9677\u9631","text":"<ul> <li>\u6ce8\u610f <code>==</code> \u4e0e <code>=</code>, \u5982\u679c\u5224\u65ad\u6761\u4ef6\u7528 <code>=</code> \u8bf7\u4f7f\u7528 <code>()</code> \u5982 <code>(ch=getchar())</code></li> <li>\u6ce8\u610f\u4f4d\u8fd0\u7b97\u4e0e\u903b\u8f91\u8fd0\u7b97</li> <li>\u8bcd\u6cd5\u5206\u6790\u4e2d\u7684\u8d2a\u5fc3\u6cd5 (\u5c3d\u53ef\u80fd\u4f7f\u4e00\u4e2a token \u957f) \u5982 <code>a---b</code> \u7b49\u6548 <code>(a--)-b</code></li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E7%BC%BA%E9%99%B7%E4%B8%8E%E9%99%B7%E9%98%B1/#_2","title":"\u8bed\u6cd5\u9677\u9631","text":"<ul> <li>c \u8bed\u8a00\u7684\u58f0\u660e (\u5728 c \u7684\u51e0\u4e4e\u6240\u6709\u7ecf\u5178\u5f53\u4e2d\u90fd\u6709\u5bf9\u590d\u6742\u58f0\u660e\u7684\u63a2\u8ba8, \u4e0d\u8d58\u8ff0)</li> <li>\u6ce8\u610f\u8fd0\u7b97\u7b26\u7684\u4f18\u5148\u7ea7 (\u4f60\u4e5f\u8bb8\u53ef\u4ee5\u627e\u5230\u4e00\u4e9b\u89c4\u5f8b\u8bb0\u4f4f\u5b83\u4eec)</li> <li>\u6ce8\u610f;\u7684\u9519\u8bef\u4f1a\u6539\u53d8 if else \u7684\u884c\u4e3a</li> <li>\u7075\u6d3b\u4f7f\u7528 switch \u8bed\u53e5\u5f53\u4e2d\u4e0d\u4f1a\u81ea\u52a8 break \u7684\u7279\u6027</li> <li>\u6ce8\u610f else \u7684\u914d\u5bf9</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E7%BC%BA%E9%99%B7%E4%B8%8E%E9%99%B7%E9%98%B1/#_3","title":"\u8bed\u4e49\u9677\u9631","text":"<ul> <li>C \u8bed\u8a00\u53ea\u6709\u4e00\u7ef4\u6570\u7ec4, \u5e76\u4e14\u6211\u4eec\u53ea\u80fd\u83b7\u5f97\u957f\u5ea6\u4ee5\u53ca\u9996\u5143\u7d20\u7684\u5730\u5740, \u6240\u6709\u6570\u7ec4\u7684\u5176\u4ed6\u64cd\u4f5c\u672c\u8d28\u4e0a\u90fd\u662f\u5bf9\u4e8e\u6307\u9488\u7684\u64cd\u4f5c</li> <li>\u60f3\u6e05\u695a\u5185\u5b58\u7a7a\u95f4, \u5408\u7406\u7684 free, \u9632\u6b62\u5185\u5b58\u6cc4\u6f0f, \u662f\u5426\u5206\u914d\u6210\u529f, \u5b57\u7b26\u4e32\u591a\u4e00\u4e2a\u5b57\u8282</li> <li>\u6570\u7ec4\u4f20\u8fdb\u51fd\u6570\u7684\u4fe1\u606f\u7f3a\u5931</li> <li>\u4e0d\u8981\u89e3\u5f15\u7528 NULL, \u76f8\u5e94\u7684\u4e5f\u53ef\u4ee5\u63a8\u5e7f\u5230\u5783\u573e\u503c\u4ee5\u53ca\u5df2\u7ecf free \u7684\u5730\u5740</li> <li>\u6ce8\u610f\u8fb9\u754c, \u5199\u6210 x &gt;= begin &amp;&amp; x &lt; end, \u8fd9\u6709\u4e0d\u5c11\u7406\u89e3\u4e0e\u8ba1\u7b97\u7684\u597d\u5904</li> <li>\u6c42\u503c\u987a\u5e8f/\u5e8f\u5217\u70b9</li> <li>a&gt;INT_MAX-b \u53ef\u4ee5\u9a8c\u8bc1 a+b \u662f\u5426\u6ea2\u51fa</li> <li>\u8fd4\u56de\u6574\u578b\u7684\u51fd\u6570\u6ca1\u6709 return, \u4f1a\u8fd4\u56de\u5783\u573e\u503c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E7%BC%BA%E9%99%B7%E4%B8%8E%E9%99%B7%E9%98%B1/#_4","title":"\u94fe\u63a5","text":"<ul> <li>\u5584\u7528 lint \u68c0\u67e5\u94fe\u63a5\u65f6\u9519\u8bef</li> <li>extern \u4ec5\u662f\u5f15\u7528</li> <li>static \u907f\u514d\u547d\u540d\u51b2\u7a81</li> <li>\u6ca1 include \u4e5f\u53ef\u4ee5\u7528\u5e93\u51fd\u6570, \u53ea\u662f\u7f3a\u5c11\u58f0\u660e\u800c\u5df2</li> <li>\u5728\u5934\u6587\u4ef6\u4e2d extern \u5168\u5c40\u53d8\u91cf, \u5728\u4efb\u4f55\u5730\u65b9 include \u5b83\u662f\u4f18\u79c0\u7684\u65b9\u6cd5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E7%BC%BA%E9%99%B7%E4%B8%8E%E9%99%B7%E9%98%B1/#_5","title":"\u5e93\u51fd\u6570","text":"<p>\u4e0d\u8bb0\u5f55</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E7%BC%BA%E9%99%B7%E4%B8%8E%E9%99%B7%E9%98%B1/#_6","title":"\u9884\u5904\u7406\u5668","text":"<p>\u8be5\u90e8\u5206\u7684\u5185\u5bb9\u4e0a\u9762\u6216\u591a\u6216\u5c11\u6709\u6240\u63d0\u53ca, \u5305\u62ec\u628a\u53c2\u6570\u4ee5\u53ca\u6700\u5916(), \u4ee5\u53ca\u4e0d\u8981\u8ba9\u53c2\u6570\u4e2d\u6709\u526f\u4f5c\u7528, \u4e0d\u8981\u5728\u5b8f\u4e2d\u4f7f\u7528 if, \u4e0d\u8981\u7528\u5b8f\u66ff\u6362\u6307\u9488\u7c7b\u578b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E7%BC%BA%E9%99%B7%E4%B8%8E%E9%99%B7%E9%98%B1/#_7","title":"\u53ef\u79fb\u690d\u6027\u7f3a\u9677","text":"<ul> <li>\u6743\u8861\u517c\u5bb9\u4e0e\u65b0\u7279\u6027\u7684\u4fbf\u5229</li> <li>\u6807\u8bc6\u7b26\u7684\u9650\u5236</li> <li>\u903b\u8f91\u79fb\u4f4d\u4e0e\u7269\u7406\u79fb\u4f4d</li> <li>\u6574\u578b\u7684\u7b26\u53f7\u4e0e\u5927\u5c0f (\u4f7f\u7528 unsigned char)</li> <li>\u5728\u65b0\u7684\u5b9e\u73b0\u5f53\u4e2d, realloc \u53ef\u4ee5\u628a\u5df2\u7ecf free \u7684\u5185\u5b58\u5757\u91cd\u65b0\u5206\u914d\u5927\u5c0f</li> </ul> <p>\u5f88\u591a\u8fc7\u65f6\u5185\u5bb9\u6ca1\u6709\u8bb0\u5f55</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E8%AF%AD%E8%A8%80%E9%87%8D%E7%82%B9%E6%80%BB%E7%BB%93/","title":"C\u8bed\u8a00\u91cd\u70b9\u603b\u7ed3","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E8%AF%AD%E8%A8%80%E9%87%8D%E7%82%B9%E6%80%BB%E7%BB%93/#_1","title":"\u6307\u9488","text":"<p>\u5c31 c \u8bed\u8a00\u7684\u6570\u7ec4\u4e0e\u51fd\u6570, \u6211\u6709\u4e00\u5b9a\u7406\u89e3, \u603b\u7ed3\u5982\u4e0b a[i]==i[a]==*(a+i) ()\u4e3a\u6839\u636e\u5730\u5740\u6267\u884c\u6307\u4ee4</p> type&amp;action object function array \u503c/name \u503c \u51fd\u6570\u5730\u5740 \u9996\u5143\u7d20\u5730\u5740 &amp; \u53d8\u91cf\u5730\u5740 \u51fd\u6570\u5730\u5740 \u6570\u7ec4\u5730\u5740 * \u503c\u6240\u4ee3\u8868\u7684\u5730\u5740\u4e0a\u7684\u503c \u51fd\u6570\u5730\u5740 \u9996\u5143\u7d20 sizeof type'size no (sizeof type)*length"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E8%AF%AD%E8%A8%80%E9%87%8D%E7%82%B9%E6%80%BB%E7%BB%93/#c-c","title":"c \u4e0e c++","text":"<ul> <li>C++\u8ba4\u4e3a int fun()==int fun(void), C \u8ba4\u4e3a\u53ea\u662f\u7701\u7565\u4e86</li> <li>C \u7684 char \u5e38\u91cf'a'\u662f int \u7c7b\u578b, \u56e0\u6b64'ABCD'\u4e0d\u4f1a\u62a5\u9519</li> <li>C++\u7684 const \u53d8\u91cf\u9ed8\u8ba4\u662f\u5185\u90e8\u94fe\u63a5, \u53ef\u4ee5\u7528 extern \u6539\u4e3a\u5916\u90e8\u94fe\u63a5</li> <li>C++const \u53d8\u91cf\u53ef\u4ee5\u521d\u59cb\u5316 const, C \u4e0d\u884c</li> <li>C++\u4e25\u683c\u4f7f\u7528\u679a\u4e3e, C \u5c06\u4e4b\u8ba4\u5b9a\u4e3a\u6574\u578b</li> <li>C++\u539f\u751f\u5bbd\u5b57\u7b26, C \u539f\u751f\u590d\u6570</li> <li>C++11 \u6ca1\u6709\u521d\u59cb\u5316\u5668, restric, VLA, \u4f38\u7f29\u578b\u6570\u7ec4\u6210\u5458, \u53ef\u53d8\u6570\u91cf\u53c2\u6570\u7684\u5b8f</li> <li>c \u6807\u8bb0\u540d\u4e0e\u53d8\u91cf\u540d\u53ef\u4ee5\u91cd\u590d, c++\u4e0d\u884c</li> <li>molloc \u5728 C++\u4e2d\u5fc5\u987b\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362</li> <li>C \u8b66\u544a\u5c06 const \u6307\u9488\u8d4b\u7ed9\u666e\u901a\u6307\u9488, C++error</li> <li>C++\u53ef\u4ee5\u7528 const \u6574\u578b\u58f0\u660e\u6570\u7ec4\u5927\u5c0f</li> <li>C++\u53ef\u4ee5 type(name)\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362</li> <li>C++\u4e0d\u53ef\u8c03\u7528 main()\u73b0\u5728 C \u4e5f\u4e0d\u884c\u4e86</li> <li>C \u53ef\u4ee5 char[3]=\"asd\"</li> </ul> <p>\u4ee5\u4e0a\u53d7\u65f6\u95f4\u5f71\u54cd, \u4ec5\u4f9b\u53c2\u8003</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E8%AF%AD%E8%A8%80%E9%87%8D%E7%82%B9%E6%80%BB%E7%BB%93/#_2","title":"\u58f0\u660e","text":"<p>\u6784\u6210:type name+\u4fee\u9970\u7b26 \u4e0d\u8ba8\u8bba const extern \u7b49</p> <p>\u4fee\u9970\u7b26\u6709\u4e09\u79cd:</p> <ul> <li>\u540e\u7f6e\u6709[]\u4e0e(), \u4f18\u5148\u7ea7\u76f8\u540c, \u81ea\u5de6\u5411\u53f3\u7ed3\u5408 \u5f53\u7136, \u8fd9\u662f\u5bf9\u89c4\u5f8b\u7684\u603b\u7ed3, \u5b9e\u9645\u4e0a\u5b83\u4eec\u4e0d\u662f\u8fd0\u7b97\u7b26, \u6ca1\u6709\u4f18\u5148\u7ea7\u4e0e\u7ed3\u5408\u5f8b</li> <li>\u524d\u7f6e* \u4f18\u5148\u7ea7\u5c0f\u4e8e\u540e\u7f6e, \u56e0\u6b64\u6211\u4eec\u58f0\u660e\u6570\u7ec4\u4e0e\u51fd\u6570\u7684\u6307\u9488\u5fc5\u987b\u4f7f\u7528()</li> </ul> <p>\u5c06\u4fee\u9970\u7b26\u4e0e name \u7ed3\u5408, \u7406\u89e3\u5b83\u7684\u7c7b\u578b \u6700\u540e\u4f60\u4f1a\u53d1\u73b0, \u5982\u679c\u4f60\u5c06\u4ee5\u4e0a\u4e09\u79cd\u7b26\u53f7\u8ba4\u4e3a\u662f\u8fd0\u7b97\u7b26\u5f62\u5f0f, \u90a3\u4e48\u4f60\u5f97\u5230\u7684\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f, \u800c\u524d\u9762\u7684 type \u5c31\u662f\u8868\u8fbe\u5f0f\u503c\u7684\u7c7b\u578b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E8%AF%AD%E8%A8%80%E9%87%8D%E7%82%B9%E6%80%BB%E7%BB%93/#_3","title":"\u94fe\u63a5\u6570\u7ec4","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u503c\u5f97\u88ab\u5355\u72ec\u62ff\u51fa\u6765\u8bf4\u7684\u4e8b\u60c5 \u5728\u94fe\u63a5\u9636\u6bb5\u8de8\u6587\u4ef6\u4f7f\u7528\u4e00\u4e2a\u5168\u5c40\u6570\u7ec4\u7684\u65f6\u5019 \u4e0d\u80fd extern \u4e00\u4e2a\u6307\u9488 (\u53cd\u4e4b\u51fd\u6570\u5f62\u53c2\u53ef\u4ee5) \u56e0\u4e3a\u94fe\u63a5\u53d8\u91cf\u662f\u6307\u51fa a \u7684\u5730\u5740 (\u7531\u53e6\u4e00\u4e2a\u6587\u4ef6\u5b9a\u4e49), \u5f53\u4f60\u628a\u4e00\u4e2a\u6570\u7ec4\u58f0\u660e\u4e3a\u5bf9\u5e94\u5143\u7d20\u7684\u6307\u9488, \u4f1a\u8ba4\u4e3a\u6570\u7ec4\u5730\u5740\u5b58\u50a8\u7684\u90a3\u4e2a\u503c\u662f\u6307\u9488\u7684\u503c, \u672c\u8d28\u539f\u56e0\u662f\u6570\u7ec4\u7684\u503c\u867d\u7136\u662f\u9996\u5143\u7d20\u7684\u6307\u9488, \u4f46\u6ca1\u6709\u4f7f\u7528\u989d\u5916\u7684\u7a7a\u95f4\u5b58\u50a8, \u7a0b\u5e8f\u4f1a\u8bbf\u95ee\u672a\u77e5\u7684\u5185\u5b58</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E8%AF%AD%E8%A8%80%E9%87%8D%E7%82%B9%E6%80%BB%E7%BB%93/#_4","title":"\u589e\u8865","text":"<pre><code>sizeof(void)=1 (gcc)\nsizeof(\"hello\")=6\nsizeof('a')=sizeof(int)\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E8%AF%AD%E8%A8%80%E9%87%8D%E7%82%B9%E6%80%BB%E7%BB%93/#c","title":"C \u6807\u51c6\u4e2d\u7684\u6982\u5ff5","text":"<ul> <li>1byte &gt;= 8bit</li> <li>\u51fd\u6570\u6700\u5c11\u652f\u6301 31 \u4e2a\u53c2\u6570</li> <li>\u4e00\u6761\u4ee3\u7801\u884c\u91cc\u81f3\u5c11\u53ef\u4ee5\u6709 509 \u4e2a\u5b57\u7b26</li> <li>\u8868\u8fbe\u5f0f\u4e2d, \u81f3\u5c11\u652f\u6301 32 \u5c42\u5d4c\u5957()</li> <li>\u81f3\u5c11 257 \u4e2a case</li> <li>\u5bf9\u8c61\u6307\u4e00\u4e2a\u6216\u591a\u4e2a\u5b57\u8282, \u8fd9\u4e9b\u5b57\u8282\u7684\u4e8c\u8fdb\u5236\u503c\u4e3a\u5bf9\u8c61\u8868\u793a, \u5bf9\u8c61\u8868\u793a\u4e2d\u53ef\u80fd\u542b\u6709\u586b\u5145</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C/C%E8%AF%AD%E8%A8%80%E9%87%8D%E7%82%B9%E6%80%BB%E7%BB%93/#_5","title":"\u5bf9\u8c61\u7c7b\u578b","text":"<ul> <li>\u5927\u5c0f\u4e0e\u5bf9\u9f50\u8981\u6c42</li> <li>\u7b97\u672f\u7c7b\u578b, \u6807\u51c6\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b\u5927\u6982\u7387\u6ca1\u6709\u586b\u5145</li> <li>_BitInt(n) \u7c7b\u4f3c n \u4f4d\u6709\u7b26\u53f7\u6574\u6570\u7c7b\u578b, \u4f46\u53ef\u80fd\u6709\u586b\u5145</li> <li>\u65e0\u7b26\u53f7\u53bb\u6389\u7b26\u53f7\u4f4d</li> <li>\u6d3e\u751f\u7c7b\u578b:\u6570\u7ec4/\u51fd\u6570(\u4e0d\u662f\u5bf9\u8c61\u7c7b\u578b)/\u6307\u9488/\u7ed3\u6784/\u8054\u5408/\u539f\u5b50</li> <li>\u6570\u7ec4\u7c7b\u578b, T[n], \u8981\u6c42 T \u662f\u5b8c\u5168\u5bf9\u8c61\u7c7b\u578b, T[]\u4e3a\u4e0d\u5b8c\u5168\u5bf9\u8c61\u7c7b\u578b, \u82e5 N \u4e3a\u6574\u6570\u5e38\u91cf/\u6574\u6570\u5e38\u91cf\u8868\u8fbe\u5f0f, \u5219 T[n]\u4e3a\u666e\u901a\u6570\u7ec4\u7c7b\u578b, \u5426\u5219\u4e3a\u53d8\u957f\u5ea6\u6570\u7ec4\u7c7b\u578b</li> <li>\u6307\u9488\u7c7b\u578b</li> <li>\u9650\u5b9a\u7c7b\u578b, const/volatile/restrict(\u53ea\u80fd\u4fee\u9970\u6307\u9488/\u6307\u9488\u591a\u7ef4\u6570\u7ec4, \u542b\u4e49\u4ec5\u6211\u6240\u6709)/_Atomic</li> <li>\u7b97\u672f\u7c7b\u578b\u4e0e\u6307\u9488\u7c7b\u578b(\u5305\u62ec nullptr_t)\u53ca\u5176\u9650\u5b9a\u7c7b\u578b\u4e3a\u6807\u91cf\u7c7b\u578b</li> <li>\u521d\u59cb\u5316: name={};name=\u503c;name=\u9664<code>,</code>\u8868\u8fbe\u5f0f\u5916\u7684\u4efb\u4f55 16 \u79cd\u8868\u8fbe\u5f0f</li> <li>\u5177\u540d\u5bf9\u8c61\u4e0e\u533f\u540d\u5bf9\u8c61</li> <li>\u5bf9\u8c61\u5c5e\u6027:\u5730\u5740/\u7c7b\u578b/\u5bf9\u9f50\u8981\u6c42/\u5927\u5c0f/\u8868\u793a\u503c/\u8868\u793a\u7c7b\u578b/\u5bf9\u8c61\u540d\u79f0</li> <li>\u5206\u914d\u5bf9\u8c61\u7684\u65b9\u5f0f:\u58f0\u660e/\u5b57\u7b26\u4e32/\u5185\u5b58\u7ba1\u7406/\u590d\u5408\u5b57\u9762\u91cf</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/","title":"C++","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>C++ Primer \u5927\u800c\u4e0d\u5168 (CPP \u6ca1\u6cd5\u5168), \u53d9\u8ff0\u987a\u5e8f\u5f88\u68d2 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_2","title":"\u5f00\u59cb","text":"<ul> <li><code>istream</code> \u7c7b\u7684\u5bf9\u8c61 <code>cin</code>, <code>ostream</code> \u7c7b\u7684\u5bf9\u8c61 <code>cout cerr clog</code>, \u7528\u5904\u987e\u540d\u601d\u4e49</li> <li><code>std::endl</code> \u7ed3\u675f\u884c, \u5237\u65b0\u7f13\u51b2\u533a, \u5728\u6d41\u4e2d\u53eb\u64cd\u7eb5\u7b26</li> <li><code>istream</code> \u5bf9\u8c61\u4f5c\u4e3a\u6761\u4ef6, \u6d41\u672a\u9519\u8bef\u65f6 <code>true</code>, <code>EOF</code> \u6216\u65e0\u6548\u8f93\u5165\u8fd4\u56de <code>false</code>, \u539f\u7406\u662f\u91cd\u8f7d <code>bool</code> \u8f6c\u6362</li> <li>\u53e6\u5916, \u9047\u89c1\u9519\u8bef\u65f6 <code>cin</code> \u5bf9\u8c61\u4f1a\u8bbe\u7f6e\u9519\u8bef\u72b6\u6001 (\u5f3a\u8f6c <code>bool</code> \u4f1a\u8fd4\u56de\u8fd9\u4e2a\u503c), \u540e\u7eed\u8f93\u5165\u65e0\u6548</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_3","title":"\u57fa\u7840","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_4","title":"\u53d8\u91cf\u548c\u57fa\u672c\u7c7b\u578b","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_5","title":"\u7b97\u672f\u7c7b\u578b","text":"<ul> <li>C++ \u89c4\u5b9a\u7b97\u672f\u7c7b\u578b\u7684\u6700\u5c0f\u5c3a\u5bf8, \u6ce8\u610f <code>wchar_t</code>, <code>char16_t</code> \u662f 16 \u4f4d <code>_tchar32_t</code> \u662f 32 \u4f4d (\u540e\u4e24\u79cd\u5e94\u5bf9 <code>unicode</code>)</li> <li>\u5bf9\u6d6e\u70b9\u578b\u4ec5\u8981\u6c42\u6700\u5c0f\u7cbe\u5ea6, 6/10/10 (\u4e00\u822c\u6765\u8bf4 7/16 , 32bit / 64bit), <code>bool</code> \u503c\u672a\u5b9a\u4e49</li> <li>\u5b57\u8282\u662f\u53ef\u5bfb\u5740\u7684\u6700\u5c0f\u5185\u5b58\u5757, \u5b58\u50a8\u7684\u57fa\u672c\u5355\u5143\u4e3a\u5b57</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_6","title":"\u6574\u6570\u7c7b\u578b","text":"<ul> <li>\u9664 <code>bool</code> \u4e0e\u62d3\u5c55 <code>char</code> \u5916, \u5176\u4ed6\u6574\u6570\u7c7b\u578b\u90fd\u6709\u7b26\u53f7\u548c\u65e0\u7b26\u53f7\u7248\u672c, \u5206\u522b\u7528 <code>signed</code>/<code>unsigned</code> \u4fee\u9970</li> <li>\u9664 <code>char</code> \u5916, \u5176\u4ed6\u7b97\u672f\u7c7b\u578b\u672c\u8eab\u5c31\u662f <code>signed</code>, \u4f46 <code>char</code> \u6709\u4e09\u79cd, \u800c\u5176\u672c\u8eab\u5230\u5e95\u662f <code>signed</code> \u8fd8\u662f <code>unsigned</code> \u5219\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668</li> <li>\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362, \u8d4b <code>signed</code> \u4e00\u4e2a\u533a\u95f4\u5916\u7684\u503c\u4f1a\u4ea7\u751f\u672a\u5b9a\u4e49\u884c\u4e3a, \u800c\u8d4b <code>unsigned</code> \u5219\u4f1a\u4ea7\u751f\u6a21\u8fd0\u7b97, \u503c\u4e3a\u521d\u59cb\u503c\u5bf9\u5bb9\u91cf\u53d6\u6a21, -1 \u5bf9 256 \u53d6\u6a21\u4e3a 255</li> <li>\u6df7\u7528 signed \u548c unsigned, signed \u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3a unsigned</li> <li>\u516b\u8fdb\u5236\u4e0e\u5341\u516d\u8fdb\u5236\u5b57\u9762\u91cf, \u7c7b\u578b\u4e3a\u53ef\u4ee5\u5bb9\u7eb3\u7684\u6700\u5c0f\u7c7b\u578b (int/long/long long \u4ee5\u53ca\u5b83\u4eec\u7684\u65e0\u7b26\u53f7\u7248\u672c), \u6ce8\u610f\u6ca1\u6709 short</li> <li>\u4f46\u5341\u8fdb\u5236\u5b57\u9762\u91cf\u7684\u7c7b\u578b\u90fd\u662f\u6709\u7b26\u53f7\u7684, \u7136\u800c\u5b57\u9762\u91cf\u672c\u8eab\u4e0d\u4f1a\u4e3a\u8d1f\u6570, -n \u672c\u8d28\u662f n \u7684\u53d6\u53cd</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_7","title":"\u6d6e\u70b9\u7c7b\u578b","text":"<ul> <li>\u5b57\u7b26\u578b\u5b57\u9762\u91cf\u7684\u7c7b\u578b\u4e3a char, \u5982 'a'</li> <li>\u6d6e\u70b9\u578b\u5b57\u9762\u91cf\u7684\u7c7b\u578b\u4e3a double, \u53ef\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\u8868\u793a</li> <li>\u5173\u4e8e\u6307\u5b9a\u5b57\u9762\u91cf\u7c7b\u578b, \u9664\u540e\u7f00\u5916, \u8fd8\u53ef\u4ee5\u7528\u524d\u7f00, \u5982 L, u8, u, U \u5206\u522b\u662f\u62d3\u5c55 char</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_8","title":"\u53d8\u91cf","text":"<ul> <li>C \u7684\u521d\u59cb\u5316\u5668\u53d8\u6210\u4e86 C++ \u7684\u521d\u59cb\u5316\u5217\u8868, \u4f46 <code>int a{0}; int a={0};</code> \u90fd\u53ef\u4ee5</li> <li>\u7279\u6b8a\u7684, \u521d\u59cb\u5316\u5217\u8868\u9020\u6210\u6570\u636e\u4e22\u5931\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519, \u800c = \u6216\u8005 () \u5219\u4e0d\u4f1a</li> <li>extern int a \u5f3a\u8c03\u8fd9\u662f\u4e00\u4e2a\u58f0\u660e (\u663e\u793a\u521d\u59cb\u5316\u4f1a\u9000\u5316\u4e3a\u5b9a\u4e49), \u5728\u51fd\u6570\u4f53\u5185\u663e\u793a\u521d\u59cb\u5316 extern \u7684\u53d8\u91cf\u4f1a\u62a5\u9519</li> <li>\u4f5c\u7528\u57df\u4e0e C \u4e00\u81f4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_9","title":"\u590d\u5408\u7c7b\u578b","text":"<ul> <li>\u5de6\u503c\u5f15\u7528\u5373\u522b\u540d, \u5b83\u5fc5\u987b\u88ab\u521d\u59cb\u5316 (\u7ed1\u5728\u4e00\u4e2a\u5bf9\u8c61\u4e0a)</li> <li>nullptr \u662f\u4e00\u79cd\u7279\u6b8a\u7c7b\u578b\u7684\u5b57\u9762\u91cf, \u53ef\u4ee5\u8f6c\u6362\u4e3a\u4efb\u4f55\u6307\u9488\u7c7b\u578b, NULL \u662f\u503c\u4e3a ((void*) 0) \u7684\u5b8f</li> <li>\u6307\u9488\u53ef\u4ee5\u6709\u5f15\u7528</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#const","title":"const","text":"<ul> <li>const \u5bf9\u8c61\u5fc5\u987b\u521d\u59cb\u5316</li> <li>const \u5185\u90e8\u7c7b\u578b\u5bf9\u8c61\u9ed8\u8ba4\u4e3a\u5185\u90e8\u94fe\u63a5, \u539f\u56e0\u662f\u6709\u521d\u59cb\u503c\u7684\u5e38\u91cf\u4f7f\u7528\u65f6\u4f1a\u88ab\u76f4\u63a5\u66ff\u6362, cpp \u4e3a\u4fdd\u8bc1\u80fd\u627e\u5230\u5b83\u6700\u597d\u5c06\u5b83\u653e\u5728\u5934\u6587\u4ef6\u4e2d, \u4e3a\u907f\u514d\u91cd\u590d\u5b9a\u4e49\u9ed8\u8ba4\u5185\u90e8\u94fe\u63a5</li> <li>\u4f46\u5e38\u91cf\u4e5f\u6709\u4e0d\u77e5\u9053\u521d\u59cb\u503c\u7684, \u8fd9\u65f6\u5e94\u8be5\u4f7f\u7528 extern const, \u7528\u521d\u59cb\u5316\u4e0e\u5426\u51b3\u5b9a\u58f0\u660e / \u5b9a\u4e49</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_10","title":"\u7279\u6027","text":"<ul> <li>\u5bf9 const \u7684\u5f15\u7528\u4e5f\u662f\u4e0d\u53ef\u4fee\u6539\u503c\u7684 (\u6ce8\u610f\u5f15\u7528\u7c7b\u578b\u5fc5\u987b\u4e5f\u662f const)</li> <li>\u4f46\u53cd\u4e4b, const \u5f15\u7528\u53ef\u4ee5\u7ed1\u5b9a\u5230\u975e const \u5bf9\u8c61\u4e0a, \u4e5f\u4e0d\u80fd\u901a\u8fc7\u5f15\u7528\u4fee\u6539\u5bf9\u8c61\u7684\u503c</li> <li>\u7279\u6b8a\u7684 const \u5f15\u7528\u53ef\u4ee5\u7ed1\u5b9a\u5230\u5176\u5b83\u7c7b\u578b\u4e0a (\u53ef\u4ee5\u8f6c\u6362\u5c31\u884c), \u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61</li> <li>\u9876\u5c42 const \u4e0e\u5e95\u5c42 const</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#constexpr","title":"constexpr","text":"<ul> <li>\u5e38\u91cf\u8868\u8fbe\u5f0f (\u751a\u81f3\u5e38\u91cf\u51fd\u6570) \u53ef\u4ee5\u5728\u7f16\u8bd1\u671f\u786e\u5b9a, \u4f46\u81ea\u52a8\u5224\u65ad\u5e38\u91cf\u5f88\u56f0\u96be, \u4f60\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a constexpr (\u7279\u6b8a\u7684 const) \u53d8\u91cf, \u5b83\u5fc5\u987b\u662f\u88ab\u5e38\u91cf\u8868\u8fbe\u5f0f\u521d\u59cb\u5316, \u5426\u5219\u4f1a\u62a5\u9519</li> <li>\u5176\u5fc5\u987b\u662f\u5b57\u9762\u503c\u7c7b\u578b, constexpr \u6307\u9488\u4e5f\u5fc5\u987b\u521d\u59cb\u5316\u4e3a nullptr/0 / \u67d0\u4e2a\u56fa\u5b9a\u5730\u5740</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_11","title":"\u5904\u7406\u7c7b\u578b","text":"<ul> <li>using/typedef \u53ef\u4ee5\u4e3a\u7c7b\u578b\u8d77\u522b\u540d, \u518d\u7528\u58f0\u660e\u7b26\u65f6, \u4f18\u5148\u7ea7\u5c0f\u4e8e\u522b\u540d\u5185\u90e8\u7684</li> <li>auto \u81ea\u52a8\u5224\u65ad\u7c7b\u578b, \u5ffd\u7565\u9876\u5c42 const (\u5f15\u7528\u4e0d\u88ab\u8ba4\u4e3a\u662f\u7c7b\u578b\u7684\u4e00\u90e8\u5206), \u4f46\u5e95\u5c42 const \u5219\u4fdd\u7559</li> <li>anto &amp; \u65f6\u4f1a\u4fdd\u7559\u9876\u5c42 const (\u5373\u4f7f\u4e0d\u663e\u793a const)</li> <li><code>decltype()</code> \u53ef\u4ee5\u5f97\u5230\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b, \u4f46\u4e0d\u4f7f\u7528\u8868\u8fbe\u5f0f\u7684\u503c, \u4fdd\u7559\u4e00\u5207\u7c7b\u578b (\u5305\u62ec\u5f15\u7528, \u60df\u72ec\u8fd9\u65f6\u5f15\u7528\u4f1a\u88ab\u5f53\u4f5c\u7c7b\u578b\u7684\u4e00\u90e8\u5206, \u6240\u4ee5\u53ef\u4ee5 <code>a+0</code> \u7684\u5f62\u5f0f\u53bb\u6389\u5f15\u7528)</li> <li>\u6ce8\u610f <code>*p</code> \u7684\u7c7b\u578b\u662f\u662f\u4e00\u79cd\u5f15\u7528, (p) \u4e0e p \u7684\u7c7b\u578b\u662f\u4e0d\u540c\u7684, (p) \u662f\u8868\u8fbe\u5f0f, \u7c7b\u578b\u4e3a\u5f15\u7528, \u539f\u56e0\u662f (p) \u662f\u53ef\u4ee5\u505a\u5de6\u503c\u7684\u7279\u6b8a\u8868\u8fbe\u5f0f</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_12","title":"\u81ea\u5b9a\u4e49\u6570\u636e\u7ed3\u6784","text":"<ul> <li>C++11 \u89c4\u5b9a\u7c7b\u5185\u6570\u636e\u6210\u5458\u53ef\u4ee5\u6307\u5b9a\u521d\u59cb\u503c, \u5426\u5219\u4f1a\u9ed8\u8ba4\u521d\u59cb\u5316</li> <li>\u5934\u6587\u4ef6\u4fdd\u62a4\u7b26</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_13","title":"\u5b57\u7b26\u4e32, \u5411\u91cf\u548c\u6570\u7ec4","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#using","title":"\u547d\u540d\u7a7a\u95f4\u7684 using \u58f0\u660e","text":"<ul> <li><code>using namespace::name;</code> \u5c31\u53ef\u4ee5\u81ea\u7531\u4f7f\u7528 name, \u5934\u6587\u4ef6\u663e\u7136\u4e0d\u5e94\u4f7f\u7528</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#string","title":"\u6807\u51c6\u5e93\u7c7b\u578b string","text":"<ul> <li>\u5934\u6587\u4ef6 <code>&lt;string&gt;</code></li> <li>C++ \u53ef\u76f4\u63a5\u521d\u59cb\u5316 / \u62f7\u8d1d\u521d\u59cb\u5316 (\u53ea\u80fd\u63d0\u4f9b\u4e00\u4e2a\u503c), \u53ef\u4ee5\u6784\u9020\u4e34\u65f6\u5bf9\u8c61\u5f3a\u884c\u62f7\u8d1d\u521d\u59cb\u5316</li> <li>getline (is, s) \u8bfb\u53d6\u4e00\u6574\u884c, \u9047\u5230\u6362\u884c\u7b26\u7ed3\u675f, \u8fd4\u56de is (\u76f4\u63a5 cin&gt;&gt; \u662f\u7a7a\u767d\u5c31\u505c)</li> <li>\u6807\u51c6\u5e93\u7c7b\u578b\u5927\u591a\u6709\u914d\u5957\u7c7b\u578b, \u5982 string::size_type \u662f\u65e0\u7b26\u53f7\u7c7b\u578b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#c_1","title":"C \u98ce\u683c\u5b57\u7b26\u4e32","text":"<ul> <li>\u663e\u7136\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u662f C \u98ce\u683c (\u5b57\u7b26\u6570\u7ec4)</li> <li>C \u6807\u51c6\u5e93 name.h \u4f9d\u65e7\u53ef\u7528, \u4f46\u5efa\u8bae\u4f7f\u7528 cname \u5934\u6587\u4ef6, \u56e0\u4e3a\u5b83\u4eec\u5c5e\u4e8e std \u547d\u540d\u7a7a\u95f4</li> <li>cctype \u4e2d\u6709\u4e00\u5806\u5224\u65ad\u5b57\u7b26\u7684\u51fd\u6570</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#for","title":"\u8303\u56f4 for","text":"<ul> <li><code>for(type name:range)</code>  \u8303\u56f4 for \u5faa\u73af, \u904d\u5386 range \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20, \u5e76\u5c06\u5176\u8d4b\u503c\u7ed9 name, \u6ce8\u610f \u5143\u7d20\u672c\u8eab\u8fc7\u5927\u662f\u5e94\u4f7f\u7528\u5f15\u7528</li> <li>\u663e\u7136\u82e5\u60f3\u4fee\u6539\u5143\u7d20, \u5219 name \u5fc5\u987b\u4e3a\u5f15\u7528\u7c7b\u578b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#vector","title":"\u6807\u51c6\u5e93\u7c7b\u578b vector","text":"<ul> <li>\u6a21\u7248\u4e0d\u662f\u7c7b\u6216\u51fd\u6570, \u662f\u7f16\u8bd1\u5668\u751f\u6210\u7c7b\u6216\u51fd\u6570\u7684\u4e00\u4efd\u8bf4\u660e, \u9700\u8981\u5b9e\u4f8b\u5316</li> <li>\u5728\u7c7b\u7684\u6570\u636e\u6210\u5458\u58f0\u660e\u5904\u8fdb\u884c\u521d\u59cb\u5316 (\u7c7b\u5185\u521d\u59cb\u503c), \u4e0d\u53ef\u4f7f\u7528 ()</li> <li>\u5927\u591a\u6807\u51c6\u5e93\u7c7b\u90fd\u53ef\u4ee5 (n, v) \u6784\u9020\u4e00\u4e2a\u542b n \u4e2a v \u7684\u5bf9\u8c61, \u6ce8\u610f\u53ef\u4ee5\u7701\u7565 v, \u4f1a\u8c03\u7528\u9ed8\u8ba4\u521d\u59cb\u5316 (\u82e5\u6ca1\u6709, \u5219\u5fc5\u987b\u7ed9\u503c)</li> <li>\u7a7a vector \u52a8\u6001\u6dfb\u52a0\u5143\u7d20, <code>v.push_back(a)</code>, \u975e\u5e38\u5feb, \u6ca1\u5fc5\u8981\u9884\u7559\u7a7a\u95f4</li> <li>for \u8303\u56f4\u5faa\u73af\u4f53\u5185\u4e0d\u5e94\u6539\u53d8 range \u7684\u5927\u5c0f</li> <li>\u6ce8\u610f, \u6807\u51c6\u5e93\u6a21\u677f\u7c7b\u7684\u4f34\u751f\u7c7b\u578b, \u4e5f\u662f\u6a21\u677f, <code>vector&lt;int&gt;::size_type</code></li> <li>\u4e0b\u6807\u64cd\u4f5c\u5fc5\u987b\u5728\u5408\u6cd5\u8303\u56f4\u5185, \u5426\u5219\u4f1a\u4ea7\u751f\u672a\u5b9a\u4e49\u884c\u4e3a (\u5c3d\u53ef\u80fd\u4f7f\u7528\u8303\u56f4 for)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_14","title":"\u8fed\u4ee3\u5668\u4ecb\u7ecd","text":"<ul> <li>\u6240\u6709\u6807\u51c6\u5e93\u5bb9\u5668\u90fd\u6709\u8fed\u4ee3\u5668, \u4f46\u53ea\u6709\u5c11\u6570\u5bb9\u5668\u652f\u6301\u4e0b\u6807\u64cd\u4f5c</li> <li>begin \u548c end \u8fd4\u56de\u8fed\u4ee3\u5668, end \u6307\u5411\u5c3e\u5143\u7d20\u7684\u4e0b\u4e00\u4f4d\u7f6e, \u5f53\u7a7a\u65f6 begin==end</li> <li>\u8fed\u4ee3\u5668\u652f\u6301 <code>*</code> \u548c <code>-&gt;</code> \u4ee5\u53ca\u589e / \u51cf /==/!= \u64cd\u4f5c, \u56e0\u6b64 for \u5faa\u73af\u5224\u65ad\u6761\u4ef6\u662f <code>it!=vec.end()</code></li> <li>\u8fed\u4ee3\u5668\u7684\u7c7b\u578b\u6709\u4e24\u79cd, \u53ef\u4fee\u6539\u5143\u7d20\u4ee5\u53ca\u4e0d\u53ef\u4fee\u6539\u5143\u7d20, \u5982 <code>vector&lt;int&gt;::iterator</code> \u548c <code>vector&lt;int&gt;::const_iterator</code></li> <li>begin \u548c end \u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u7c7b\u578b\u7531\u5bb9\u5668\u662f\u5426\u662f const \u51b3\u5b9a, cbegin \u548c cend \u5f3a\u5236\u8fd4\u56de\u7684\u662f <code>const_iterator</code></li> <li>\u4efb\u4f55\u53ef\u80fd\u6539\u53d8 vector \u5bf9\u8c61\u5bb9\u91cf\u7684\u64cd\u4f5c\u90fd\u4f1a\u4f7f\u8fed\u4ee3\u5668\u5931\u6548</li> <li>\u8fed\u4ee3\u5668\u7684\u8ddd\u79bb\u7684\u7c7b\u578b\u662f <code>difference_type</code>, \u662f\u5e26\u7b26\u53f7\u7684</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_15","title":"\u6570\u7ec4","text":"<ul> <li>\u6570\u7ec4\u7ef4\u5ea6\u5fc5\u987b\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f, \u4e14\u7c7b\u578b\u4e0d\u80fd\u7528 auto</li> <li>\u6570\u7ec4\u7684\u5143\u7d20\u5fc5\u987b\u662f\u5bf9\u8c61, \u6545\u4e0d\u53ef\u662f\u5f15\u7528</li> <li>\u6570\u7ec4\u4e0b\u6807\u901a\u5e38\u58f0\u660e\u4e3a <code>size_t</code> \u7c7b\u578b, cstddef \u4e2d\u5b9a\u4e49\u4e86 <code>size_t</code> \u7c7b\u578b, \u662f\u65e0\u7b26\u53f7\u4e0e\u673a\u5668\u76f8\u5173\u7684\u7c7b\u578b</li> <li>\u6570\u7ec4\u4e0e\u6307\u9488\u7684\u5173\u7cfb\u57fa\u672c\u4e0e C \u4e00\u81f4, auto \u63a8\u5bfc\u4e3a\u6307\u9488, \u4f46 decltype \u63a8\u5bfc\u4e3a\u6570\u7ec4</li> <li>begin \u548c end \u51fd\u6570\u53ef\u4ee5\u8fd4\u56de\u6570\u7ec4\u9996 / \u5c3e\u540e\u6307\u9488 (\u5229\u7528\u6a21\u677f\u4e0e\u7c7b\u578b\u63a8\u5bfc)</li> <li>\u6307\u9488\u7684\u8ddd\u79bb\u662f <code>ptrdif_t</code> \u7c7b\u578b, \u673a\u5668\u76f8\u5173\u7684\u6709\u7b26\u53f7\u7c7b\u578b</li> <li>\u540c\u4e00\u5bb9\u5668\u5bf9\u8c61\u5185\u7684\u8fed\u4ee3\u5668\u6bd4\u8f83\u5927\u5c0f / \u8fd0\u7b97\u624d\u662f\u6709\u610f\u4e49\u7684</li> <li>\u6570\u7ec4\u4e0b\u6807\u8fd0\u7b97\u7684\u7d22\u5f15\u53ef\u4ee5\u662f\u6709\u7b26\u53f7\u7684</li> <li>string \u6709\u4e00\u4e2a <code>c_str</code> \u6210\u5458\u51fd\u6570, \u8fd4\u56de\u6307\u5411 c \u98ce\u683c\u5b57\u7b26\u4e32\u7684\u6307\u9488 (\u5f53 string \u5bf9\u8c61\u53d1\u751f\u6539\u53d8\u65f6, \u6307\u9488\u53ef\u80fd\u4f1a\u5931\u6548, \u60f3\u7528\u65f6\u6700\u597d\u62f7\u8d1d\u4e00\u4efd)</li> <li>vector \u53ef\u4ee5\u7528\u6570\u7ec4\u521d\u59cb\u5316, <code>vector&lt;int&gt; v(begin(arr), end(arr));</code></li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_16","title":"\u591a\u7ef4\u6570\u7ec4","text":"<ul> <li>\u4e8c\u7ef4\u6570\u7ec4\u7528\u8303\u56f4 for, \u5916\u5c42\u5fc5\u987b\u662f\u5f15\u7528 (\u907f\u514d\u9000\u5316\u4e3a\u6307\u9488)</li> <li>\u7528 typedef \u7b80\u5316\u591a\u7ef4\u6570\u7ec4\u7684\u7c7b\u578b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_17","title":"\u8868\u8fbe\u5f0f","text":"<ul> <li>\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\u65e0\u6cd5\u6539\u53d8\u4f18\u5148\u7ea7\u548c\u7ed3\u5408\u5f8b, \u64cd\u4f5c\u6570\u4e2a\u6570, \u6c42\u503c\u987a\u5e8f</li> <li>\u5de6\u503c\u4e0e\u53f3\u503c, \u57fa\u672c\u4e0e C \u4e00\u81f4, \u4f46\u4e5f\u6709\u8bb8\u591a\u533a\u522b, \u5982 decltype \u7b49</li> <li>\u6c42\u503c\u987a\u5e8f\u662f\u4e0d\u786e\u5b9a\u7684, \u4e0d\u8981\u5728\u8868\u8fbe\u5f0f\u4f7f\u7528\u526f\u4f5c\u7528 (\u4fee\u6539\u5bf9\u8c61) \u540c\u65f6\u518d\u6b21\u4f7f\u7528\u8be5\u5bf9\u8c61, \u53ea\u6709 <code>&amp;&amp; || ?: ,</code> \u7684\u6c42\u503c\u987a\u5e8f\u662f\u5b9a\u4e49\u7684</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_18","title":"\u7b97\u672f\u8fd0\u7b97\u7b26","text":"<ul> <li>\u6240\u6709\u8fd0\u7b97\u5bf9\u8c61\u4f1a\u88ab\u8f6c\u6362\u4e3a\u540c\u4e00\u7c7b\u578b</li> <li>C++11 \u89c4\u5b9a, \u9664\u6cd5\u8fd0\u7b97\u4e00\u5f8b\u8d8b\u96f6\u622a\u65ad</li> <li>\u540c\u65f6 m%n \u7684\u7b26\u53f7\u4e0e m \u4e00\u81f4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_19","title":"\u903b\u8f91\u4e0e\u5173\u7cfb\u8fd0\u7b97\u7b26","text":"<ul> <li>\u4e0d\u8981 <code>if(a==true)</code>(\u63d0\u5347) \u7c7b\u578b\u8f6c\u6362\u5bfc\u81f4\u9519\u8bef</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_20","title":"\u8d4b\u503c\u8fd0\u7b97\u7b26","text":"<ul> <li>\u5217\u8868\u521d\u59cb\u5316\u65f6, \u82b1\u62ec\u53f7\u5185\u53ef\u4ee5\u4e3a\u7a7a, \u81ea\u52a8\u6784\u9020\u503c\u521d\u59cb\u5316 (\u5185\u7f6e\u7c7b\u578b\u4e3a 0, \u7c7b\u7c7b\u578b\u4e3a\u9ed8\u8ba4\u521d\u59cb\u5316)</li> <li>\u5217\u8868\u521d\u59cb\u5316\u5339\u914d\u4e0d\u5230\u6784\u9020\u51fd\u6570\u65f6, \u4f1a\u5c3d\u529b\u6267\u884c\u7c7b\u4f3c C \u521d\u59cb\u5316\u5668\u7684\u884c\u4e3a</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_21","title":"\u9012\u589e\u4e0e\u9012\u51cf\u8fd0\u7b97\u7b26","text":"<ul> <li>\u524d\u7f6e\u7248\u672c\u8fd4\u56de\u5bf9\u8c61 (\u5de6\u503c), \u540e\u7f6e\u7248\u672c\u8fd4\u56de\u5bf9\u8c61\u539f\u59cb\u503c\u7684\u526f\u672c (\u53f3\u503c)</li> <li>\u6240\u4ee5\u591a\u7528\u524d\u7f6e\u7248\u672c</li> <li><code>*p++</code> \u662f\u4e2a\u597d\u4e60\u60ef</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_22","title":"\u6210\u5458\u8bbf\u95ee\u8fd0\u7b97\u7b26","text":"<ul> <li><code>-&gt;</code> \u8fd4\u56de\u7684\u662f\u5de6\u503c, \u800c<code>.</code> \u8fd4\u56de\u4e0e\u5bf9\u8c61\u672c\u8eab\u4e00\u81f4 (\u5de6\u503c / \u53f3\u503c)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_23","title":"\u6761\u4ef6\u8fd0\u7b97\u7b26","text":"<ul> <li>\u6ce8\u610f\u5176\u4f18\u5148\u7ea7\u5f88\u4f4e</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_24","title":"\u4f4d\u8fd0\u7b97\u7b26","text":"<ul> <li>\u4f4d\u8fd0\u7b97\u7b26\u7684\u77ed\u6574\u578b\u8fd0\u7b97\u5bf9\u8c61\u4f1a\u88ab\u63d0\u5347\u4e3a int, \u4f4d\u8fd0\u7b97\u7b26\u53f7\u4f4d\u662f\u672a\u5b9a\u4e49\u7684 (\u6700\u597d\u53ea\u7528\u5728\u65e0\u7b26\u53f7\u7c7b\u578b\u4e0a)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#sizeof","title":"sizeof \u8fd0\u7b97\u7b26","text":"<ul> <li><code>sizeof obj.name</code> \u5728 C++11 \u4e2d\u53ef\u4ee5\u7528 <code>sizeof class::name</code> \u4ee3\u66ff</li> <li>\u6ce8\u610f sizeof \u4e00\u4e2a\u8868\u8fbe\u5f0f\u5e76\u4e0d\u4f1a\u8ba1\u7b97\u8868\u8fbe\u5f0f\u7684\u503c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_25","title":"\u9017\u53f7\u8fd0\u7b97\u7b26","text":"<ul> <li>\u4e0e C \u4e00\u81f4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_26","title":"\u7c7b\u578b\u8f6c\u6362","text":"<ul> <li>\u4e24\u7c7b\u578b\u53ef\u4ee5\u4e92\u76f8\u8f6c\u6362, \u5373\u5173\u8054</li> <li>\u5927\u591a\u60c5\u51b5, \u77ed\u6574\u578b\u8fd0\u7b97\u5bf9\u8c61\u4f1a\u88ab\u63d0\u5347\u4e3a int (\u5305\u62ec\u5927 char)</li> <li>\u6761\u4ef6\u4e2d\u975e bool \u7c7b\u578b\u7684\u8fd0\u7b97\u5bf9\u8c61\u4f1a\u88ab\u8f6c\u6362\u4e3a bool \u7c7b\u578b</li> <li>\u521d\u59cb\u5316\u4e0e\u8d4b\u503c\u4e2d, \u521d\u59cb\u503c / \u53f3\u503c\u4f1a\u88ab\u8f6c\u6362\u4e3a\u53d8\u91cf\u7684\u7c7b\u578b</li> <li>\u7b97\u672f\u8fd0\u7b97 (\u6309\u6700\u5927\u7684, \u56e0\u4e3a\u8865\u7801\u7684\u539f\u56e0, \u65e0\u9700\u8003\u8651\u8d1f\u6570) \u4e0e\u5173\u7cfb\u8fd0\u7b97\u4e2d, \u8fd0\u7b97\u5bf9\u8c61\u4f1a\u88ab\u8f6c\u6362\u4e3a\u540c\u7c7b\u578b</li> <li>\u51fd\u6570\u8c03\u7528\u4e2d, \u53c2\u6570\u4f1a\u88ab\u8f6c\u6362</li> <li>\u6570\u7ec4\u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3a\u9996\u5143\u7d20\u7684\u6307\u9488 (\u4f46\u6709\u8bb8\u591a\u4f8b\u5916, \u5982\u53d6\u6570\u7ec4\u7684\u5f15\u7528)</li> <li>0/nullptr \u53ef\u88ab\u8f6c\u6362\u4e3a\u4efb\u610f\u6307\u9488\u7c7b\u578b, \u4efb\u610f\u6307\u9488\u7c7b\u578b\u53ef\u88ab\u8f6c\u6362\u4e3a (const) void*</li> <li>\u975e\u5e38\u91cf\u53ef\u88ab\u8f6c\u6362\u4e3a\u5e38\u91cf, \u4f46\u53cd\u8fc7\u6765\u4e0d\u884c (\u5e95\u5c42 const \u540c\u7406)</li> </ul> <pre><code>// \u663e\u793a\u8f6c\u6362\ncast-name&lt;type&gt;(expression); // \u82e5 type \u662f\u5f15\u7528, \u5219\u7ed3\u679c\u662f\u5de6\u503c\n\nstatic_cast&lt;type&gt;(expression); // \u53ea\u8981\u4e0d\u5305\u542b\u5e95\u5c42 const \u5373\u53ef\n\nconst_cast&lt;type&gt;(expression); // \u53ea\u80fd\u6539\u53d8\u8fd0\u7b97\u5bf9\u8c61\u7684\u5e95\u5c42 const\n\nreinterpret_cast&lt;type&gt;(expression); // \u901a\u5e38\u4e3a\u8fd0\u7b97\u5bf9\u8c61\u7684\u4f4d\u6a21\u5f0f\u63d0\u4f9b\u8f83\u4f4e\u5c42\u6b21\u4e0a\u7684\u91cd\u65b0\u89e3\u91ca\n// \u5982\u5c06 int*\u8f6c\u6362\u4e3a char*\n\n// \u5173\u4e8e\u7c7b\u7684\u6309\u4e0b\u4e0d\u8868\n// \u65e7\u7684 c \u98ce\u683c\u8f6c\u6362\u4f9d\u65e7\u53ef\u4ee5\u7528, \u4f46\u8bed\u4e49\u4e0d\u660e\u786e\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_27","title":"\u8bed\u53e5","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_28","title":"\u7b80\u5355\u8bed\u53e5","text":"<ul> <li>\u7a7a\u8bed\u53e5<code>;</code> \u8bb0\u7684\u5199\u6ce8\u91ca</li> <li>\u8868\u8fbe\u5f0f\u8bed\u53e5 (\u6ca1\u526f\u4f5c\u7528\u7684\u8bdd\u6ca1\u610f\u4e49)</li> <li>\u590d\u5408\u8bed\u53e5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_29","title":"\u8bed\u53e5\u4f5c\u7528\u57df","text":"<ul> <li>\u4e00\u4e9b\u8bed\u53e5\u5b9a\u4e49\u7684\u53d8\u91cf\u53ea\u5728\u8bed\u53e5\u5185\u4f5c\u7528</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_30","title":"\u6761\u4ef6\u8bed\u53e5","text":"<ul> <li>switch \u8bed\u53e5\u5185\u90e8\u5b9a\u4e49\u4e00\u4e2a\u88ab\u521d\u59cb\u5316 (\u663e\u793a / \u9690\u5f0f) \u53d8\u91cf, \u5728\u5176\u4f5c\u7528\u57df\u5185, \u4e0d\u53ef\u88ab\u4f7f\u7528</li> <li>\u53cd\u4e4b, \u4e0d\u521d\u59cb\u5316\u53ef\u4ee5, \u6216\u8005\u7528\u5757\u5206\u79bb</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_31","title":"\u8fed\u4ee3\u8bed\u53e5","text":"<ul> <li>\u8303\u56f4 for \u8bed\u53e5\u8981\u6c42 range \u7c7b\u6709 begin \u548c end \u65b9\u6cd5\u8fd4\u56de\u8fed\u4ee3\u5668</li> <li><code>for(declaration:expression) statement</code>==<code>for(begin=d.begin(), end=d.end();begin!=end;begin++) statement</code></li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_32","title":"\u8df3\u8f6c\u8bed\u53e5","text":"<ul> <li>\u4e0e switch \u8bed\u53e5\u7c7b\u4f3c, goto \u4e0d\u53ef\u540c\u4f5c\u7528\u57df\u8df3\u8fc7\u53d8\u91cf\u5b9a\u4e49</li> <li>\u5176\u5b83\u4e0e C \u4e00\u81f4, \u5305\u62ec\u6807\u7b7e\u7684\u51fd\u6570\u4f5c\u7528\u57df</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#try","title":"try \u8bed\u53e5\u5757\u548c\u5f02\u5e38\u5904\u7406","text":"<ul> <li>throw \u8868\u8fbe\u5f0f\u5f15\u53d1\u5f02\u5e38</li> <li>try catch \u5904\u7406\u5f02\u5e38</li> <li>\u5f02\u5e38\u7c7b\u4f20\u9012\u4fe1\u606f</li> <li>\u5f02\u5e38\u7c7b\u90fd\u6709\u4e00\u4e2a what \u6210\u5458\u51fd\u6570, \u8fd4\u56de const char*</li> <li>\u5d4c\u5957\u7684 try \u5757\u4e2d, \u5f02\u5e38\u5982\u679c\u6ca1\u6709\u5bf9\u5e94 catch \u5219\u4f1a\u7ee7\u7eed\u5411\u5916\u5c42 try \u5757\u67e5\u627e, \u5168\u6ca1\u6709\u5219\u8f6c\u5230 terminate \u51fd\u6570 (\u7ec8\u6b62\u7a0b\u5e8f)</li> <li>throw \u540e\u7684\u8bed\u53e5\u4e0d\u4f1a\u88ab\u6267\u884c, \u56e0\u6b64\u8981\u8003\u8651\u4fdd\u8bc1\u5f02\u5e38\u5b89\u5168 (\u5982\u91ca\u653e\u8d44\u6e90)</li> </ul> <pre><code>try {\n    // \u7a0b\u5e8f\u4ee3\u7801\n    if(err){\n        throw errClass(info); // \u629b\u51fa\u533f\u540d\u5f02\u5e38\u5bf9\u8c61\n    }\n} catch (errClass e1) {\n    // \u5904\u7406 e1 \u7684\u4ee3\u7801\n} catch (errClass e2) {\n    // \u5904\u7406 e2 \u7684\u4ee3\u7801\n} catch (errClass e3) {\n    // \u5904\u7406 e3 \u7684\u4ee3\u7801\n\n// exception \u5934\u6587\u4ef6\nthrow exception(); // \u65e0\u4fe1\u606f\n\n// stdexcept \u5934\u6587\u4ef6\nthrow runtime_error(\"info\"); // \u53ea\u6709\u8fd0\u884c\u65f6\u624d\u80fd\u68c0\u67e5\u7684\u9519\u8bef\nthrow logic_error(\"info\"); // \u7a0b\u5e8f\u903b\u8f91\u9519\u8bef\nthrow domain_error(\"info\"); // \u53c2\u6570\u5bf9\u5e94\u7684\u7ed3\u679c\u503c\u4e0d\u5b58\u5728\nthrow invalid_argument(\"info\"); // \u65e0\u6548\u53c2\u6570\nthrow length_error(\"info\"); // \u8bd5\u56fe\u521b\u5efa\u4e00\u4e2a\u8d85\u51fa\u8be5\u7c7b\u578b\u6700\u5927\u957f\u5ea6\u7684\u5bf9\u8c61\nthrow out_of_range(\"info\"); // \u4f7f\u7528\u4e00\u4e2a\u8d85\u51fa\u6709\u6548\u8303\u56f4\u7684\u503c\nthrow range_error(\"info\"); // \u7ed3\u679c\u8d85\u51fa\u5408\u7406\u8303\u56f4\nthrow overflow_error(\"info\"); // \u7b97\u672f\u8fd0\u7b97\u4e0a\u6ea2\nthrow underflow_error(\"info\"); // \u7b97\u672f\u8fd0\u7b97\u4e0b\u6ea2\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_33","title":"\u51fd\u6570","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_34","title":"\u51fd\u6570\u57fa\u7840","text":"<ul> <li>\u5b9e\u53c2\u7684\u6c42\u503c\u987a\u5e8f\u672a\u5b9a\u4e49</li> <li>\u5f62\u53c2\u53ef\u4ee5\u533f\u540d, \u4f46\u8fd9\u610f\u5473\u5b83\u65e0\u6cd5\u88ab\u4f7f\u7528</li> <li>\u5757\u7684\u81ea\u52a8\u751f\u547d\u5468\u671f</li> <li>\u81ea\u52a8\u5bf9\u8c61\u4f1a\u9ed8\u8ba4\u521d\u59cb\u5316</li> <li>\u5168\u5c40\u5bf9\u8c61\u4f1a\u503c\u521d\u59cb\u5316 (\u5305\u62ec\u6210\u5458)</li> <li>C++ \u652f\u6301\u5206\u79bb\u5f0f\u7f16\u8bd1</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_35","title":"\u53c2\u6570\u4f20\u9012","text":"<ul> <li>\u672c\u8d28\u662f\u5b9e\u53c2\u521d\u59cb\u5316\u5f62\u53c2, \u503c\u4f20\u9012, \u5f15\u7528\u4f20\u9012</li> <li>\u5c3d\u53ef\u80fd\u4f7f\u7528\u5e38\u91cf\u5f15\u7528, \u53ef\u4ee5\u4e0d\u62f7\u8d1d, \u4e0d\u4fee\u6539, \u4f20\u9012\u5e38\u91cf\u5b9e\u53c2</li> <li>\u5f15\u7528\u53c2\u6570\u53ef\u4ee5\u5f53\u8fd4\u56de\u503c\u7528</li> <li>\u5bf9\u4e8e\u4f20\u9012\u6570\u7ec4\u9000\u5316\u4e3a\u6307\u9488, \u53ef\u4ee5\u5224\u65ad '\\0'(\u4ec5 char), \u4f20\u9012\u9996\u5c3e\u6307\u9488, \u4f20\u9012 size</li> <li>\u5f62\u53c2\u4e3a\u6570\u7ec4\u7684\u5f15\u7528\u662f\u53ef\u9009\u9879, \u4f46\u4f1a\u56fa\u5b9a\u6570\u7ec4\u5927\u5c0f (\u7b49\u7740\u5b66\u6a21\u7248)</li> <li>\u82e5\u53c2\u6570\u7684\u7c7b\u578b\u4e00\u81f4, \u53ef\u4ee5\u4f20\u9012 <code>initializer_list</code> \u7c7b\u578b\u5b9e\u73b0\u53ef\u53d8\u53c2\u6570\u5217\u8868 (\u6a21\u7248\u4ea6\u53ef)</li> <li><code>initializer_list</code> \u7c7b\u578b\u7684\u5217\u8868\u5143\u7d20\u662f const \u7684, \u5e76\u4e14\u62f7\u8d1d\u6784\u9020\u662f\u6d45\u62f7\u8d1d, \u6709 begin, end</li> <li>\u62e5\u6709\u8fd9\u4e9b\u7279\u6027\u7684\u76ee\u7684\u662f\u4f20\u9012 <code>{\"123\", 1, 1.0}</code> \u8fd9\u6837\u7684\u53c2\u6570, \u4f7f\u7528\u8303\u56f4 for</li> <li>C \u8bed\u8a00\u7684\u53ef\u53d8\u53c2\u6570\u5217\u8868\u53ef\u7528 (\u4fbf\u4e8e C++ \u8bbf\u95ee C \u4ee3\u7801), \u4f46\u4ec5\u53ef\u7528 C++/C \u5171\u540c\u7c7b\u578b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#return","title":"\u8fd4\u56de\u7c7b\u578b\u4e0e return \u8bed\u53e5","text":"<ul> <li>void \u8fd4\u56de\u503c\u51fd\u6570\u53ef\u4ee5\u9690\u5f0f return (int main \u4e5f\u884c)</li> <li>\u6216 <code>return;</code> \u4ea6\u53ef <code>return return_void_fun()</code></li> <li>C++ \u8981\u6c42\u51fd\u6570\u5fc5\u80fd return, return \u7684\u5bf9\u8c61\u53ef\u4ee5\u8f6c\u6362\u4e3a\u8fd4\u56de\u7c7b\u578b\u5373\u53ef</li> <li>\u8fd4\u56de\u503c\u521d\u59cb\u5316\u4e3b\u8c03\u51fd\u6570\u7684\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61 (\u8fd4\u56de\u5f15\u7528\u65e0\u9700, \u4f46\u4e0d\u5e94\u8fd4\u56de\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528 / \u6307\u9488)</li> <li>\u8fd4\u56de\u5f15\u7528\u7684\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u5de6\u503c</li> <li>\u53ef\u4ee5\u8fd4\u56de\u5217\u8868\u521d\u59cb\u5316, \u76f8\u5f53\u4e8e\u5217\u8868\u521d\u59cb\u5316\u8fd4\u56de\u7c7b\u578b\u7684\u4e34\u65f6\u53d8\u91cf</li> <li>main \u51fd\u6570\u53ef\u4ee5\u8fd4\u56de cstdlib \u5934\u6587\u4ef6\u4e2d\u7684 <code>EXIT_SUCCESS</code> \u4e0e <code>EXIT_FAILURE</code> \u5b8f</li> <li><code>type fun()==auto fun()-&gt;type</code></li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_36","title":"\u51fd\u6570\u91cd\u8f7d","text":"<ul> <li>\u5728\u540c\u4e00\u4f5c\u7528\u57df\u5185, \u51fd\u6570\u540d\u76f8\u540c\u4f46\u53c2\u6570\u5217\u8868\u4e0d\u540c</li> <li>\u6ce8\u610f\u9876\u5c42 const \u4e0e\u5426\u4f9d\u65e7\u5c5e\u4e8e\u540c\u4e00\u53c2\u6570, \u5e95\u5c42 const \u53cd\u4e4b</li> <li>\u4f7f\u7528\u5e38\u91cf\u5f15\u7528\u7684\u51fd\u6570\u53ef\u4ee5 <code>const_cast</code> \u8f6c\u6362, \u4f5c\u4e3a\u975e\u5e38\u91cf\u5f15\u7528\u51fd\u6570\u91cd\u8f7d\u7684\u8fd4\u56de\u503c</li> <li>\u51fd\u6570\u5339\u914d / \u91cd\u8f7d\u786e\u5b9a\u65f6\u53ef\u80fd\u53d1\u751f\u6700\u4f73\u5339\u914d, \u65e0\u5339\u914d\u9519\u8bef, \u4e8c\u4e49\u6027\u8c03\u7528\u9519\u8bef (\u591a\u4e2a\u53ef\u5339\u914d, \u4f46\u90fd\u4e0d\u5b8c\u7f8e)</li> <li>\u6ce8\u610f\u5c40\u90e8\u51fd\u6570\u58f0\u660e / \u53d8\u91cf\u5b9a\u4e49\u8986\u76d6 \u6240\u6709 \u540c\u540d\u5168\u5c40\u51fd\u6570 (C++ \u603b\u662f\u5148\u67e5\u627e\u540d\u5b57)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_37","title":"\u7279\u6b8a\u7528\u9014\u8bed\u8a00\u7279\u6027","text":"<ul> <li>\u9ed8\u8ba4\u5b9e\u53c2 (\u6ce8\u610f\u53c2\u6570\u6392\u5e03\u987a\u5e8f)</li> <li>\u9ed8\u8ba4\u5b9e\u53c2\u53ef\u4ee5\u5206\u5f00\u5199\u5728\u58f0\u660e / \u5b9a\u4e49\u4e2d (\u4f46\u662f\u4e0d\u53ef\u4ee5\u8986\u76d6)</li> <li>\u975e\u5c40\u90e8\u53d8\u91cf\u7684\u4efb\u610f\u8868\u8fbe\u5f0f\u53ef\u4ee5\u4f5c\u4e3a\u9ed8\u8ba4\u5b9e\u53c2</li> <li>\u5185\u8054\u51fd\u6570 (inline), \u6ce8\u610f\u8bb8\u591a\u7f16\u8bd1\u5668\u4e0d\u652f\u6301\u5185\u655b\u9012\u5f52, \u4e14\u7f16\u8bd1\u5668\u4e0d\u4e00\u5b9a\u54cd\u5e94 inline \u8bf7\u6c42</li> <li>constexpr \u51fd\u6570\u662f\u7279\u6b8a\u7684 inline (\u7f16\u8bd1\u671f\u6c42\u503c), \u6240\u6709\u53c2\u6570\u4e0e\u8fd4\u56de\u503c\u90fd\u662f\u5b57\u9762\u503c\u7c7b\u578b, \u51fd\u6570\u4f53\u4e2d\u6709\u4e14\u53ea\u6709\u4e00\u6761 return \u8bed\u53e5</li> <li>\u4f46\u662f, \u6211\u4eec\u53ef\u4ee5\u5728 constexpr \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u975e\u5e38\u91cf (\u6b64\u65f6\u663e\u7136\u4e0d\u53ef\u518d\u7528\u4e8e\u9700\u5e38\u91cf\u4f4d\u7f6e)</li> <li>inline \u51fd\u6570\u548c constexpr \u51fd\u6570\u5e94\u5b9a\u4e49\u5728\u5934\u6587\u4ef6\u4e2d</li> <li>cassert \u5934\u6587\u4ef6 assert \u5b8f, \u65ad\u8a00\u8868\u8fbe\u5f0f\u771f\u503c\u4e3a 1</li> <li>NDEBUG \u5b8f\u7528\u4e8e\u8981\u6c42\u4e0d\u8c03\u8bd5 (\u53ef\u7981\u6b62 assert), \u6211\u4eec\u53ef\u4ee5\u501f\u7528\u5b9a\u4e49\u81ea\u5df1\u7684 debug \u884c\u4e3a</li> </ul> <pre><code>// \u5b58\u653e\u540d\u5b57\u7684 const char \u6570\u7ec4\n__FILE__ // \u6587\u4ef6\u540d\n__LINE__ // \u884c\u53f7\n__TIME__ // \u7f16\u8bd1\u65f6\u95f4\n__DATE__ // \u7f16\u8bd1\u65e5\u671f\n__func__ // \u51fd\u6570\u540d\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_38","title":"\u51fd\u6570\u5339\u914d","text":"<ul> <li>\u9996\u5148\u786e\u5b9a\u5019\u9009\u51fd\u6570</li> <li>\u7136\u540e\u8fdb\u884c\u53ef\u884c\u51fd\u6570 (\u6570\u91cf\u591f, \u7c7b\u578b\u53ef\u8f6c\u6362), \u5426\u5219\u65e0\u5339\u914d\u9519\u8bef</li> <li>\u4e4b\u540e\u4f9d\u6b21\u68c0\u67e5\u53c2\u6570\u5339\u914d, \u5176\u4e2d\u6709\u6bcf\u4e2a\u53c2\u6570\u4e0d\u52a3\u4e8e\u5176\u4ed6\u53ef\u884c\u51fd\u6570\u4e14\u81f3\u5c11\u4e00\u4e2a\u597d\u4e8e\u5176\u4ed6\u53ef\u884c\u51fd\u6570\u7684\u552f\u4e00\u53ef\u884c\u51fd\u6570\u4e3a\u6700\u4f73\u5339\u914d, \u5426\u5219\u4e8c\u4e49\u6027\u9519\u8bef</li> </ul> <pre><code>// 1 \u7c7b\u578b\u76f8\u540c, \u6570\u7ec4\u8f6c\u6362\u6307\u9488\n// 1.5 \u9876\u5c42 const           // \u90fd\u662f\u7cbe\u786e\u5339\u914d\n// 2 \u5e95\u5c42 const \u8f6c\u6362 //\u53ea\u80fd\u7528\u4e8e\u975e const \u8f6c\u6362\u4e3a const\n// 3 \u7c7b\u578b\u63d0\u5347\n// 4 \u7b97\u672f\u7c7b\u578b\u8f6c\u6362(\u9664\u4e86\u63d0\u5347)\u4e0e\u6307\u9488\u8f6c\u6362(0/nullptr/void*)\n// 5 \u7c7b\u7c7b\u578b\u8f6c\u6362\n</code></pre> <ul> <li>\u6ce8\u610f\u63d0\u5347\u4f1a\u76f4\u63a5\u5230 int</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_39","title":"\u51fd\u6570\u6307\u9488","text":"<ul> <li>decltype (fun) \u5f97\u5230\u51fd\u6570\u7c7b\u578b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_40","title":"\u7c7b","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_41","title":"\u5b9a\u4e49\u62bd\u8c61\u6570\u636e\u7c7b\u578b","text":"<ul> <li>\u6210\u5458\u51fd\u6570\u5fc5\u987b\u5728\u7c7b\u5185\u58f0\u660e, \u4f46\u53ef\u4ee5\u5728\u7c7b\u5185\u5b9a\u4e49 (\u9690\u5f0f inline), \u4e5f\u53ef\u4ee5\u5728\u7c7b\u5916\u5b9a\u4e49</li> <li>this \u662f\u4e00\u4e2a\u9690\u5f0f\u7684 const \u6307\u9488, \u6307\u5411\u8c03\u7528\u8be5\u6210\u5458\u51fd\u6570\u7684\u5bf9\u8c61 (\u4e0d\u53ef\u81ea\u5b9a\u4e49 this)</li> <li>\u5c06 const \u653e\u5728\u53c2\u6570\u5217\u8868\u540e, \u58f0\u660e\u5e38\u91cf\u6210\u5458\u51fd\u6570, \u672c\u8d28\u4e0a\u662f\u58f0\u660e\u9690\u5f0f\u7684 this \u6307\u9488\u7684\u5e95\u5c42 const</li> <li>\u7f16\u8bd1\u5668\u5904\u7406\u7c7b\u4f1a\u5148\u7f16\u8bd1\u6210\u5458\u53d8\u91cf, \u518d\u7f16\u8bd1\u6210\u5458\u51fd\u6570 (\u65e0\u6240\u8c13\u987a\u5e8f, \u4e00\u5f8b\u53ef\u4ee5\u4f7f\u7528)</li> <li>\u7c7b\u5916\u5b9a\u4e49\u7684\u6210\u5458\u51fd\u6570\u9700\u8981\u52a0\u4e0a classname::</li> <li>this \u53ef\u4ee5\u8fd4\u56de, <code>*this</code> \u662f\u5f15\u7528</li> <li>\u628a\u975e\u6210\u5458\u51fd\u6570\u7684\u63a5\u53e3\u4e0e\u7c7b\u7f6e\u4e8e\u540c\u4e00\u5934\u6587\u4ef6\u4e2d</li> <li>\u6784\u9020\u51fd\u6570\u663e\u7136\u6ca1\u6709\u8fd4\u56de\u503c, \u4e14\u4e0d\u53ef\u4e3a const</li> <li>\u5408\u6210\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570, \u7c7b\u5185\u521d\u59cb\u503c + \u9ed8\u8ba4\u521d\u59cb\u5316, <code>classnsme()=default;</code> \u5373\u53ef</li> <li><code>classnsme(...):name(...), name2(...){}</code> \u521d\u59cb\u503c\u5217\u8868</li> <li>\u5408\u6210\u7684\u62f7\u8d1d, \u8d4b\u503c\u4e0e\u6790\u6784\u51fd\u6570\u4f1a\u5bf9\u6bcf\u4e2a\u6210\u5458\u8fdb\u884c\u62f7\u8d1d, \u8d4b\u503c\u4e0e\u9500\u6bc1</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_42","title":"\u8bbf\u95ee\u63a7\u5236\u4e0e\u5c01\u88c5","text":"<ul> <li>class \u7684\u9ed8\u8ba4\u8bbf\u95ee\u6743\u9650\u662f private, struct \u662f public, \u8fd9\u662f\u552f\u4e00\u533a\u522b</li> <li>\u7c7b\u5185\u53ef\u4ee5\u58f0\u660e\u53cb\u5143, \u4f7f\u5176\u8bbf\u95ee\u7c7b\u7684 private \u6210\u5458 (\u8fd9\u4e0d\u662f\u51fd\u6570\u58f0\u660e, \u51fd\u6570\u9700\u8981\u518d\u58f0\u660e)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_43","title":"\u7c7b\u7684\u5176\u5b83\u7279\u6027","text":"<ul> <li>\u7c7b\u5185\u53ef\u4ee5\u5b9a\u4e49\u7c7b\u578b\u522b\u540d</li> <li>\u7c7b\u5185\u53ef\u4ee5\u58f0\u660e mutatic \u6210\u5458, \u65e0\u8bba\u5bf9\u8c61 / \u51fd\u6570\u662f const, \u5b83\u90fd\u53ef\u88ab\u4fee\u6539</li> <li>\u663e\u7136 const \u51fd\u6570 return *this \u662f\u5e38\u91cf\u5f15\u7528</li> <li>\u7c7b\u53ef\u524d\u5411\u58f0\u660e, \u4e3a\u5b9a\u4e49\u524d\u662f\u4e0d\u5b8c\u5168\u7c7b\u578b, \u4ee5\u4f9b\u7c7b\u5185\u52a0\u5165\u81ea\u5df1\u6307\u9488\u7c7b\u578b\u7684\u6210\u5458\u7b49\u60c5\u51b5</li> <li>\u7c7b\u53ef\u4ee5\u58f0\u660e\u7c7b\u53cb\u5143, \u53cb\u5143\u51fd\u6570\u53ef\u4ee5\u58f0\u660e\u5728\u7c7b\u5185 (\u9690\u5f0f\u5185\u8054)</li> <li>\u6ce8\u610f, \u58f0\u660e\u53cb\u5143\u7684\u5176\u5b83\u7c7b\u7684\u6210\u5458\u51fd\u6570, \u5fc5\u987b\u5728\u7c7b\u5185\u524d\u5411\u58f0\u660e\u53cb\u5143\u51fd\u6570, \u58f0\u660e\u7c7b, \u58f0\u660e\u53cb\u5143, \u5b9a\u4e49\u51fd\u6570</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_44","title":"\u7c7b\u7684\u4f5c\u7528\u57df","text":"<ul> <li>\u5728\u7c7b\u5916\u5b9a\u4e49\u51fd\u6570, \u52a0\u4e0a\u7c7b\u540d:: \u540e, \u5176\u5b83\u53c2\u6570\u4e0d\u9700\u8981\u518d\u52a0, \u4f46\u8fd4\u56de\u7c7b\u578b\u5728\u5b83\u524d\u9762, \u9700\u8981\u52a0 (\u5982\u679c\u662f\u7c7b\u5185\u7c7b\u578b)</li> <li>\u5148\u5904\u7406\u6210\u5458\u53d8\u91cf\u7684\u58f0\u660e, \u540e\u51fd\u6570\u4f53</li> <li>\u7c7b\u5185\u7c7b\u578b\u540d\u5e94\u5728\u5f00\u59cb\u5904, \u5426\u5219\u53ef\u80fd\u4e0e\u5916\u754c\u7c7b\u578b\u540d\u51b2\u7a81</li> <li>\u6210\u5458\u53d8\u91cf\u4e0d\u6015\u51b2\u7a81, \u4e0e\u5176\u5b83\u4f4d\u7f6e\u7684\u89c4\u5219\u7c7b\u4f3c (\u5f53\u7136\u6211\u4eec\u4e0d\u5efa\u8bae)</li> <li><code>::name</code> \u4ee3\u8868\u5168\u5c40\u7684 (\u53cd\u906e\u853d)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_45","title":"\u6784\u9020\u51fd\u6570\u518d\u63a2","text":"<ul> <li>\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u6216\u8005\u8d4b\u503c, \u5f71\u54cd\u53d6\u51b3\u4e8e\u6210\u5458\u7684\u9ed8\u8ba4\u521d\u59cb\u5316</li> <li>const, \u5f15\u7528, \u65e0\u9ed8\u8ba4\u521d\u59cb\u5316\u7684\u6210\u5458\u5fc5\u987b\u901a\u8fc7\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u8fdb\u884c\u521d\u59cb\u5316</li> <li>\u82e5\u6784\u9020\u51fd\u6570\u7684\u6bcf\u4e2a\u5f62\u53c2\u90fd\u6709\u9ed8\u8ba4\u5b9e\u53c2, \u5219\u6784\u6210\u4e86\u9ed8\u8ba4\u6784\u9020\u51fd\u6570</li> <li>\u59d4\u6258\u6784\u9020\u51fd\u6570 <code>classname(...):classname(\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020){}</code></li> </ul> <pre><code>\u9ed8\u8ba4\u6784\u9020:\n\u5757\u4f5c\u7528\u57df\u5185\u5b9a\u4e49\u65e0\u521d\u59cb\u503c\u7684\u975e\u9759\u6001\u53d8\u91cf\n\u7c7b\u4f7f\u7528\u6784\u9020\u51fd\u6570\u65f6, \u6ca1\u521d\u59cb\u5316\u8be5\u6210\u5458, \u4f1a\u5bf9\u5176\u8fdb\u884c\u9ed8\u8ba4\u521d\u59cb\u5316\n\u6ce8\u610f\u9ed8\u8ba4\u6784\u9020\u7684\u5b9a\u4e49\u5e94\u4e3a\nclassname name;\n\u800c\u975e\nclassname name();// \u51fd\u6570\u58f0\u660e\n\n\u503c\u521d\u59cb\u5316:\n\u6570\u7ec4\u521d\u59cb\u5316\u65f6, \u63d0\u4f9b\u7684\u503c\u6bd4\u6210\u5458\u5c11, \u5219\u5269\u4f59\u6210\u5458\u8fdb\u884c\u503c\u521d\u59cb\u5316\n\u65e0\u521d\u59cb\u503c\u5c40\u90e8\u9759\u6001\u53d8\u91cf\nclassname name();\n</code></pre> <ul> <li>\u80fd\u4ec5\u4f7f\u7528\u4e00\u4e2a\u5b9e\u53c2\u7684\u6784\u9020\u51fd\u6570\u5b9a\u4e49\u4e86\u9690\u5f0f\u8f6c\u6362</li> <li>\u8fd9\u79cd\u8f6c\u6362\u53ea\u80fd\u9690\u5f0f\u8fdb\u884c\u4e00\u6b21 (\u4e0d\u53ef\u8fde\u7eed)</li> <li>\u4f7f\u7528 explicit \u5173\u952e\u5b57\u4fee\u9970\u51fd\u6570\u963b\u6b62\u9690\u5f0f\u8f6c\u6362, \u540c\u65f6\u4e5f\u963b\u6b62\u4e86\u62f7\u8d1d\u521d\u59cb\u5316 (\u4f7f\u7528 =)</li> <li>\u4f46\u53ef\u4ee5\u4f7f\u7528\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362</li> <li>\u805a\u5408\u7c7b\u5373\u4e3a\u6ca1\u6709\u6784\u9020\u51fd\u6570, \u6210\u5458\u90fd\u662f public, \u65e0\u7c7b\u5185\u521d\u59cb\u503c, \u65e0\u57fa\u7c7b, \u65e0\u865a\u51fd\u6570\u7684\u7c7b</li> <li>\u805a\u5408\u7c7b\u5927\u62b5\u53ea\u80fd {} \u521d\u59cb\u5316, \u5b83\u663e\u7136\u6709\u8bb8\u591a\u7684\u7f3a\u9677</li> <li>\u4f46\u805a\u5408\u7c7b\u662f\u5b57\u9762\u503c\u7c7b\u578b</li> <li>\u975e\u805a\u5408\u7c7b\u7684\u5b57\u9762\u503c\u5e38\u91cf\u7c7b\u5e94\u6ee1\u8db3, \u6709 constexpr \u6784\u9020\u51fd\u6570, \u6240\u6709\u6210\u5458\u4e3a\u5b57\u9762\u503c\u7c7b\u578b, \u82e5\u6709\u521d\u59cb\u503c\u5e94\u4e3a\u5b57\u9762\u503c\u5e38\u91cf /constexpr \u6784\u9020, \u5fc5\u987b\u4f7f\u7528\u6790\u6784\u51fd\u6570\u7684\u9ed8\u8ba4\u5b9a\u4e49</li> <li>constexpr \u6784\u9020\u51fd\u6570\u662f constexpr \u7684, \u6784\u9020\u51fd\u6570\u7684, \u663e\u7136\u5bf9\u6210\u5458\u9012\u5f52\u7684</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_46","title":"\u7c7b\u7684\u9759\u6001\u6210\u5458","text":"<ul> <li>\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u53ef\u4f7f\u7528 this, \u5b9a\u4e49\u4e0e\u5176\u5b83\u6210\u5458\u51fd\u6570\u4e00\u81f4 (\u7c7b\u5916\u5b9a\u4e49\u4e0d\u53ef\u6709 static)</li> <li><code>type classname::name = ...(\u53ef\u4ee5\u662f\u6210\u5458\u51fd\u6570)</code></li> <li>\u9759\u6001\u6210\u5458\u53d8\u91cf\u53ef\u4ee5\u6709\u7c7b\u5185\u521d\u59cb\u503c, \u4f46\u5fc5\u987b\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f\u4e14 type \u662f\u5b57\u9762\u503c\u7c7b\u578b (\u8fd8\u662f\u5f97\u5b9a\u4e49\u4e00\u4e0b)</li> <li>\u9759\u6001\u6210\u5458\u53ef\u4ee5\u4f5c\u9ed8\u8ba4\u5b9e\u53c2</li> <li>\u9759\u6001\u6210\u5458\u53ef\u4ee5\u662f\u4e0d\u5b8c\u5168\u7c7b\u578b (\u524d\u5411\u58f0\u660e)</li> <li>\u9759\u6001\u6210\u5458\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u5176\u7c7b\u7c7b\u578b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#c_2","title":"C++ \u6807\u51c6\u5e93","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#io","title":"IO \u5e93","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2BPrime/#_47","title":"C++Prime","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2B%E5%B7%A5%E5%85%B7/","title":"C++ \u5de5\u5177","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2B%E5%B7%A5%E5%85%B7/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>Make \u4e0e CMake - \u795e\u6559\u7a0b - 5</li> <li>\u8ddf\u6211\u4e00\u8d77\u5199 Makefile - \u7ffb\u8bd1\u7684\u6587\u6863 - 3</li> <li>\u83dc\u9e1f\u6559\u7a0b CMake - \u7cbe\u7b80\u5feb\u901f - 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2B%E5%B7%A5%E5%85%B7/#makefile","title":"makefile","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2B%E5%B7%A5%E5%85%B7/#_2","title":"\u6267\u884c\u6b65\u9aa4","text":"<ul> <li>\u8bfb\u5165\u88ab include \u7684\u5176\u5b83 Makefile</li> <li>\u521d\u59cb\u5316\u6587\u4ef6\u4e2d\u7684\u53d8\u91cf</li> <li>\u63a8\u5bfc\u9690\u5f0f\u89c4\u5219, \u5e76\u5206\u6790\u6240\u6709\u89c4\u5219</li> <li>\u4e3a\u6240\u6709\u7684\u76ee\u6807\u6587\u4ef6\u521b\u5efa\u4f9d\u8d56\u5173\u7cfb\u94fe<ul> <li><code>VPATH = dir:dir # \u6307\u5b9a\u6587\u4ef6\u641c\u5bfb\u76ee\u5f55</code></li> </ul> </li> <li>\u51b3\u5b9a\u54ea\u4e9b\u76ee\u6807\u8981\u91cd\u65b0\u751f\u6210</li> <li>\u6267\u884c\u751f\u6210\u547d\u4ee4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2B%E5%B7%A5%E5%85%B7/#_3","title":"\u4f7f\u7528","text":"<pre><code>make # \u987a\u5e8f\u5bfb\u627e\u6587\u4ef6\u540d\u4e3a GNUmakefile makefile \u548c Makefile \u7684\u6587\u4ef6, \u6784\u5efa\u5176\u4e2d\u7684\u7b2c\u4e00\u4e2a\u76ee\u6807\n\nmake obj # \u6307\u5b9a\u76ee\u6807\n\nmake -f name.mk # \u6307\u5b9a make \u6587\u4ef6\n\nmake -n # \u6253\u5370\u547d\u4ee4, \u4e0d\u6267\u884c\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2B%E5%B7%A5%E5%85%B7/#_4","title":"\u6ce8\u610f","text":"<ul> <li>\u5c0f\u5fc3\u73af\u5883\u53d8\u91cf <code>MAKEFILES</code></li> <li>make \u53ef\u4ee5\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u7684\u81ea\u52a8\u63a8\u5bfc</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2B%E5%B7%A5%E5%85%B7/#make","title":"make \u57fa\u7840\u8bed\u6cd5","text":"<ul> <li>\u6ce8\u610f\u4f9d\u8d56\u4e0e\u547d\u4ee4\u76f8\u540c\u7684\u76ee\u6807\u53ef\u4ee5\u5199\u5728\u4e00\u8d77</li> <li>make \u4f1a\u6253\u5370\u6267\u884c\u7684\u547d\u4ee4, <code>@command</code> \u963b\u6b62\u8fd9\u4e00\u884c\u4e3a</li> <li>\u5728\u547d\u4ee4\u524d\u9762\u52a0\u4e0a <code>-</code>, \u8868\u793a\u5ffd\u7565\u9519\u8bef</li> </ul> <pre><code>targets : prerequisites\n    command # \u6ce8\u610f\u8fd9\u4e2a tab \u5fc5\u987b\u5b58\u5728\n    ...\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2B%E5%B7%A5%E5%85%B7/#_5","title":"\u53d8\u91cf\u4e0e\u547d\u4ee4\u5305","text":"<pre><code>name= f1 f2\n\ndefine name\n\u547d\u4ee4\nendef\n</code></pre> <ul> <li>\u53d8\u91cf\u7528 $(name) \u5f15\u7528</li> <li>make \u53ef\u4ee5\u4f7f\u7528\u901a\u914d\u7b26</li> <li>\u9884\u8bbe\u53d8\u91cf<ul> <li><code>@</code> \u76ee\u6807\u6587\u4ef6</li> <li><code>&lt;</code> \u7b2c\u4e00\u4e2a\u4f9d\u8d56\u6587\u4ef6</li> <li><code>^</code> \u6240\u6709\u4f9d\u8d56\u6587\u4ef6</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2B%E5%B7%A5%E5%85%B7/#_6","title":"\u4f2a\u76ee\u6807","text":"<pre><code>.PHONY : clean\nclean :\n    -rm edit $(objects) # \u5b9e\u73b0 make clean\n</code></pre> <ul> <li>\u4f2a\u76ee\u6807\u4e5f\u53ef\u4ee5\u6709\u4f9d\u8d56, \u7c7b\u4f3c\u5b50\u547d\u4ee4</li> <li>\u7ecf\u5e38\u58f0\u660e\u4f2a\u76ee\u6807 <code>all</code> \u653e\u5728\u7b2c\u4e00\u4e2a\u76ee\u6807, \u56e0\u4e3a\u65e0\u53c2\u6570\u7684 <code>make</code> \u9ed8\u8ba4\u6784\u5efa\u7b2c\u4e00\u4e2a\u76ee\u6807</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/C%2B%2B%E5%B7%A5%E5%85%B7/#cmake","title":"Cmake","text":"<ul> <li><code>CMakeLists.txt</code></li> </ul> <pre><code># PROJECT_BINARY_DIR \u662f cmake \u7cfb\u7edf\u53d8\u91cf, \u610f\u601d\u662f\u6267\u884c cmake \u547d\u4ee4\u7684\u76ee\u5f55\n\ncmake_minimum_required (VERSION 2.8)\n# \u8981\u6c42 cmake \u7248\u672c\n\nproject (learn_cmake)\n# \u6307\u5b9a\u9879\u76ee\u540d\u79f0\n\ninclude_directories ( dir )\n# \u5c06 dir \u76ee\u5f55\u52a0\u5165\u5934\u6587\u4ef6\u641c\u7d22\u8def\u5f84\n\nadd_subdirectory ( dir )\n# \u9012\u5f52\u8c03\u7528 dir \u76ee\u5f55\u4e0b\u7684 CMakeLists.txt\n\naux_source_directory(dir var)\n# \u5c06 dir \u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u52a0\u5165 var\n\nset(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)\n# \u6307\u5b9a\u5e93\u751f\u6210\u5230 lib \u76ee\u5f55\nset(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)\n# \u6307\u5b9a\u53ef\u6267\u884c\u6587\u4ef6\u751f\u6210\u5230 bin \u76ee\u5f55\n\nadd_executable(hello ${var})\n# \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\nadd_library(lib_name STATIC/SHARED ${var})\n# \u751f\u6210\u5e93\u6587\u4ef6\n\nfind_library(var lib_name lib_path1 lib_path2)\n# \u67e5\u627e\u5e93, \u5e76\u628a\u5e93\u7684\u7edd\u5bf9\u8def\u5f84\u548c\u540d\u79f0\u5b58\u50a8\u5230\u7b2c\u4e00\u4e2a\u53c2\u6570\u91cc\n\ntarget_link_libraries ( hello lib1 lib2 )\n# \u5c06 lib1 lib2 \u52a0\u5165 target \u7684\u94fe\u63a5\u5e93\n\nadd_compile_options ( hello PRIVATE \"-Wall\" )\n# \u5c06\"-Wall\"\u52a0\u5165\u7f16\u8bd1\u9009\u9879\n</code></pre> <ul> <li>\u6267\u884c <code>cmake .</code> \u751f\u6210 Makefile</li> <li>\u6267\u884c <code>make</code> \u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/EffectiveC%2B%2B/","title":"EffectiveC++","text":"<ul> <li>Effective \u56db\u4ef6\u5957</li> <li>\u73b0\u4ee3 C++\u8bed\u8a00\u6838\u5fc3\u7279\u6027\u89e3\u6790</li> <li>\u6df1\u5ea6\u63a2\u7d22 C++\u5bf9\u8c61\u6a21\u578b</li> <li>STL \u6e90\u7801\u89e3\u6790</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/QT%E6%A1%86%E6%9E%B6/","title":"QT\u6846\u67b6","text":"<p>2</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/","title":"C++ \u7f16\u8bd1, \u94fe\u63a5, \u8fd0\u884c\u65f6","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u7a0b\u5e8f\u5458\u7684\u81ea\u6211\u4fee\u517b \u795e, \u56e0\u4e3a\u5168 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/#_2","title":"\u7b80\u4ecb","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/#_3","title":"\u6e29\u6545\u800c\u77e5\u65b0","text":"<ul> <li>Windows API \u6559\u79d1\u4e66\u5f0f\u7684\u6267\u884c\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b, \u4f46 Linux \u5219\u662f\u628a\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7edf\u4e00\u4e3a\u4efb\u52a1, \u591a\u4e2a\u4efb\u52a1\u53ef\u4ee5\u9009\u62e9\u5171\u4eab\u5185\u5b58\u7a7a\u95f4</li> <li>Linux \u6709\u4e09\u79cd\u65b9\u5f0f\u521b\u5efa\u4efb\u52a1, fork (\u590d\u5236\u5f53\u524d\u8fdb\u7a0b) clone (\u521b\u5efa\u5b50\u8fdb\u7a0b) exec (\u7528\u65b0\u6620\u50cf\u66ff\u6362\u5f53\u524d\u8fdb\u7a0b\u6620\u50cf)</li> </ul> <pre><code>pid_t pid = fork();\nif(pid == 0)\n{\n    exec(\"\u7a0b\u5e8f\u8def\u5f84\", \"\u53c2\u6570 1\", \"\u53c2\u6570 2\", ...);\n}\nelse if(pid &gt; 0)\n{\n    ....\n}\n//\u7701\u7565\u4e86\u5176\u4ed6\u4ee3\u7801, \u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u5b50\u8fdb\u7a0b\u521b\u5efa\n//\u6ce8\u610f fork() \u51fd\u6570\u4f1a\u8fd4\u56de\u4e24\u6b21\u4ee5\u533a\u5206\u7236\u8fdb\u7a0b\u4e0e\u5b50\u8fdb\u7a0b\n</code></pre> <ul> <li><code>fork()</code> \u975e\u5e38\u5feb, \u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u590d\u5236\u7236\u8fdb\u7a0b\u7684\u5185\u5b58\u7a7a\u95f4, \u800c\u662f\u5728\u4efb\u52a1\u8bd5\u56fe\u4fee\u6539\u5185\u5b58\u65f6, \u518d\u590d\u5236\u4e00\u4efd (\u5199\u65f6\u4fee\u6539)</li> <li><code>clone()</code> \u51fd\u6570\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4efb\u52a1, \u5e76\u6307\u5b9a\u5f00\u59cb\u6267\u884c\u7684\u4f4d\u7f6e, \u662f\u5426\u5171\u4eab\u5185\u5b58\u7a7a\u95f4, \u56e0\u6b64\u5b9e\u9645\u4ea7\u751f\u4e00\u4e2a\u7ebf\u7a0b</li> <li>\u8fc7\u5ea6\u4f18\u5316\u9020\u6210\u7ebf\u7a0b\u4e0d\u5b89\u5168, \u5982\u5bc4\u5b58\u5668\u4e0d\u5199\u56de, \u8c03\u6574\u65e0\u5173\u8bed\u53e5\u987a\u5e8f, C/C++<code>volatile</code> \u80fd\u963b\u6b62\u7f16\u8bd1\u5668\u4f18\u5316, \u4f46 CPU \u8fd8\u662f\u4f1a\u8c03\u6574\u8bed\u53e5\u987a\u5e8f</li> <li>\u8bb8\u591a CPU \u4f1a\u63d0\u4f9b\u4e00\u4e2a\u6307\u4ee4, \u7528\u6765\u963b\u6b62\u8be5\u6307\u4ee4\u4e4b\u524d\u7684\u8bed\u53e5\u548c\u4e4b\u540e\u7684\u8bed\u53e5\u987a\u5e8f\u4ea4\u6362</li> <li>Windows \u548c Linux \u90fd\u652f\u6301\u5185\u6838\u591a\u7ebf\u7a0b, \u4f46\u7528\u6237\u7ebf\u7a0b\u4e0d\u4e00\u5b9a\u4e0e\u5185\u6838\u7ebf\u7a0b\u4e00\u4e00\u5bf9\u5e94, \u5b58\u5728\u4e00\u5bf9\u4e00, \u591a\u5bf9\u4e00, \u591a\u5bf9\u591a\u7684\u5173\u7cfb, \u5176\u4e3b\u8981\u5dee\u522b\u5728\u4e8e\u6709\u65e0\u5bf9\u7ebf\u7a0b\u6570\u91cf\u7684\u9650\u5236, \u4e0e\u4e00\u4e2a\u7ebf\u7a0b\u4f1a\u4e0d\u4f1a\u5835\u585e\u591a\u4e2a\u7ebf\u7a0b\u4ee5\u53ca\u7ebf\u7a0b\u7684\u8c03\u5ea6\u65f6\u5207\u6362\u4e0a\u4e0b\u6587\u7684\u5f00\u9500</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/#_4","title":"\u9759\u6001\u94fe\u63a5","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/#_5","title":"\u7f16\u8bd1\u4e0e\u94fe\u63a5","text":"<ul> <li>\u7f16\u8bd1\u6709\u56db\u4e2a\u6b65\u9aa4, \u9884\u5904\u7406, \u7f16\u8bd1 (\u524d\u540e\u7aef), \u6c47\u7f16\u548c\u94fe\u63a5</li> <li>\u9884\u5904\u7406\u9664\u4e86\u6211\u4eec\u8001\u751f\u5e38\u8c08\u7684\u5c55\u5f00\u5b8f\u63d2\u5165\u6587\u4ef6\u5220\u9664\u6ce8\u91ca\u4e4b\u5916, \u8fd8\u8981\u6dfb\u52a0\u884c\u53f7\u548c\u6587\u4ef6\u540d\u6807\u8bc6, \u4ee5\u4f9b\u7f16\u8bd1\u5668\u4ea7\u751f\u9519\u8bef\u4fe1\u606f\u6216\u8005\u4e3a\u8c03\u8bd5\u5668\u63d0\u4f9b\u4fe1\u606f, \u5e76\u4e14\u4f1a\u4fdd\u7559\u7f16\u8f91\u5668\u6307\u4ee4<code>#pragma</code></li> <li>\u7f16\u8bd1\u7ecf\u8bcd\u6cd5\u5206\u6790, \u8bed\u6cd5\u5206\u6790, \u8bed\u4e49\u5206\u6790, \u4f18\u5316\u4ea7\u751f\u6c47\u7f16\u4ee3\u7801, <code>gcc</code> \u4e2d\u7531 <code>cc1</code> \u7a0b\u5e8f\u8d1f\u8d23\u8fd9\u4e24\u90e8\u5206, <code>as</code> \u8d1f\u8d23\u6c47\u7f16, <code>ld</code> \u8d1f\u8d23\u94fe\u63a5, <code>gcc</code> \u53ea\u662f\u5b83\u4eec\u7684\u5305\u88c5</li> <li>\u7f16\u8bd1\u8fc7\u7a0b, \u9996\u5148\u626b\u63cf\u5668\u7528\u4e00\u79cd\u7c7b\u4f3c\u6709\u9650\u72b6\u6001\u673a\u7684\u7b97\u6cd5, \u5c06\u4ee3\u7801\u7684\u5b57\u7b26\u5e8f\u5217\u5206\u5272\u6210\u4e00\u7cfb\u5217\u7684\u8bb0\u53f7 (Token), \u8bb0\u53f7\u5206\u4e3a\u5173\u952e\u5b57, \u6807\u8bc6\u7b26, \u5e38\u91cf, \u8fd0\u7b97\u7b26\u7b49, \u5176\u4e2d\u6807\u8bc6\u7b26\u4f1a\u5b58\u653e\u5230\u7b26\u53f7\u8868, \u5e38\u91cf\u5b58\u653e\u5230\u6587\u5b57\u8868, <code>lex</code> \u662f\u901a\u7528\u7684\u8bcd\u6cd5\u5206\u6790\u5668, \u53ef\u4ee5\u6309\u7167\u7528\u6237\u63cf\u8ff0\u7684\u89c4\u5219\u626b\u63cf</li> <li>\u968f\u540e\u7528\u4e0a\u4e0b\u6587\u65e0\u5173\u8bed\u6cd5\u7684\u624b\u6bb5\u8fdb\u884c\u590d\u6742\u8bed\u53e5\u7684\u8bed\u6cd5\u5206\u6790, \u5b83\u5bf9\u91cd\u7528\u7684\u7b26\u53f7\u52a0\u4ee5\u533a\u5206, \u5e76\u5efa\u7acb\u8bed\u6cd5\u6811, <code>yacc</code> \u662f\u901a\u7528\u7684\u8bed\u6cd5\u5206\u6790\u5668\u53ef\u4ee5\u6309\u7167\u7528\u6237\u6307\u5b9a\u7684\u8bed\u6cd5\u8fdb\u884c\u5206\u6790</li> <li>\u968f\u540e\u662f\u8bed\u4e49\u5206\u6790, \u8bed\u53e5\u5728\u8bed\u6cd5\u4e0a\u5408\u6cd5\u4e0d\u4ee3\u8868\u5728\u8bed\u4e49\u4e0a\u5408\u6cd5, \u4f8b\u5982\u6307\u9488\u8fdb\u884c\u4e58\u6cd5, \u58f0\u660e\u4e0e\u7c7b\u578b\u662f\u5426\u5339\u914d, \u5e76\u4e14\u5e2e\u52a9\u8fdb\u884c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362, \u6807\u8bc6\u53d8\u91cf\u5e38\u91cf\u51fd\u6570\u8fd0\u7b97\u7b26\u7684\u7c7b\u578b, \u4f46\u5b83\u53ea\u80fd\u68c0\u67e5\u9759\u6001\u8bed\u4e49, \u800c\u50cf\u9664\u96f6\u7b49\u52a8\u6001\u8bed\u4e49\u9519\u8bef\u65e0\u6cd5\u68c0\u67e5</li> <li>\u63a5\u4e0b\u6765\u662f\u4e2d\u95f4\u4ee3\u7801\u751f\u6210, \u751f\u6210\u8bf8\u5982\u4e09\u5730\u5740\u7801 (b \u4e0e c \u64cd\u4f5c, \u7ed3\u679c\u7f6e\u4e8e a), <code>p-code</code> \u7b49, \u5b83\u4eec\u4e0e\u5e73\u53f0\u65e0\u5173, \u4fbf\u4e8e\u4f18\u5316 (\u53ef\u4ee5\u88ab\u89e3\u91ca\u5668\u6267\u884c) \u968f\u540e\u57fa\u4e8e\u4e2d\u95f4\u4ee3\u7801\u4f18\u5316, \u4f8b\u5982\u7f16\u8bd1\u65f6\u53ef\u786e\u5b9a\u8bed\u53e5, \u8fd9\u5c31\u662f\u7f16\u8bd1\u5668\u7684\u524d\u7aef, \u4e0d\u4f9d\u8d56\u5e73\u53f0</li> <li>\u6700\u540e\u4ee3\u7801\u751f\u6210\u5668\u5c06\u4e2d\u95f4\u4ee3\u7801\u7f16\u8bd1\u4e3a\u76ee\u6807\u4ee3\u7801, \u968f\u540e\u518d\u7531\u76ee\u6807\u4ee3\u7801\u4f18\u5316\u5668\u4f18\u5316, \u8bf8\u5982\u4f4d\u79fb\u4ee3\u66ff\u4e58\u9664\u6cd5\u4ee5\u53ca\u6d89\u53ca\u5e73\u53f0\u7684\u8bf8\u591a\u4f18\u5316</li> <li>\u4f46\u6b64\u65f6\u53d8\u91cf\u7b49\u7684\u7edd\u5bf9\u5730\u5740\u4ee5\u53ca\u4f7f\u7528\u5176\u4ed6\u6a21\u5757\u53d8\u91cf\u7684\u95ee\u9898\u60ac\u800c\u672a\u89e3, \u8ba9 linker \u51fa\u624b, \u73b0\u4ee3\u8f6f\u4ef6\u5f00\u53d1\u79bb\u4e0d\u5f00\u6a21\u5757\u5316, \u800c\u8fde\u63a5\u6bcf\u4e2a\u6a21\u5757 (\u6a21\u5757\u95f4\u7b26\u53f7\u7684\u5f15\u7528) \u5c31\u662f\u94fe\u63a5</li> <li>\u94fe\u63a5\u8fc7\u7a0b\u4e3b\u8981\u5305\u62ec\u5730\u5740\u4e0e\u7a7a\u95f4\u5206\u914d, \u7b26\u53f7\u51b3\u8bae (\u5bf9\u5e94\u7b26\u53f7\u4e0e\u5730\u5740), \u91cd\u5b9a\u4f4d\u7b49, \u5c06\u76ee\u6807\u6587\u4ef6\u4e0e\u5e93 (\u4e00\u7ec4\u76ee\u6807\u6587\u4ef6) \u7b49\u94fe\u63a5, \u6700\u57fa\u672c\u7684\u5de5\u4f5c\u5c31\u662f\u7ed9\u8de8\u6a21\u5757\u7684\u53d8\u91cf\u4e0e\u51fd\u6570\u5f15\u7528\u6dfb\u4e0a\u5730\u5740 (\u4fee\u6b63\u91cd\u5b9a\u4f4d\u5165\u53e3)</li> <li>\u6700\u5e38\u7528\u7684\u5e93\u662f\u8fd0\u884c\u65f6\u5e93, \u652f\u6301\u7a0b\u5e8f\u8fd0\u884c\u7684\u57fa\u672c\u51fd\u6570\u96c6\u5408</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/C%2B%2B/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%87%AA%E6%88%91%E4%BF%AE%E5%85%BB/#_6","title":"\u76ee\u6807\u6587\u4ef6\u6709\u4ec0\u4e48","text":"<ul> <li>\u76ee\u6807\u6587\u4ef6\u672c\u8d28\u5c31\u662f\u672a\u7ecf\u94fe\u63a5\u7684\u53ef\u6267\u884c\u6587\u4ef6, \u4ec5\u5728\u7ed3\u6784\u4e0a\u7565\u6709\u4e0d\u540c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/AI%E5%B7%A5%E5%85%B7/","title":"\u4eba\u5de5\u667a\u80fd\u5de5\u5177","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/AI%E5%B7%A5%E5%85%B7/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u6280\u672f\u722c\u722c\u867e - \u597d - 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/AI%E5%B7%A5%E5%85%B7/#api","title":"API","text":"<ul> <li>\u7565</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/AI%E5%B7%A5%E5%85%B7/#trae","title":"Trae","text":"<ul> <li>\u7565</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/AI%E5%B7%A5%E5%85%B7/#cherry-studio","title":"Cherry Studio","text":"<ul> <li>\u7565</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/AI%E5%B7%A5%E5%85%B7/#claude-code","title":"Claude code","text":"<ul> <li>\u4f7f\u7528 Claude code router</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/AI%E5%B7%A5%E5%85%B7/#claude-code_1","title":"Claude code \u547d\u4ee4","text":"<ul> <li><code>/init</code> \u521d\u59cb\u5316\u9879\u76ee, \u6536\u96c6\u9879\u76ee\u4fe1\u606f</li> <li><code>/compact text</code> \u538b\u7f29\u4e0a\u4e0b\u6587, text \u4f5c\u4e3a\u6307\u5bfc</li> <li><code>/clear</code> \u6e05\u9664\u4e0a\u4e0b\u6587</li> <li><code>think / think hard / think harder / urtrathink text</code> \u63a7\u5236\u601d\u8003\u957f\u5ea6</li> <li><code>! command</code> \u6267\u884c\u7ec8\u7aef\u547d\u4ee4</li> <li><code># text</code> \u4f5c\u4e3a\u8bb0\u5fc6</li> <li><code>/ide</code> \u8054\u52a8 IDE</li> <li><code>ccr code -p text</code> \u95ee\u95ee\u9898</li> <li><code>claude mcp add name --scope user --command \u53c2\u6570</code> \u6dfb\u52a0 mcp</li> <li><code>.claude/command</code> \u6587\u4ef6\u5939\u4e2d\u7684 md \u6587\u4ef6\u4e3a\u81ea\u5b9a\u4e49\u547d\u4ee4</li> <li><code>/agent</code> \u521b\u5efa\u667a\u80fd\u4f53</li> <li><code>resume</code> \u5386\u53f2\u8bdd\u9898</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Emacs%E5%9F%BA%E7%A1%80/","title":"Emacs","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Emacs%E5%9F%BA%E7%A1%80/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>Emacs - \u77e5\u4e4e\u5927\u4f6c - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Emacs%E5%9F%BA%E7%A1%80/#_2","title":"\u5feb\u6377\u952e","text":"<p>\u914d\u7f6e\u5728\u73af\u5883\u914d\u7f6e\u4e2d</p> \u529f\u80fd\u952e \u7f29\u5199 \u5bf9\u5e94\u952e\u76d8\u6309\u952e (PC/Mac) Control C Ctrl / Control Meta M Alt/Option Shift S Shift Super s Win/Command <pre><code># \u5149\u6807\u79fb\u52a8\nC-x C-c \u9000\u51fa\nC-g \u7ec8\u6b62\u64cd\u4f5c\nC-z \u6302\u8d77\u56de\u5230\u547d\u4ee4\u884c fg \u56de\u6765\nC-p C-n C-b C-f \u4e0a\u4e0b\u5de6\u53f3\nM-b \u5de6\u79fb\u4e00\u4e2a\u8bcd M-f \u53f3\u79fb\u4e00\u4e2a\u8bcd\nC-a \u79fb\u81f3\u884c\u9996 C-e \u79fb\u81f3\u884c\u5c3e\nM-a \u79fb\u81f3\u53e5\u9996 M-e \u79fb\u81f3\u53e5\u5c3e \nM-&lt; \u79fb\u5230\u6587\u4ef6\u5f00\u5934 M-&gt; \u79fb\u5230\u6587\u4ef6\u672b\u5c3e\nM-r \u6309\u7b2c\u4e00\u6b21\u79fb\u5230\u7a97\u53e3\u4e2d\u95f4 \u7b2c\u4e8c\u6b21\u79fb\u5230\u7a97\u53e3\u6700\u4e0a\u9762 \u7b2c\u4e09\u6b21\u79fb\u5230\u7a97\u53e3\u6700\u4e0b\nC-v \u5411\u4e0b\u4e00\u9875 M-v \u5411\u4e0a\u4e00\u9875\n\u8df3\u884c M-g M-g \u884c\u53f7\n\n# \u79fb\u9664\n&lt;DEL&gt;\u6216&lt;backspace&gt;\u5220\u5de6\u4fa7\u5b57\u7b26 C-d \u5220\u53f3\u4fa7\u5b57\u7b26\nM-d \u79fb\u9664\u53f3\u4e00\u4e2a\u8bcd M-&lt;DEL&gt;\u79fb\u9664\u5de6\u4e00\u4e2a\u8bcd\n\u79fb\u9664\u53f3\u4fa7\u5230\u53e5\u5b50\u7ed3\u5c3e M-k\n\u79fb\u9664\u53f3\u4fa7\u5230\u884c\u7ed3\u5c3e C-k \n\n# \u590d\u5236\u7c98\u8d34\nC-SPC \u9009\u4e2d Emacs \u4e0b\u65b9\u663e\u793a \"Mark set\"\nM-w \u590d\u5236\u9009\u4e2d\u7684\u533a\u57df C-w \u526a\u5207\u9009\u4e2d\u7684\u533a\u57df\nC-y \u7c98\u8d34 \u52a0\u4e0a M-y \u7c98\u8d34\u5012\u6570\u7b2c n+1 \u6b21\u79fb\u9664\u7684\u5185\u5bb9\nC-x C-SPC \u6216 C-u C-SPC \u8df3\u8f6c\u56de maek\n\n# \u641c\u7d22\nC-s \u641c\u7d22 \u518d\u6309\u4e00\u6b21 C-s \u4e0b\u4e00\u4e2a \n\u56de\u8f66\u9000\u51fa \nC-g \u9000\u51fa\u5e76\u8fd4\u56de\n\n# \u6362\u683c\u5f0f\n\u4ea4\u6362\u5de6\u53f3\u5b57\u7b26 C-t \n\u4ea4\u6362\u8bcd M-t \n\u4ea4\u6362\u884c C-x C-t\n\u521b\u5efa\u65b0\u7a7a\u884c C-o \n\u524d\u540e\u6240\u6709\u8fde\u7eed\u7a7a\u884c\u53d8\u4e3a\u4e00\u4e2a\u7a7a\u884c C-x C-o\n\u540e\u4e00\u8bcd\u53d8\u4e3a\u5c0f\u5199 M-l \u53d8\u4e3a\u5927\u5199 M-u \u53d8\u4e3a\u9996\u5b57\u6bcd\u5927\u5199 M-c\n\n# \u6539\u5b57\u53f7\n\u5b57\u53f7\u653e\u5927 C-x C-= \n\u7f29\u5c0f C-x C--\n\u91cd\u7f6e\u5b57\u53f7 C-x C-0\n\n# \u5176\u4ed6\nC-u 12 meta-\u6570\u5b57 \u7ed9\u6307\u4ee4\u53c2\u6570\nC-/ C-_ C-x u \u64a4\u9500 C-g \u6062\u590d\n\n# \u6587\u4ef6\nC-x C-f \u6253\u5f00\u6587\u4ef6\nC-x b \u6362\u6587\u4ef6\nC-x C-b \u5217\u51fa\u5df2\u6253\u5f00\u6587\u4ef6 \nC-x o \u8f6c\u5230\u5217\u8868\n# \u5217\u8868\u4e2d\nq \u9000\u51fa\nd \u6807\u8bb0\u6253\u7b97\u5173\u95ed\ns \u6807\u8bb0\u6253\u7b97\u4fdd\u5b58\nu \u53d6\u6d88\u6807\u8bb0\nx \u6267\u884c\np \u548c n \u4e0a\u4e0b\n\n# \u591a\u7a97\u53e3\nC-x 2 \u4e0a\u4e0b\u5206\u5272\nC-x 3 \u5de6\u53f3\u5206\u5272\nC-x 0 \u5173\u95ed\nC-x 1 \u5173\u95ed\u5176\u5b83 (\u4ec5\u9488\u5bf9\u7a97\u53e3\u800c\u975e\u6587\u4ef6)\nC-x o \u5207\u6362\u5230\u4e0b\u4e00\u4e2a Window (\u5217\u8868\u4e5f\u662f win)\nC-x 4 f \u5728\u53e6\u4e00\u4e2a\u7a97\u53e3\u6253\u5f00\u65b0\u7684\u6587\u4ef6, \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u7a97\u53e3\u5c31\u5206\u5272\u6210\u4e24\u4e2a\nC-x 4 b \u5207\u6362\u6587\u4ef6\nC-x 4 d \u6253\u5f00\u76ee\u5f55\n\nC-M-v \u53e6\u4e00\u4e2a\u7a97\u53e3\u5411\u4e0b\u7ffb\u9875\nC-M-S-v \u5411\u4e0a\u7ffb\u9875\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Emacs%E5%9F%BA%E7%A1%80/#_3","title":"\u5982\u679c\u53c2\u8003\u4e0a\u9762\u6559\u7a0b\u7684\u914d\u7f6e","text":"<pre><code>\u4ea4\u6362 M-w \u548c C-w, M-w \u4e3a\u526a\u5207 C-w \u4e3a\u590d\u5236\n\u4ea4\u6362 C-a \u548c M-m, C-a \u4e3a\u5230\u7f29\u8fdb\u540e\u7684\u884c\u9996 M-m \u4e3a\u5230\u771f\u6b63\u7684\u884c\u9996\n\nM-n \u5149\u6807\u5411\u4e0b\u79fb\u52a8 10 \u884c\nM-p \u5149\u6807\u5411\u4e0a\u79fb\u52a8 10 \u884c\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/","title":"Git","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>Git book - \u6807\u51c6\u7684\u6587\u6863 - 4</li> <li>How to Write a Git Commit Message - \u6559\u4f60\u5199\u63d0\u4ea4\u4fe1\u606f - 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/#_2","title":"\u6982\u5ff5","text":"<ul> <li>Git \u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u7248\u672c\u7ba1\u7406\u5de5\u5177, \u5728\u4e2d\u592e\u670d\u52a1\u5668\u4fdd\u5b58\u6240\u6709\u6587\u4ef6\u4e0e\u5386\u53f2\u5feb\u7167\u7684\u540c\u65f6, \u6bcf\u6b21\u5efa\u7acb\u5206\u652f\u90fd\u514b\u9686\u6574\u4e2a\u4ed3\u5e93</li> <li>Git \u4e2d\u6240\u6709\u7684\u6570\u636e\u5728\u5b58\u50a8\u524d\u90fd\u8ba1\u7b97\u6821\u9a8c\u548c, Git \u6570\u636e\u5e93\u4e2d\u4fdd\u5b58\u7684\u4fe1\u606f\u90fd\u662f\u4ee5\u6587\u4ef6\u5185\u5bb9\u7684 SHA-1 \u54c8\u5e0c\u503c\u6765\u7d22\u5f15</li> <li>Git \u6709\u4e09\u79cd\u72b6\u6001 modified staged committed \u5bf9\u5e94\u5de5\u4f5c\u533a \u6682\u5b58\u533a (\u53ea\u662f\u7d22\u5f15) \u4ee5\u53ca Git \u76ee\u5f55</li> <li><code>~/.gitconfig</code> \u914d\u7f6e\u5ffd\u7565\u6587\u4ef6</li> <li><code>~/.config/git/config</code> \u914d\u7f6e\u6587\u4ef6</li> <li>\u5b89\u88c5\u5b8c Git \u4e4b\u540e, \u8981\u505a\u7684\u7b2c\u4e00\u4ef6\u4e8b\u5c31\u662f\u8bbe\u7f6e\u4f60\u7684\u7528\u6237\u540d\u548c\u90ae\u4ef6\u5730\u5740</li> </ul> <pre><code>git --version # \u770b\u4e00\u773c\n\ngit config --global user.name \"Your Name Here\"\ngit config --global user.email \"your_email@youremail.com\"\n# \u8bbe\u7f6e name &amp; email\n\ngit config --global credential.helper osxkeychain\n# \u8bbe\u7f6e\u7f13\u5b58\u51ed\u636e\u5de5\u5177\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/#git_1","title":"Git \u57fa\u672c\u64cd\u4f5c","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/#_3","title":"\u521b\u5efa, \u63d0\u4ea4, \u914d\u7f6e","text":"<ul> <li><code>git init</code> \u5728\u5f53\u524d\u76ee\u5f55\u5efa\u7acb <code>.git</code> \u521d\u59cb\u5316</li> <li><code>git clone &lt;url&gt; name</code> \u514b\u9686\u5230\u5f53\u524d\u76ee\u5f55, name \u53ef\u9009</li> <li><code>git status</code> \u68c0\u67e5\u6587\u4ef6\u72b6\u6001</li> <li><code>git add name</code> \u8ddf\u8e2a\u5e76\u6682\u5b58\u65b0\u6587\u4ef6, \u6682\u5b58\u5df2\u4fee\u6539\u6587\u4ef6, \u6682\u5b58\u53ea\u4fdd\u5b58\u5f53\u524d\u7248\u672c, \u672a\u63d0\u4ea4\u4e4b\u524d\u518d\u6b21\u4fee\u6539, \u9700\u8981\u518d\u6b21\u6682\u5b58</li> <li><code>git status -s</code> \u68c0\u67e5\u6587\u4ef6\u72b6\u6001, \u53ea\u663e\u793a\u7b80\u77ed\u4fe1\u606f</li> <li><code>.gitignore</code> \u6307\u660e\u9700\u8981\u5ffd\u89c6\u7684\u6587\u4ef6, \u6807\u51c6\u7684 glob \u6a21\u5f0f\u5339\u914d, \u9012\u5f52\u5730\u5e94\u7528\u5728\u6574\u4e2a\u5de5\u4f5c\u533a\u4e2d</li> <li><code>git diff</code> \u6bd4\u8f83\u5de5\u4f5c\u76ee\u5f55\u4e2d\u5f53\u524d\u6587\u4ef6\u548c\u6682\u5b58\u533a\u57df\u5feb\u7167\u4e4b\u95f4\u7684\u5dee\u5f02</li> <li><code>git diff -staged</code> \u5c06\u6bd4\u5bf9\u5df2\u6682\u5b58\u6587\u4ef6\u4e0e\u6700\u540e\u4e00\u6b21\u63d0\u4ea4\u7684\u6587\u4ef6\u5dee\u5f02</li> <li><code>git commit</code> \u5c06\u63d0\u4ea4\u4fee\u6539\u5e76\u8c03\u7528 shell \u7684\u9ed8\u8ba4\u7f16\u8f91\u5668\u5199\u63d0\u4ea4\u6d88\u606f -a \u81ea\u52a8 add \u5e76\u63d0\u4ea4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/#_4","title":"\u64a4\u9500","text":"<ul> <li><code>git rm name</code> \u5220\u9664\u6587\u4ef6</li> <li><code>git mv</code> \u76f8\u5f53\u4e8e\u91cd\u547d\u540d</li> <li><code>git log</code> \u770b\u5386\u53f2\u66f4\u6539\u63d0\u4ea4\u4eba, mail, \u63d0\u4ea4\u6d88\u606f</li> <li><code>git reset --soft name</code> \u56de\u9000\u7248\u672c, \u4fdd\u7559\u5de5\u4f5c\u533a, \u4fdd\u7559\u6682\u5b58\u533a</li> <li><code>git reset --hard name</code> \u90fd\u4e0d\u4fdd\u7559</li> <li><code>git reset --mixed name</code> \u4fdd\u7559\u5de5\u4f5c\u533a, \u4e0d\u4fdd\u7559\u6682\u5b58\u533a</li> <li><code>git checkout -- rope_name</code> \u7528\u4ed3\u5e93\u4e2d\u7684\u7248\u672c\u66ff\u6362</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/#_5","title":"\u4ed3\u5e93","text":"<ul> <li><code>git remote -v</code> \u770b\u4ed3\u5e93</li> <li><code>git remote add &lt;shortname&gt; &lt;url&gt;</code> \u6dfb\u52a0\u4e00\u4e2a\u65b0\u7684\u8fdc\u7a0b Git \u4ed3\u5e93, \u53ef\u4ee5\u7528 shortname \u4ee3\u66ff\u8be5\u4ed3\u5e93 url</li> <li><code>git fetch &lt;url&gt;</code> \u62c9\u53d6\u5dee\u5f02, \u4f46\u662f\u4e0d\u81ea\u52a8\u5408\u5e76</li> <li><code>git pull &lt;url&gt;</code> \u5e76\u4e14\u81ea\u52a8\u5408\u5e76</li> <li><code>git push origin master</code> \u63a8\u9001\u5230\u67d0\u4ed3\u5e93\u67d0\u5206\u652f, \u8fd9\u662f\u9ed8\u8ba4\u7684 name</li> <li><code>git remote show &lt;remote&gt;</code> \u770b\u4ed3\u5e93\u4fe1\u606f</li> <li><code>git remote rename</code> \u91cd\u547d\u540d</li> <li><code>git remote rm</code> \u5220\u9664\u4ed3\u5e93</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/#_6","title":"\u5206\u652f","text":"<ul> <li><code>git branch name</code> \u5efa\u7acb\u5206\u652f</li> <li><code>git branch</code> \u5217\u51fa\u5206\u652f</li> <li><code>git checkout testing</code> \u79fb\u52a8\u5230\u8be5\u5206\u652f</li> <li><code>git merge hotfix</code> \u5c06\u5f53\u524d\u5206\u652f\u548c\u67d0\u5206\u652f\u5408\u5e76</li> <li><code>git banch --merged</code> \u5217\u51fa\u5df2\u5408\u5e76\u7684\u5206\u652f</li> <li><code>git branch -d name</code> \u5220\u9664\u5206\u652f</li> <li><code>git branch -m old new</code> \u91cd\u547d\u540d\u5206\u652f</li> <li><code>git checkout -b sf origin/serverfix</code> \u4ece\u8fdc\u7a0b\u5206\u652f\u521b\u5efa\u8ddf\u8e2a\u5e76\u5207\u6362\u5230\u65b0\u5206\u652f</li> <li><code>git push origin --delete serverfix</code> \u5220\u9664\u8fdc\u7a0b\u5206\u652f</li> <li><code>git rebase master serverfix</code> \u5408\u5e76\u5206\u652f (\u53d8\u57fa)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/#_7","title":"\u6807\u7b7e","text":"<ul> <li><code>git tag name</code> \u6253\u6807\u7b7e, \u9ed8\u8ba4\u4e3a HEAD, \u4e5f\u53ef\u4ee5\u6307\u5b9a\u63d0\u4ea4</li> <li>HEAD \u6307\u5411\u5f53\u524d\u5206\u652f\u7684\u6700\u65b0\u63d0\u4ea4</li> <li><code>git tag -a name -m \"message\"</code> \u6253\u6807\u7b7e\u5e76\u6dfb\u52a0\u6ce8\u91ca</li> <li><code>git tag -d name</code> \u5220\u9664\u6807\u7b7e</li> <li><code>git push origin name</code> \u63a8\u9001\u6807\u7b7e</li> <li><code>git push origin --tags</code> \u63a8\u9001\u6240\u6709\u6807\u7b7e</li> <li>\u6807\u7b7e\u5e38\u7528\u4e8e\u6807\u8bb0\u91cd\u8981\u7684\u7248\u672c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/#_8","title":"\u6a21\u5757","text":"<ul> <li><code>git submodule add &lt;url&gt; &lt;path&gt;</code> \u6dfb\u52a0\u5b50\u6a21\u5757</li> <li><code>git submodule init</code> \u521d\u59cb\u5316\u5b50\u6a21\u5757</li> <li><code>git submodule update</code> \u66f4\u65b0\u5b50\u6a21\u5757</li> <li><code>git submodule foreach git pull origin master</code> \u66f4\u65b0\u6240\u6709\u5b50\u6a21\u5757</li> <li><code>git submodule status</code> \u67e5\u770b\u5b50\u6a21\u5757\u72b6\u6001</li> <li><code>git submodule foreach git checkout master</code> \u5207\u6362\u6240\u6709\u5b50\u6a21\u5757\u5230 master \u5206\u652f</li> <li><code>git submodule foreach git pull origin master</code> \u62c9\u53d6\u6240\u6709\u5b50\u6a21\u5757</li> <li><code>git submodule foreach git push origin master</code> \u63a8\u9001\u6240\u6709\u5b50\u6a21\u5757</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/#github","title":"GitHub","text":"<ul> <li>\u4ea4\u53cb\u7f51\u7ad9</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/#github-actions","title":"GitHub Actions","text":"<ul> <li>\u81ea\u52a8\u5316 CI/CD</li> </ul> <pre><code>name: CI/CD\non:\n  push:\n    branches: [ main ]\n  pull_request:\n    branches: [ main ]\njobs:\n  build:\n    runs-on: ubuntu-latest\n\n    steps:\n    - uses: actions/checkout@v2\n    - name: Set up Python 3.10\n      uses: actions/setup-python@v2\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Git%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/#gitlab-gitea","title":"GitLab / Gitea","text":"<ul> <li>\u79c1\u6709\u5316\u90e8\u7f72</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E5%9F%BA%E7%A1%80/","title":"Linux \u6982\u5ff5","text":"<ul> <li>\u9e1f\u54e5\u7684 Linux \u79c1\u623f\u83dc - \u592a\u5168, \u8fd0\u7ef4\u770b - 2</li> <li>Linux101 - \u4e0d\u9519, \u6709\u70b9\u5c11 - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E5%9F%BA%E7%A1%80/#linux_1","title":"Linux","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E5%9F%BA%E7%A1%80/#_1","title":"\u4e00\u5207\u90fd\u662f\u6587\u4ef6","text":"<ul> <li><code>dev/sd [a-z]</code> \u8868\u793a\u4e0d\u540c\u7684 sata/usb \u5b58\u50a8\u786c\u4ef6</li> <li><code>dev/sda [1-4]</code> \u662f MBR \u5206\u533a\u8868\u7684\u4e3b\u8981\u5206\u533a\u6216\u62d3\u5c55\u5206\u533a (\u6700\u591a\u4e00\u4e2a)</li> <li><code>[5-]</code> \u662f\u903b\u8f91\u5206\u533a, \u662f\u62d3\u5c55\u5206\u533a\u6307\u5f15\u7684\u5206\u533a</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E5%9F%BA%E7%A1%80/#gpt","title":"GPT \u5206\u533a\u8868","text":"<ul> <li>\u7531 LBA1 (\u517c\u5bb9 MBR \u7684\u542f\u52a8, \u4f46\u4e0d\u8bb0\u5f55\u5206\u533a\u8868, \u6240\u4ee5\u8fd8\u662f\u542f\u52a8\u4e0d\u4e86, \u4fdd\u62a4\u4f5c\u7528), LBA2-33 \u7ec4\u6210, \u6bcf\u4e2a\u53ef\u4ee5\u8bb0\u5f55\u56db\u7ec4\u5206\u533a</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E5%9F%BA%E7%A1%80/#_2","title":"\u6587\u4ef6\u4fe1\u606f","text":"<ul> <li><code>[d, -, l, b, c, s, p]</code> \u76ee\u5f55, \u6587\u4ef6, \u94fe\u63a5\u6587\u4ef6, \u533a\u5757\u8bbe\u5907, \u5b57\u7b26\u8bbe\u5907, \u6570\u636e\u63a5\u53e3\u6587\u4ef6, FIFO \u7ba1\u9053\u6587\u4ef6 (\u89e3\u51b3\u591a\u7ebf\u7a0b\u51b2\u7a81)</li> <li><code>[rwx]*3</code>, \u8bfb \u5199 \u4fee\u6539</li> <li>\u5bf9\u4e8e\u76ee\u5f55\u6765\u8bf4, r \u662f\u8bfb\u6709\u5565\u6587\u4ef6, w \u662f\u64cd\u7eb5\u76ee\u5f55\u7ed3\u6784 (\u4e0d\u5305\u62ec\u91cc\u9762\u7684\u6587\u4ef6\u5185\u5bb9), x \u662f\u80fd\u5426\u8fdb\u5165\u76ee\u5f55\u5de5\u4f5c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E5%9F%BA%E7%A1%80/#_3","title":"\u9690\u85cf\u5c5e\u6027","text":"<ul> <li>SUID (Set User ID) \u6587\u4ef6\u5728\u6267\u884c\u65f6\u4ee5\u6587\u4ef6\u6240\u6709\u8005\u7684\u6743\u9650\u8fd0\u884c</li> <li>SGID (Set Group ID) \u6587\u4ef6\u5728\u6267\u884c\u65f6\u4ee5\u6587\u4ef6\u6240\u5c5e\u7ec4\u7684\u6743\u9650\u8fd0\u884c</li> <li>SBIT (Sticky Bit) \u53ea\u6709\u6587\u4ef6\u7684\u6240\u6709\u8005\u548c root \u7528\u6237\u53ef\u4ee5\u5220\u9664\u8be5\u6587\u4ef6</li> <li>4+2+1 \u8868\u793a\u6587\u4ef6\u7684\u9690\u85cf\u5c5e\u6027</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E5%9F%BA%E7%A1%80/#_4","title":"\u64cd\u4f5c","text":"<ul> <li><code>ctrl+alt+f[1-6]</code> \u66f4\u6362 6 \u4e2a\u7ec8\u7aef</li> <li><code>command</code> \u5176\u5b9e\u662f\u8c03\u7528\u4e86\u4e00\u4e2a \u5b50 shell <code>source</code> \u5728\u672c shell</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E5%9F%BA%E7%A1%80/#_5","title":"\u6587\u4ef6\u7cfb\u7edf","text":"<ul> <li>\u5c06\u6743\u9650\u5c5e\u6027\u653e\u5728 inode \u4e2d, \u5b9e\u9645\u6570\u636e\u653e\u7f6e\u5230\u6570\u636e\u533a\u5757, \u8d85\u7ea7\u533a\u5757\u653e\u7f6e\u6587\u4ef6\u7cfb\u7edf\u6574\u4f53\u4fe1\u606f</li> <li>inode \u540c\u65f6\u8bb0\u5f55\u6587\u4ef6\u6240\u5728\u6570\u636e\u533a\u5757, \u8fd9\u4e5f\u5c31\u662f\u7d22\u5f15\u5f0f\u6587\u4ef6\u7cfb\u7edf</li> <li>\u76ee\u5f55\u7684\u6570\u636e\u5c31\u662f\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u540d\u4e0e\u6587\u4ef6\u7684 inode</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E5%9F%BA%E7%A1%80/#xfs","title":"xfs \u7cfb\u7edf","text":"<ul> <li>\u5b9e\u65f6\u5206\u914d inode \u9664\u4e86\u6570\u636e\u533a\u57df\u4e4b\u5916, \u8fd8\u6709\u4e24\u4e2a\u533a\u57df\u5206\u522b\u662f\u8bb0\u5f55\u6587\u4ef6\u7cfb\u7edf\u7684\u53d8\u5316\u4ee5\u53ca\u7f13\u51b2\u65b0\u5efa\u7acb\u7684\u6587\u4ef6 (\u5206\u914d\u597d\u518d\u653e)</li> <li>ext \u6587\u4ef6\u7cfb\u7edf\u53ea\u80fd\u9488\u5bf9\u6574\u4e2a\u6587\u4ef6\u7cfb\u7edf\u914d\u989d, XFS \u53ef\u4ee5\u7528 project \u6a21\u5f0f\u6765\u8bbe\u8ba1\u4e0d\u540c\u76ee\u5f55\u7684\u78c1\u76d8\u914d\u989d</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E5%9F%BA%E7%A1%80/#_6","title":"~~\u5feb\u6377\u65b9\u5f0f~~","text":"<ul> <li>\u786c\u94fe\u63a5\u662f\u5efa\u7acb\u4e24\u4e2a\u4e0d\u540c\u7684\u6587\u4ef6\u540d, \u6307\u5411\u540c\u4e00\u4e2a inode , \u4f46\u662f\u4e0d\u80fd\u94fe\u63a5\u76ee\u5f55, \u4e5f\u4e0d\u80fd\u8de8\u6587\u4ef6\u7cfb\u7edf</li> <li>\u8f6f\u94fe\u63a5\u662f\u4e00\u4e2a\u6587\u4ef6, \u5f53\u4f60\u64cd\u4f5c\u7684\u65f6\u5019\u4f1a\u5bfc\u5411\u5b9e\u9645\u7684\u76ee\u5f55</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E5%9F%BA%E7%A1%80/#_7","title":"\u7528\u6237","text":"<ul> <li>\u4e00\u4e2a\u7528\u6237\u53ef\u4ee5\u5728\u591a\u4e2a\u7528\u6237\u7ec4, \u6240\u4ee5\u8981\u533a\u5206\u6709\u6548\u7528\u6237\u7ec4\u4e0e\u521d\u59cb\u7528\u6237\u7ec4, \u5bf9\u5df2\u6709\u6587\u4ef6, \u8be5\u7528\u6237\u7684\u6743\u9650\u662f\u6240\u6709\u52a0\u5165\u7528\u6237\u7ec4, \u65b0\u5efa\u6587\u4ef6\u5f52\u5c5e\u6709\u6548\u7528\u6237\u7ec4</li> <li>UID/GID \u624d\u662f\u7528\u6237\u672c\u4f53</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E5%9F%BA%E7%A1%80/#_8","title":"\u6743\u9650","text":"<ul> <li>ACL \u7cbe\u786e\u5230\u70b9\u914d\u7f6e\u6743\u9650</li> <li>PAM \u6a21\u5757\u8d1f\u8d23\u9a8c\u8bc1, \u514d\u5f97\u8f6f\u4ef6\u81ea\u5df1\u6574\u81ea\u5df1\u7684</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E5%9F%BA%E7%A1%80/#_9","title":"\u78c1\u76d8","text":"<ul> <li>RAID 0/1/5 \u5206\u5f00\u5b58 / \u5907\u4efd\u5b58 / \u6df7\u5408\u5b58 (\u4ea4\u53c9\u5907\u4efd)</li> <li>PV \u7269\u7406\u5377, \u62c6\u5206\u4e3a PE \u7269\u7406\u62d3\u5c55\u5757, \u4e00\u5806 PE \u5408\u5e76\u4e3a VG \u5377\u7ec4, \u4e00\u5927\u4e2a\u5377\u7ec4\u5206\u4e3a LV \u903b\u8f91\u5377</li> <li>\u4f9d\u8d56\u5c06 VG \u4e2d\u7684 PE \u5728 LV \u95f4\u8f6c\u79fb\u5b9e\u73b0 LVM</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E5%9F%BA%E7%A1%80/#_10","title":"\u8fdb\u7a0b","text":"<ul> <li>\u7cfb\u7edf\u5efa\u7acb\u5b50\u8fdb\u7a0b\u7684\u8fc7\u7a0b\u662f\u5148\u590d\u5236\u4e00\u4e2a\u7236\u8fdb\u7a0b, \u7136\u540e\u591a\u4e86\u4e00\u4e2a PPID , PID \u548c\u540d\u7528\u65b0\u7684, \u7136\u540e\u518d\u52a0\u8f7d\u65b0\u7a0b\u5e8f</li> <li>\u53ef\u4ee5\u901a\u8fc7 nice \u503c\u6765\u8c03\u6574\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\u8303\u56f4\u662f - 20 \u5230 19, \u4e00\u822c\u7528\u6237\u7684\u8303\u56f4\u662f\u96f6\u5230 19, \u5e76\u53ea\u80fd\u5c06 Nice \u503c\u8d8a\u8c03\u8d8a\u9ad8</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86/","title":"Linux \u8fdb\u9636","text":"<ul> <li>\u547d\u4ee4\u884c\u7684\u827a\u672f - \u6307\u5bfc\u5411 - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86/#_1","title":"\u7f51\u7edc","text":"<pre><code>netstat -atunlp all/tcp/ucp/\u7aef\u53e3\u53f7/\u76d1\u542c/PID # \u770b\u7f51\u7edc\u4e0e\u5bf9\u5e94\u8fdb\u7a0b\n\ncurl -I/wget &lt;url&gt; # \u4e0b\u8f7d\n\nip # \u7528\u6765\u663e\u793a\u548c\u64cd\u4f5c\u8def\u7531 \u7f51\u7edc\u8bbe\u5907 \u63a5\u53e3\u7b49\nifconfig # \u4f20\u7edf\u7684\u7f51\u7edc\u914d\u7f6e\u5de5\u5177, \u7528\u6765\u663e\u793a\u548c\u8bbe\u7f6e\u7f51\u7edc\u63a5\u53e3\u7684\u53c2\u6570\ndig # \u67e5\u8be2 DNS\n\nrsync -av \u6e90 obj # \u540c\u6b65\n\niptables # \u9632\u706b\u5899\n# \u89c4\u5219\u94fe\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86/#_2","title":"\u8d26\u53f7","text":"<pre><code># \u4e0d\u59a8\u4f7f\u7528\u56fe\u5f62\u754c\u9762\u8fdb\u884c\u8d26\u53f7\u7684\u6dfb\u52a0\u548c\u4fee\u6539\u5427\nid # \u770b\u4e00\u773c\nsudo command # \u5047\u88c5\u662f root\nlast # \u770b\u767b\u5f55\u8bb0\u5f55\nexit # \u9000\u8d26\u53f7\nw # \u770b\u767b\u9646\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86/#_3","title":"\u8fdb\u7a0b","text":"<pre><code>pgrep -f name # \u67e5\u8be2\u8fdb\u7a0b\npkill -f name # \u53d1\u9001 sign \u53ef\u4ee5\u7528\u540d\u5b57\u662f\u4f18\u52bf\n\ndu # \u5f53\u524d\u76ee\u5f55\u786c\u76d8\u5360\u7528 -h \u4eba\u7c7b\u53ef\u8bfb -s - \u7b26\u5408\u540e\u9762\u901a\u914d\u7684\u6587\u4ef6\u7684\u5360\u7528\ndf # \u6574\u4e2a\u7cfb\u7edf\u7684\u60c5\u51b5 -i \u770b inode \u4f7f\u7528\u60c5\u51b5\nfree # \u770b\u5185\u5b58\u60c5\u51b5\n\nps aux  # \u770b\u6240\u6709\u8fdb\u7a0b\nps -l  # \u770b\u81ea\u5df1 shell \u7684\npstree -pu # PID/User\n\ntop # \u63a8\u8350\u7528 glances \u4ee3\u66ff\n\nisof -u username dirname \u770b\u76ee\u5f55\u4e0b\u6587\u4ef6\u7684\u88ab\u4f7f\u7528\u60c5\u51b5\n\nnice -n 10 vim # \u4ee5 10 \u4e3a nice \u503c\u8fd0\u884c vim\nrenice -n 10 -p 12345 # \u8bbe\u7f6e PID \u4e3a 12345 \u7684\u8fdb\u7a0b\u7684 nice \u503c\u4e3a 10\n\ncommand&amp; \u653e\u5165\u540e\u53f0\u6267\u884c  \n\nCtrl-Z \u6302\u8d77(\u505c\u6b62)\n\nCtrl-C \u8fdb\u7a0b\u7ec8\u6b62\n\njobs -l pid \u5217\u51fa\u6240\u6709\u540e\u53f0\u6216\u6302\u8d77\u8fdb\u7a0b\n\nfg num \u6765\u6307\u5b9a\u6062\u590d\u4f5c\u4e1a\n\nbg \u7528\u4e8e\u5c06\u4e00\u4e2a\u6302\u8d77\u7684\u4f5c\u4e1a\u6062\u590d\u5230\u540e\u53f0\u6267\u884c\n\nnohub command \u6301\u7eed\u8fd0\u884c, \u4e0d\u968f shell \u800c\u6b7b\n\nkill sign PID   \n</code></pre> <pre><code>sign:\nSIGTERM (\u9ed8\u8ba4\u4fe1\u53f7, \u503c\u4e3a 15):\u8bf7\u6c42\u8fdb\u7a0b\u5b89\u5168\u9000\u51fa \nSIGKILL (\u503c\u4e3a 9):\u5f3a\u5236\u7acb\u5373\u7ec8\u6b62\u8fdb\u7a0b, \u4e0d\u7ed9\u4e88\u8fdb\u7a0b\u6e05\u7406\u8d44\u6e90\u7684\u673a\u4f1a \nSIGINT (\u503c\u4e3a 2):\u4e0e Ctrl+C \u76f8\u540c, \u901a\u5e38\u7528\u4e8e\u4e2d\u65ad\u8fdb\u7a0b \nSIGSTOP (\u503c\u4e3a 19):\u6682\u505c\u8fdb\u7a0b, \u76f4\u5230\u6536\u5230 SIGCONT \nSIGCONT (\u503c\u4e3a 18):\u7ee7\u7eed\u6267\u884c\u4e4b\u524d\u88ab SIGSTOP \u6682\u505c\u7684\u8fdb\u7a0b \n\u793a\u4f8b\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Linux%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86/#_4","title":"\u6587\u4ef6\u7cfb\u7edf","text":"<pre><code>mount \u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf\n\nfdisk \u78c1\u76d8\u5206\u533a\n\nmkfs \u521b\u5efa\u6587\u4ef6\u7cfb\u7edf\n\nlsblk \u5217\u51fa\u6240\u6709\u53ef\u7528\u7684\u5757\u8bbe\u5907\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Markdown/","title":"Markdown","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Markdown/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>GFM - Markdown \u7684\u89c4\u8303\u7684\u65b9\u8a00 (\u5b66 md \u7406\u8bba) - 4</li> <li>markdown \u8bed\u6cd5 - \u591f\u4e86 - 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Markdown/#_2","title":"\u8bed\u6cd5","text":"<ul> <li>\u53c2\u8003\u8d44\u6599\u7cbe\u7b80\u5230\u65e0\u9700\u603b\u7ed3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Markdown/#katex","title":"KaTex","text":"<ul> <li>\u89c1Tex</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Nginx/","title":"Nginx","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Nginx/#_1","title":"\u53c2\u8003\u8d44\u6599","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Nginx/#_2","title":"\u6982\u5ff5","text":"<ul> <li>Nginx \u662f\u4e00\u4e2a\u5f00\u6e90\u7684 WEB \u670d\u52a1\u5668, \u5b83\u53ef\u4ee5\u4f5c\u4e3a\u8d1f\u8f7d\u5747\u8861\u5668, \u7f13\u5b58\u670d\u52a1\u5668, \u53cd\u5411\u4ee3\u7406\u670d\u52a1\u5668\u7b49\u89d2\u8272\u4f7f\u7528</li> <li>\u53cd\u5411\u4ee3\u7406\u7684\u4f5c\u7528\u662f\u5c06\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u540e\u7aef\u7684\u670d\u52a1\u5668, \u7136\u540e\u5c06\u540e\u7aef\u670d\u52a1\u5668\u7684\u54cd\u5e94\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef \u8fd9\u6837\u53ef\u4ee5\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861 (\u591a\u4e2a\u5b9e\u9645\u670d\u52a1\u5668), \u5e76\u9690\u85cf\u540e\u7aef\u670d\u52a1\u5668\u7684 IP \u5730\u5740<ul> <li>\u53ef\u4ee5\u914d\u7f6e\u8f6e\u8be2, \u52a0\u6743\u8f6e\u8be2, ip_hash \u7b49\u7b56\u7565</li> </ul> </li> <li>Nginx \u91c7\u7528\u4e3b\u4ece\u67b6\u6784, \u4e00\u4e2a Master \u8fdb\u7a0b\u548c\u591a\u4e2a Worker \u8fdb\u7a0b (\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a)</li> <li>\u901a\u8fc7\u865a\u62df\u4e3b\u673a\u7684\u65b9\u5f0f\u5b9e\u73b0\u4e00\u670d\u52a1\u5668\u53ef\u4ee5\u63d0\u4f9b\u591a\u4e2a\u7f51\u7ad9</li> <li>\u914d\u7f6e SSL \u8bc1\u4e66\u5b9e\u73b0 https \u8bbf\u95ee</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Nginx/#_3","title":"\u547d\u4ee4","text":"<pre><code>nginx -s signal # \u53d1\u9001\u4fe1\u53f7\u7ed9 nginx \u8fdb\u7a0b\n# \u5e38\u7528\u4fe1\u53f7\n# stop \u5feb\u901f\u505c\u6b62 nginx \u670d\u52a1\u5668\n# quit \u6b63\u5e38\u505c\u6b62 nginx \u670d\u52a1\u5668\n# reload \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6, \u65b0\u914d\u7f6e\u751f\u6548\n# reopen \u91cd\u65b0\u6253\u5f00\u65e5\u5fd7\u6587\u4ef6\n\nngingx -t  # \u68c0\u67e5\u914d\u7f6e\u6587\u4ef6\u72b6\u6001\n\nps aux|grep nginx  # \u67e5\u770b nginx \u8fdb\u7a0b\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Nginx/#_4","title":"\u914d\u7f6e\u6587\u4ef6","text":"<ul> <li>conf \u76ee\u5f55\u4e0b\u7684 nginx.conf, \u9ed8\u8ba4\u914d\u7f6e\u7684 nginx \u76d1\u542c\u7684\u7aef\u53e3\u4e3a 80</li> </ul> <pre><code># \u6700\u5916\u5c42\u662f\u4e00\u4e9b\u5168\u5c40\u914d\u7f6e\n\nevents {\n    # \u7f51\u7edc\u8fde\u63a5\u914d\u7f6e\n}\n\nhttp {\n    # \u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a server \u5757, \u6bcf\u4e00\u4e2a\u90fd\u662f\u4e00\u4e2a\u865a\u62df\u4e3b\u673a\n\n    include path; # \u5f15\u5165\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6\n\n    # \u53ef\u4ee5\u914d\u7f6e\u8bc1\u4e66, \u5b9e\u73b0 https \u8bbf\u95ee\n\n    # \u53cd\u5411\u4ee3\u7406\n    upstream \u4ee3\u7406\u540d\u5b57 {\n        # \u914d\u7f6e...\n        ip_hash; # \u5f00\u542f ip_hash \u6a21\u5f0f\n        # \u7528\u6237\u7684\u8bf7\u6c42\u6839\u636e\u5176 ip \u5730\u5740\u8fdb\u884c hash \u8ba1\u7b97, \u7136\u540e\u5c06\u8bf7\u6c42\u5206\u914d\u5230\u56fa\u5b9a\u7684\u540e\u7aef\u670d\u52a1\u5668\n\n        server \u670d\u52a1\u5668\u5730\u5740 weight = 10;\n        server \u670d\u52a1\u5668\u5730\u5740 weight = 20;\n    }\n\n    server {\n        # \u914d\u7f6e...\n\n        server_name \u57df\u540d; # \u914d\u7f6e\u57df\u540d\n\n        # \u914d\u7f6e http \u8bf7\u6c42\u91cd\u5b9a\u5411\u5230 https\n\n        # \u5339\u914d url \u8def\u5f84\n        location / { # \u5339\u914d\u6839\u8def\u5f84\n        root \u76f8\u5bf9\u8def\u5f84; # \u6587\u4ef6\u7684\u76ee\u5f55\n        index \u9ed8\u8ba4\u7d22\u5f15\u6587\u4ef6.html;        \n        }\n\n        location /name { \n            proxy_pass http://\u4ee3\u7406\u540d\u5b57;\n        }\n    }\n}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Nginx/#_5","title":"\u9632\u706b\u5899","text":"<ul> <li>\u82e5\u65e0\u6cd5\u8bbf\u95ee, \u53ef\u80fd\u662f\u9632\u706b\u5899\u6ca1\u6709\u5f00\u542f\u7aef\u53e3</li> <li>firwall-cmd: \u662f Linux \u63d0\u4f9b\u7684\u64cd\u4f5c firewall \u7684\u4e00\u4e2a\u5de5\u5177</li> <li>--permanent: \u8868\u793a\u8bbe\u7f6e\u4e3a\u6301\u4e45</li> <li>--add-port: \u6807\u8bc6\u6dfb\u52a0\u7684\u7aef\u53e3</li> </ul> <pre><code>service firewalld start # \u542f\u52a8\u9632\u706b\u5899\nservice firewalld restart # \u91cd\u542f\u9632\u706b\u5899\nservice firewalld stop # \u505c\u6b62\u9632\u706b\u5899\nfirewall-cmd --list-all # \u67e5\u770b\u9632\u706b\u5899\u89c4\u5219\nfirewall-cmd --query-port=8080/tcp # \u67e5\u8be2\u7aef\u53e3\u662f\u5426\u5f00\u653e\nfirewall-cmd --permanent --add-port=80/tcp # \u5f00\u653e 80 \u7aef\u53e3\nfirewall-cmd --permanent --remove-port=8080/tcp # \u79fb\u9664\u7aef\u53e3\nfirewall-cmd --reload # \u91cd\u542f\u9632\u706b\u5899 ( \u4fee\u6539\u914d\u7f6e\u540e\u8981\u91cd\u542f\u9632\u706b\u5899 )\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Nginx/#_6","title":"\u66ff\u4ee3\u65b9\u6848","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Nginx/#caddy","title":"Caddy","text":"<ul> <li>\u4e0e Nginx \u76f8\u6bd4\uff0cCaddy \u7684\u6700\u5927\u4f18\u52bf\u5728\u4e8e\u5176\u5f00\u7bb1\u5373\u7528\u7684\u81ea\u52a8\u5316\u7279\u6027\uff0c\u5c24\u5176\u662f\u81ea\u52a8\u914d\u7f6e\u548c\u7ba1\u7406 SSL \u8bc1\u4e66(\u901a\u8fc7 Let's Encrypt)</li> <li>Caddy \u91c7\u7528\u5355\u8fdb\u7a0b\u67b6\u6784\uff0c\u901a\u8fc7\u5185\u7f6e\u7684 Go runtime \u5b9e\u73b0\u9ad8\u5e76\u53d1\u5904\u7406\u80fd\u529b\uff0c\u65e0\u9700\u624b\u52a8\u914d\u7f6e worker \u8fdb\u7a0b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Nginx/#_7","title":"\u914d\u7f6e\u793a\u4f8b","text":"<pre><code># \u57fa\u672c\u9759\u6001\u7ad9\u70b9\u670d\u52a1\nexample.com {\n    root * /var/www/html\n    file_server\n}\n\n# \u53cd\u5411\u4ee3\u7406\u914d\u7f6e\napi.example.com {\n    reverse_proxy 127.0.0.1:8080\n}\n\n# \u591a\u4e2a\u540e\u7aef\u7684\u8d1f\u8f7d\u5747\u8861\nservice.example.com {\n    reverse_proxy 192.168.1.10:8080 192.168.1.11:8080 {\n        lb_policy round_robin\n    }\n}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Nginx/#_8","title":"\u5e38\u7528\u547d\u4ee4","text":"<pre><code>caddy run            # \u542f\u52a8 Caddy \u670d\u52a1\u5668\ncaddy stop           # \u505c\u6b62 Caddy \u670d\u52a1\u5668\ncaddy reload         # \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\ncaddy validate       # \u9a8c\u8bc1\u914d\u7f6e\u6587\u4ef6\u7684\u6b63\u786e\u6027\ncaddy adapt --config Caddyfile --pretty # \u5c06 Caddyfile \u8f6c\u6362\u4e3a JSON \u683c\u5f0f\u914d\u7f6e\uff08\u7528\u4e8e\u9ad8\u7ea7\u914d\u7f6e\uff09\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/SSH%E5%9F%BA%E7%A1%80/","title":"SSH","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/SSH%E5%9F%BA%E7%A1%80/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>ssh - csdn - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/SSH%E5%9F%BA%E7%A1%80/#_2","title":"\u6982\u5ff5","text":"<ul> <li>ssh \u662f\u4e00\u79cd\u534f\u8bae, \u6700\u5e38\u7528\u7684\u5b9e\u73b0\u662f openssh, \u5185\u7f6e\u5728\u5927\u90e8\u5206 Linux \u7cfb\u7edf\u4e0b, \u73b0\u5728\u7684 Windows \u4e5f\u53ef\u4ee5\u9009\u62e9\u6dfb\u52a0\u4e86</li> <li><code>~/.ssh</code> \u5b58\u653e SSH \u5ba2\u6237\u7aef\u76f8\u5173\u914d\u7f6e\u548c\u5bc6\u94a5\u6587\u4ef6</li> <li>\u751f\u6210 <code>authorized_keys</code> \u6587\u4ef6\u7528\u4e8e\u5b58\u653e\u76f8\u5173\u7684\u4e3b\u673a\u548c\u5bc6\u94a5\u4fe1\u606f</li> <li><code>sshd_config</code> (server \u914d\u7f6e\u6587\u4ef6)</li> <li><code>ssh_config</code> (client \u914d\u7f6e\u6587\u4ef6)</li> </ul> <pre><code># \u8fde\u63a5\nssh \u7528\u6237\u540d@hostname\n\nssh -l [\u7528\u6237\u540d] hostname\n\nssh hostname\n\n# \u5c06\u672c\u5730\u673a\u5668\u4e2d\u7684\u6587\u4ef6\u590d\u5236\u5230\u8fdc\u7a0b\u673a\u5668\u4e2d\nscp /path/local_file remote_username@remote_ip:/path/target_file\n\n# \u6dfb\u52a0-r \u53c2\u6570, \u9012\u5f52\u62f7\u8d1d\u76ee\u5f55\nscp -r /path/local_directory remote_username@remote_ip:/path/target_directory\n\n# \u5c06\u8fdc\u7a0b\u673a\u5668\u4e2d\u7684\u6587\u4ef6\u590d\u5236\u5230\u672c\u5730\u673a\u5668\u4e2d\n# \u8fdc\u7a0b\u62f7\u8d1d\u591a\u4e2a\u6587\u4ef6\u7684\u547d\u4ee4\u5f62\u5f0f\u6bd4\u8f83\u7e41\u7410, \u5c31\u4e0d\u5199\u4e86\nscp remote_username@remote_ip:/path/source_file /path/target_file\n\n# \u6307\u5b9a\u4f7f\u7528 23 \u53f7\u7aef\u53e3\nscp -P\u300023 /path/local_file remote_username@remote_ip:/path/target_file\n</code></pre> <ul> <li>\u66f4\u63a8\u8350\u4f7f\u7528 <code>VSCode</code> \u7684 <code>remote-ssh</code> \u63d2\u4ef6</li> <li>\u4f9d\u7167\u5b98\u65b9\u6587\u6863, \u53ef\u4ee5\u975e\u5e38\u7b80\u5355\u7684\u4f7f\u7528\u672c\u5730\u7684 VSCode \u73af\u5883 (\u5305\u542b\u63d2\u4ef6), \u7f16\u8f91\u8fdc\u7a0b\u7684\u6587\u4ef6</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/SSH%E5%9F%BA%E7%A1%80/#_3","title":"\u514d\u5bc6\u7801\u767b\u9646","text":"<pre><code># \u9996\u5148, \u4f60\u9700\u8981\u751f\u6210\u4e00\u5bf9 SSH \u5bc6\u94a5\u5bf9, \u5305\u62ec\u4e00\u4e2a\u79c1\u94a5\u548c\u4e00\u4e2a\u516c\u94a5 \u5982\u679c\u4f60\u8fd8\u6ca1\u6709\u5bc6\u94a5\u5bf9, \u53ef\u4ee5\u4f7f\u7528 ssh-keygen \u547d\u4ee4\u751f\u6210\nssh-keygen -t rsa -b 4096\n\n# \u5c06\u4f60\u7684\u516c\u94a5\u590d\u5236\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\u7684 ~/.ssh/authorized_keys \u6587\u4ef6\u4e2d \u4f60\u53ef\u4ee5\u4f7f\u7528 ssh-copy-id \u547d\u4ee4\u7b80\u5316\u8fd9\u4e2a\u8fc7\u7a0b\nssh-copy-id user@remote-host\n\n# \u786e\u4fdd ssh-agent \u6b63\u5728\u8fd0\u884c \u5982\u679c\u5b83\u6ca1\u6709\u8fd0\u884c, \u4f60\u53ef\u4ee5\u624b\u52a8\u542f\u52a8\u5b83\neval $(ssh-agent)\n\n# \u4f7f\u7528 ssh-add \u547d\u4ee4\u5c06\u4f60\u7684\u79c1\u94a5\u6dfb\u52a0\u5230 ssh-agent \u4e2d\n`ssh-add ~/.ssh/id_rsa\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E5%9F%BA%E7%A1%80/","title":"Shell \u57fa\u7840","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E5%9F%BA%E7%A1%80/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u547d\u4ee4\u884c\u7684\u827a\u672f - \u6307\u5bfc\u5411 - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E5%9F%BA%E7%A1%80/#_2","title":"\u5e2e\u52a9","text":"<ul> <li> <p>\u9762\u5bf9\u4e00\u4e2a command, \u4f60\u9996\u5148\u8981\u77e5\u9053\u5b83\u662f\u53ef\u6267\u884c\u6587\u4ef6 shell \u5185\u7f6e\u547d\u4ee4\u8fd8\u662f\u522b\u540d <code>type command</code></p> </li> <li> <p>\u7528 man \u6765\u67e5\u8be2\u5e2e\u52a9, \u4e0d\u662f\u6240\u6709 shell \u90fd\u63d0\u4f9b info/help, \u7528 apropos \u53bb\u67e5\u627e\u6587\u6863</p> </li> </ul> <pre><code>man \u7684\u4ee3\u53f7\n1 shell\n2 \u5185\u6838\u53ef\u7528\n3 \u5e93\n4 \u8bbe\u5907\n5 \u914d\u7f6e\n6 games\n7 \u534f\u8bae\n8 \u7ba1\u7406\u547d\u4ee4\n9 \u5185\u6838\u6587\u4ef6\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E5%9F%BA%E7%A1%80/#_3","title":"\u5f00\u5173\u673a","text":"<ul> <li><code>sync</code> \u6570\u636e\u5199\u5165\u78c1\u76d8</li> <li><code>shutddown [\u65f6\u95f4] [\u6d88\u606f]</code> \u8b66\u544a\u5173\u673a</li> <li><code>reboot</code> \u91cd\u542f</li> <li><code>poweroff</code> \u5173\u673a</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E5%9F%BA%E7%A1%80/#_4","title":"\u547d\u4ee4","text":"<pre><code>tab \u8865\u5168\n^+r \u67e5\u627e\u5386\u53f2\n^+u/k \u5220\u9664\u547d\u4ee4\n^+a/e \u79fb\u52a8\u5149\u6807\n^+i \u6e05\u5c4f\nshift+[PD/PU] \u7ffb\u9875\n\nhistory n \u663e\u793a\u5386\u53f2\n!command !! !n \u6267\u884c\u5386\u53f2\n\nalias/unalias \u522b\u540d\n\ncommand1 | command2 \u7ba1\u9053 (\u524d\u4e00\u4e2a\u547d\u4ee4\u7684\u8f93\u51fa\u4f5c\u4e3a\u540e\u4e00\u4e2a\u547d\u4ee4\u7684\u8f93\u5165)\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E5%9F%BA%E7%A1%80/#_5","title":"\u901a\u914d\u7b26","text":"<pre><code>\u901a\u914d\u7b26\n*\u4efb\u610f\n?\u53ea\u4e00\u4e2a\u4efb\u610f\u5b57\u7b26  \n[abc]\u4efb\u610f\u5176\u4e2d\u4e00\u4e2a\n[^abc]\u4efb\u610f\u4e0d\u5728\u5176\u4e2d\n[0-9]\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E5%9F%BA%E7%A1%80/#_6","title":"\u6587\u4ef6\u57fa\u672c\u64cd\u4f5c","text":"<pre><code>cp \u590d\u5236 -r form obj\nmv \u79fb\u52a8 form obj\nmkdir name \u5efa\u7acb\u76ee\u5f55\npwd \u8f93\u51fa\u5f53\u524d\u76ee\u5f55\nrmdir name \u5220\u9664\u76ee\u5f55\nrm name \u5220\u9664\n\ncd \u8df3\u8f6c\u76ee\u5f55\n.\u5f53\u524d ..\u7236 -\u4e0a ~\u5bb6 ~name name \u7684\u5bb6\n\nls \u5217\u51fa\u76ee\u5f55\u4e2d\u6587\u4ef6 -al  -i \u663e\u793a inode\n\nln from obj \u786c\u94fe\u63a5 -s \u8f6f\n\nfile filename \u770b\u6587\u4ef6\u7c7b\u578b\nfind \u5efa\u8bae\u7528 fd \u4ee3\u66ff\nhead/tail filename \u770b\u6587\u4ef6\u5934\u5c3e tail -f \u81ea\u52a8\u8ddf\u968f\u65b0\u589e (\u5b9e\u65f6\u76d1\u63a7)\nmore/less filename \u6309\u9875\u770b\u6587\u4ef6\ncat filename \u8bfb\u6587\u672c\u6587\u4ef6 -n \u884c\u53f7 -s \u591a\u7a7a\u884c\u5408\u5e76\nod filename \u4e8c\u8fdb\u5236\u770b\u6587\u4ef6 -t x/c 16 \u8fdb\u5236/\u5b57\u7b26\nwc filename \u7edf\u8ba1\n\ntouch \u5efa\u7acb\u7a7a\u6587\u4ef6/\u6539\u65f6\u95f4\n\nspilt -b/l size/\u884c file \u6587\u4ef6\u524d\u7f00 \u5206\u5272\u6587\u4ef6\n\nrename from obj filename\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E5%9F%BA%E7%A1%80/#_7","title":"\u6587\u4ef6\u6743\u9650","text":"<pre><code>chown name:group filename \u6539\u6587\u4ef6\u5f52\u5c5e -R \u9012\u5f52\nchmod [mode] filename -R \u9012\u5f52\n\nmode:\n- u/g/o/a +/-/= r/w/x\n- xyz r/w/x=4/2/1 x/y/z=u/g/o(r+w+x) \u5982 777\n\numask \u6253\u5370\u6587\u4ef6\u9ed8\u8ba4\u6743\u9650 \u62ff\u6389\u7684\u6743\u9650\u7d2f\u52a0\nchattr -R +-ai \u53ea\u8ffd\u52a0/\u4e0d\u53ef\u4fee\u6539 \u6539\u53d8\u5c5e\u6027\nlsattr \u663e\u793a\u5c5e\u6027 -a \u9690\u85cf\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E5%9F%BA%E7%A1%80/#_8","title":"\u89e3\u538b\u7f29","text":"<pre><code>- tar -jcv -f name.tar.bz2 \u6253\u5305\u538b\u7f29\n- tar -jtv -f f... \u67e5\u8be2\n- tar -jxv -f f... \u89e3\u538b\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/","title":"Shell \u6587\u672c\u5904\u7406","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u547d\u4ee4\u884c\u7684\u827a\u672f - \u6307\u5bfc\u5411 - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#_2","title":"\u6587\u672c\u57fa\u672c\u64cd\u4f5c","text":"<pre><code>sort file/stdio # \u6392\u5e8f -n/r/f/k \u6309\u6570\u5b57\u5927\u5c0f / \u53cd\u5411\u6392 / \u5ffd\u7565\u5927\u5c0f\u5199 / \u6392\u6bcf\u884c\u7684\u7b2c n \u4e2a\u5b57\u6bb5\nuniq file # \u53bb\u91cd\u590d\u6253\u5370 -d/c \u53ea\u663e\u793a\u91cd\u590d / \u663e\u793a\u884c\u91cd\u590d\u6b21\u6570\ncommand | tee filename # \u91cd\u5b9a\u5411\u52a0\u6253\u5370 -af add / \u8986\u76d6\n- cut -f n -d 'c' file # \u6309 c \u4e3a\u5206\u5272\u63d0\u53d6\u6bcf\u884c\u7b2c n \u4e2a\u5b57\u6bb5\n- paste file1 file2 # \u6309\u884c\u62fc\u63a5\n- join f1 f2 # \u82e5\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u76f8\u540c, \u62fc\u63a5\u8fd9\u884c -a1/2 \u4e0d\u5339\u914d\u7684\u6309\u8c01\u6765\n</code></pre> <ul> <li>diff \u8f93\u51fa\u7684\u683c\u5f0f</li> </ul> <pre><code>diff fromfile tofile # \u6587\u672c\u5bf9\u6bd4-bBi \u5ffd\u7565\u8fde\u7eed\u7a7a\u683c/\u5ffd\u7565\u7a7a\u767d\u884c/\u5ffd\u7565\u5927\u5c0f\u5199 \n\ncmp -l file1 file2 # \u5bf9\u6bd4\u4e8c\u8fdb\u5236 \u8fd4\u56de\u7b2c\u4e00\u4e2a\u4e0d\u540c\n\npatch -pn # \u6839\u636e diff \u8f93\u51fa\u6587\u4ef6\u6765\u66f4\u6539\npatch -R -pn # \u8fd8\u539f\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#_3","title":"\u6b63\u5219","text":"<ul> <li><code>^</code> \u6307\u5b9a\u540e\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u5b57\u7b26\u4e32\u7684\u5f00\u59cb</li> <li><code>$</code> \u6307\u5b9a\u524d\u4e00\u4e2a\u6a21\u5f0f\u5339\u914d\u5b57\u7b26\u4e32\u7684\u7ed3\u675f</li> <li><code>*</code> \u5339\u914d\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26</li> <li><code>+</code> \u5339\u914d\u81f3\u5c11\u4e00\u4e2a\u5b57\u7b26</li> <li><code>?</code> \u5339\u914d\u96f6\u6216\u4e00\u4e2a\u5b57\u7b26</li> <li><code>{n}</code> \u5339\u914d n \u4e2a <code>{n}</code> \u524d\u9762\u7684\u6a21\u5f0f</li> <li><code>{n, }</code> \u5339\u914d\u81f3\u5c11 n \u4e2a <code>{n, }</code> \u524d\u9762\u7684\u6a21\u5f0f</li> <li><code>{n, m}</code> \u5339\u914d n \u5230 m \u4e2a <code>{n, m}</code> \u524d\u9762\u7684\u6a21\u5f0f</li> <li><code>[]</code> \u5339\u914d\u4efb\u610f\u5b57\u7b26\u4e2d\u7684\u4e00\u4e2a</li> <li><code>[^]</code> \u5339\u914d\u4efb\u610f\u5b57\u7b26\u4e2d\u7684\u4e00\u4e2a (\u53d6\u53cd)</li> <li><code>|</code> \u903b\u8f91\u6216, \u8fde\u63a5\u4e24\u4e2a\u6a21\u5f0f</li> <li><code>()</code> \u5206\u7ec4</li> <li><code>\\\\</code> \u8f6c\u4e49</li> <li><code>\u6a21\u5f0f\u4e00(?=\u6a21\u5f0f\u4e8c)</code> \u6b63\u5411\u524d\u77bb, \u5339\u914d\u6a21\u5f0f\u4e8c\u524d\u7684\u6a21\u5f0f\u4e00, \u4f46\u4e0d\u83b7\u53d6\u5339\u914d\u7ed3\u679c</li> <li><code>\u6a21\u5f0f\u4e00(?!\u6a21\u5f0f\u4e8c)</code> \u8d1f\u5411\u524d\u77bb</li> <li><code>(?&lt;=\u6a21\u5f0f\u4e8c)\u6a21\u5f0f\u4e00</code> \u6b63\u5411\u540e\u987e</li> <li><code>(?&lt;!\u6a21\u5f0f\u4e8c)\u6a21\u5f0f\u4e00</code> \u8d1f\u5411\u540e\u987e</li> <li><code>[:classname:]</code> \u5339\u914d\u5b57\u7b26\u7c7b<ul> <li><code>[:alnum:]</code> \u5b57\u6bcd\u548c\u6570\u5b57</li> <li><code>[:alpha:]</code> \u5b57\u6bcd</li> <li><code>[:blank:]</code> \u7a7a\u683c\u548c\u5236\u8868\u7b26</li> <li><code>[:cntrl:]</code> \u63a7\u5236\u5b57\u7b26</li> <li><code>[:digit:]</code> \u6570\u5b57</li> <li><code>[:graph:]</code> \u53ef\u6253\u5370\u5b57\u7b26</li> <li><code>[:lower:]</code> \u5c0f\u5199\u5b57\u6bcd</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#grep","title":"<code>grep</code>","text":"<pre><code>grep [option] pattern file # \u67e5\u627e\u6587\u4ef6\u4e2d\u5339\u914d\u7684\u884c\n\n# -A&lt;\u663e\u793a\u884c\u6570&gt;:\u9664\u4e86\u663e\u793a\u7b26\u5408\u8303\u672c\u6837\u5f0f\u7684\u90a3\u4e00\u5217\u4e4b\u5916, \u5e76\u663e\u793a\u8be5\u884c\u4e4b\u540e\u7684\u5185\u5bb9 \n# -B&lt;\u663e\u793a\u884c\u6570&gt;:\u9664\u4e86\u663e\u793a\u7b26\u5408\u6837\u5f0f\u7684\u90a3\u4e00\u884c\u4e4b\u5916, \u5e76\u663e\u793a\u8be5\u884c\u4e4b\u524d\u7684\u5185\u5bb9 \n# -C&lt;\u663e\u793a\u884c\u6570&gt;:\u9664\u4e86\u663e\u793a\u7b26\u5408\u6837\u5f0f\u7684\u90a3\u4e00\u884c\u4e4b\u5916, \u5e76\u663e\u793a\u8be5\u884c\u4e4b\u524d\u540e\u7684\u5185\u5bb9 \n# -v:\u663e\u793a\u4e0d\u88ab pattern \u5339\u914d\u5230\u7684\u884c, \u76f8\u5f53\u4e8e [^] \u53cd\u5411\u5339\u914d\n# -i:\u5ffd\u7565\u5927\u5c0f\u5199\n# -n:\u663e\u793a\u884c\u53f7\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#sed","title":"<code>sed</code>","text":"<pre><code>sed [options] 'command' file(s) # \u9010\u884c\u7f16\u8f91\nsed [options] -f scriptfile file(s) # \u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u547d\u4ee4\n\n# -n:\u4e0d\u8f93\u51fa\u6a21\u5f0f\u7a7a\u95f4\u5185\u5bb9\u5230\u5c4f\u5e55, \u5373\u4e0d\u81ea\u52a8\u6253\u5370, \u53ea\u6253\u5370\u5339\u914d\u5230\u7684\u884c\n# -i:\u76f4\u63a5\u5c06\u5904\u7406\u7684\u7ed3\u679c\u5199\u5165\u6587\u4ef6\n\n# command : \u5730\u5740\u64cd\u4f5c\u5185\u5bb9\n\n# \u4e0d\u7ed9\u5730\u5740:\u5bf9\u5168\u6587\u8fdb\u884c\u5904\u7406\n# n \u6307\u5b9a\u7684\u884c\n# 1, n \u6307\u5b9a\u7684\u884c\u8303\u56f4\n\nsed -n '1~2p'  # \u53ea\u6253\u5370\u5947\u6570\u884c  (1~2 \u4ece\u7b2c 1 \u884c, \u4e00\u6b21\u52a0 2 \u884c)\nsed -n '2~2p'  # \u53ea\u6253\u5370\u5076\u6570\u884c\n\n# d:\u5220\u9664\u6a21\u5f0f\u7a7a\u95f4\u5339\u914d\u7684\u884c, \u5e76\u7acb\u5373\u542f\u7528\u4e0b\u4e00\u8f6e\u5faa\u73af\n# p:\u6253\u5370\u5f53\u524d\u6a21\u5f0f\u7a7a\u95f4\u5185\u5bb9, \u8ffd\u52a0\u5230\u9ed8\u8ba4\u8f93\u51fa\u4e4b\u540e\n# a:\u5728\u6307\u5b9a\u884c\u540e\u9762\u8ffd\u52a0\u6587\u672c, \u652f\u6301\u4f7f\u7528 \\n \u5b9e\u73b0\u591a\u884c\u8ffd\u52a0\n# i:\u5728\u884c\u524d\u9762\u63d2\u5165\u6587\u672c, \u652f\u6301\u4f7f\u7528 \\n \u5b9e\u73b0\u591a\u884c\u8ffd\u52a0\n# c:\u66ff\u6362\u884c\u4e3a\u5355\u884c\u6216\u591a\u884c\u6587\u672c, \u652f\u6301\u4f7f\u7528 \\n \u5b9e\u73b0\u591a\u884c\u8ffd\u52a0\n# !:\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u5339\u914d\u884c\u53d6\u53cd\u5904\u7406\n# s///:\u67e5\u627e\u66ff\u6362, \u652f\u6301\u4f7f\u7528\u5176\u5b83\u5206\u9694\u7b26, s@@@ , s### , \u52a0 g \u8868\u793a\u884c\u5185\u5168\u5c40\u66ff\u6362\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/#awk","title":"<code>awk</code>","text":"<ul> <li>awk \u4f7f\u7528 AWK \u8bed\u8a00, \u6211\u5b9e\u5728\u4e0d\u559c\u6b22</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/","title":"Shell \u811a\u672c","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u83dc\u9e1f\u6559\u7a0b - \u6e05\u6670\u660e\u4e86\u5373\u53ef - 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_2","title":"\u57fa\u672c","text":"<ul> <li><code>#!</code> \u662f\u4e00\u4e2a\u7ea6\u5b9a\u7684\u6807\u8bb0, \u7528\u4e8e\u6307\u5b9a\u811a\u672c\u89e3\u91ca\u5668</li> <li><code>zsh test.sh</code> \u4ee5\u8fd9\u79cd\u65b9\u5f0f\u8fd0\u884c\u7684\u811a\u672c\u5ffd\u7565\u6307\u5b9a</li> <li><code>#</code> \u6ce8\u91ca</li> </ul> <pre><code>#!/bin/bash\necho \"Hello World !\"\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_3","title":"\u53d8\u91cf","text":"<ul> <li>\u7c7b\u4f3c py \u7684\u58f0\u660e\u65b9\u5f0f, <code>=</code> \u4e24\u4fa7\u4e0d\u80fd\u6709\u7a7a\u683c</li> <li><code>${name}</code> \u4f7f\u7528\u53d8\u91cf (\u5305\u62ec\u5728\u5b57\u7b26\u4e32\u4e2d\u5c55\u5f00)</li> <li><code>readonly name</code> \u58f0\u660e\u53d8\u91cf\u53ea\u8bfb (\u4e0d\u662f\u58f0\u660e\u53d8\u91cf\u65f6)</li> <li><code>unset</code> \u5220\u9664\u53d8\u91cf</li> <li><code>declare/typeset -i my_integer=42</code> \u58f0\u660e\u53d8\u91cf\u7c7b\u578b, <code>-i</code> \u6574\u6570</li> </ul> <pre><code>name=\"abc$LANG\"-&gt;abczh_CN...\nname='abc\\&amp;LANG'-&gt;abc&amp;LANG\n# \u5f15\u53f7\u7684\u533a\u522b\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_4","title":"\u5b57\u7b26\u4e32","text":"<ul> <li><code>${name:1:4}</code> \u63d0\u53d6\u5b50\u5b57\u7b26\u4e32</li> <li><code>${name:(-1)}</code> \u63d0\u53d6\u6700\u540e\u4e00\u4e2a\u5b57\u7b26</li> <li><code>${name:0:-1}</code> \u63d0\u53d6\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u6240\u6709\u5b57\u7b26</li> <li><code>echo \u53cd\u5f15 expr index \"$string\" io \u53cd\u5f15</code> \u67e5\u627e\u5b57\u7b26\u4f4d\u7f6e (i \u6216 o)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_5","title":"\u6570\u7ec4","text":"<ul> <li><code>val=${array_name[n]}</code> \u83b7\u53d6\u5143\u7d20</li> <li><code>val=${array_name[@]}</code> \u83b7\u53d6\u6240\u6709\u5143\u7d20</li> <li><code>len=${#array_name[@]}</code> \u83b7\u53d6\u5143\u7d20\u6570\u91cf</li> <li><code>len=${#array_name[*]}</code> \u83b7\u53d6\u5143\u7d20\u957f\u5ea6</li> <li><code>declare -A map</code> \u58f0\u660e\u6570\u7ec4\u7c7b\u578b <code>-A</code> \u5173\u8054\u6570\u7ec4 (\u5b57\u5178), <code>-a</code> \u6570\u7ec4</li> <li><code>echo \"\u6570\u7ec4\u7684\u952e\u4e3a: ${!site[*]}\"</code> \u6240\u6709\u952e</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_6","title":"\u53c2\u6570","text":"<ul> <li>\u73af\u5883\u53d8\u91cf</li> <li><code>$0</code> \u811a\u672c\u540d\u79f0</li> <li><code>$1</code>, <code>$2</code> \u811a\u672c\u53c2\u6570</li> <li><code>$#</code> \u53c2\u6570\u6570\u91cf</li> <li><code>$?</code> \u4e0a\u4e00\u4e2a\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001</li> <li><code>$*</code> \u6240\u6709\u53c2\u6570 (\u5b57\u7b26\u4e32\u5f62\u5f0f)</li> <li><code>$$</code> \u5f53\u524d\u8fdb\u7a0b ID \u53f7</li> <li><code>$!</code> \u540e\u53f0\u8fd0\u884c\u7684\u6700\u540e\u4e00\u4e2a\u8fdb\u7a0b\u7684 ID</li> <li><code>$-</code> \u663e\u793a Shell \u4f7f\u7528\u7684\u5f53\u524d\u9009\u9879, \u4e0e set \u547d\u4ee4\u529f\u80fd\u76f8\u540c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_7","title":"\u8fd0\u7b97\u7b26","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_8","title":"\u7b97\u672f","text":"<ul> <li><code>expr $a + $b</code> \u5176\u4e2d <code>expr</code> \u7528\u4e8e\u8868\u8fbe\u5f0f\u8ba1\u7b97</li> <li>\u6ce8\u610f, \u8d4b\u503c\u5de6\u503c\u65e0\u9700 <code>$</code></li> <li><code>[ $a ==/!= $b ]</code> \u6ce8\u610f\u6240\u6709\u7a7a\u683c\u5fc5\u8981</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_9","title":"\u5173\u7cfb","text":"<ul> <li><code>-eq</code> \u76f8\u7b49</li> <li><code>-ne</code> \u4e0d\u76f8\u7b49</li> <li><code>-gt</code> \u5927\u4e8e</li> <li><code>-lt</code> \u5c0f\u4e8e</li> <li><code>-ge</code> \u5927\u4e8e\u7b49\u4e8e</li> <li><code>-le</code> \u5c0f\u4e8e\u7b49\u4e8e</li> <li><code>[ $a -eq $b ]</code> \u6ce8\u610f\u6240\u6709\u7a7a\u683c\u5fc5\u8981</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_10","title":"\u5e03\u5c14","text":"<ul> <li><code>-a</code> \u4e0e</li> <li><code>-o</code> \u6216</li> <li><code>!</code> \u975e</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_11","title":"\u5b57\u7b26\u4e32\u76f8\u5173","text":"<ul> <li><code>=</code> \u76f8\u7b49</li> <li><code>!=</code> \u4e0d\u76f8\u7b49</li> <li><code>-z</code> \u7a7a</li> <li><code>-n</code> \u975e\u7a7a</li> <li><code>$</code> \u5b57\u7b26\u4e32\u957f\u5ea6</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_12","title":"\u6587\u4ef6\u6d4b\u8bd5","text":"<ul> <li><code>-e</code> \u5b58\u5728</li> <li><code>-d</code> \u76ee\u5f55</li> <li><code>-f</code> \u666e\u901a\u6587\u4ef6</li> <li><code>-c</code> \u5b57\u7b26\u8bbe\u5907\u6587\u4ef6 \u5982\u952e\u76d8</li> <li><code>-b</code> \u5757\u8bbe\u5907\u6587\u4ef6 \u5982\u786c\u76d8</li> <li><code>-s</code> \u975e\u7a7a</li> <li><code>-r</code> \u53ef\u8bfb</li> <li><code>-w</code> \u53ef\u5199</li> <li><code>-x</code> \u53ef\u6267\u884c</li> <li><code>-g</code> SGID</li> <li><code>-u</code> SUID</li> <li><code>-k</code> \u8bbe\u7f6e\u7c98\u7740\u4f4d</li> <li><code>-p</code> \u6709\u540d\u7ba1\u9053</li> <li><code>-s</code> \u5957\u63a5\u5b57</li> <li><code>-L</code> \u7b26\u53f7\u94fe\u63a5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_13","title":"\u5176\u5b83","text":"<ul> <li><code>let name++/--</code> \u81ea\u589e / \u81ea\u51cf</li> <li><code>a=$((a+1))</code> \u7b97\u672f</li> <li><code>((a++/--))</code> \u81ea\u589e / \u81ea\u51cf</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_14","title":"\u547d\u4ee4","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#echo","title":"<code>echo</code>","text":"<ul> <li><code>echo \"\\\"It is a test\\\"\"</code> \u8f6c\u4e49</li> <li><code>echo -e \"OK! \\n\"</code> <code>-e</code> \u540e <code>\\n</code> \u6362\u884c <code>\\c</code> \u8ddf\u4e0b\u4e00\u884c\u8fde\u63a5</li> <li><code>echo \"It is a test\" &gt; myfile</code> \u91cd\u5b9a\u5411</li> <li><code>echo \u53cd\u5f15 date \u53cd\u5f15</code> \u663e\u793a\u547d\u4ee4\u7ed3\u679c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#printf","title":"<code>printf</code>(\u53ef\u79fb\u690d)","text":"<ul> <li><code>printf \"%-10s %-8s %-4s\\n\" \u59d3\u540d \u6027\u522b \u4f53\u91cd kg</code> \u683c\u5f0f\u5316\u8f93\u51fa, \u53ef\u4ee5\u6307\u5b9a\u5bbd\u5ea6, \u7c7b\u578b, \u5e76\u4e14\u968f\u610f\u4f7f\u7528\u8f6c\u4e49\u5b57\u7b26</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#test","title":"<code>test</code>(\u53ef\u79fb\u690d)","text":"<ul> <li><code>test \u5e03\u5c14/\u5b57\u7b26\u4e32/\u6587\u4ef6\u6d4b\u8bd5\u8fd0\u7b97\u5f0f</code> \u8fd4\u56de\u771f\u503c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_15","title":"\u6d41\u7a0b\u63a7\u5236","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#if","title":"<code>if</code>","text":"<pre><code>if test condition\nthen\n    command1\nelif (( a&lt;b ))\nthen \n    command2\nelse\n    commandN\nfi\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#for","title":"<code>for</code>","text":"<pre><code>for var in item1 item2 ... itemN\ndo\n    command1\n    command2\n    ...\n    commandN\ndone\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#whileuntil","title":"<code>while</code>\u4e0e<code>until</code>","text":"<pre><code>int=1\nwhile(( $int&lt;=5 )) # until \u4e0e\u4e4b\u76f8\u53cd\ndo\n    echo $int\n    let \"int++\"\ndone\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#case","title":"<code>case</code>","text":"<pre><code>#!/bin/sh\n\nsite=\"runoob\"\n\ncase \"$site\" in\n   \"runoob\") echo \"\u83dc\u9e1f\u6559\u7a0b\" \n   ;;\n   \"google\") echo \"Google \u641c\u7d22\" \n   ;;\n   \"taobao\") echo \"\u6dd8\u5b9d\u7f51\" \n   ;;\nesac\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#breakcontinue","title":"<code>break</code>\u4e0e<code>continue</code>","text":"<ul> <li>\u8bcd\u4e49\u81ea\u660e</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_16","title":"\u51fd\u6570","text":"<pre><code>[ function ](\u53ef\u9009) fun_name ()\n{\n    action;\n\n    [return int;](\u53ef\u9009, int \u4e3a 0-255)\n}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_17","title":"\u8f93\u5165 / \u8f93\u51fa\u91cd\u5b9a\u5411","text":"<ul> <li><code>command &gt; / &lt; / &gt;&gt; file</code> \u91cd\u5b9a\u5411</li> <li><code>command</code> \u7684 <code>stdin/stdout/stderr</code> \u5bf9\u5e94 <code>0/1/2</code> \u56e0\u6b64\u6709 <code>command 2&gt;&amp;1</code></li> <li><code>/dev/null</code> \u9ed1\u6d1e</li> </ul> <pre><code>$ wc -l &lt;&lt; EOF  # Here Document \u5c06 EOF \u4e2d\u7684\u5185\u5bb9\u4f5c\u4e3a command \u7684\u8f93\u5165\n    \u6b22\u8fce\u6765\u5230\n    \u83dc\u9e1f\u6559\u7a0b\n    www.runoob.com\nEOF\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Shell%E7%BC%96%E7%A8%8B/#_18","title":"\u6587\u4ef6\u5305\u542b","text":"<pre><code>#!/bin/bash\n# author:\u83dc\u9e1f\u6559\u7a0b\n# url:www.runoob.com\n\n#\u4f7f\u7528 . \u53f7\u6765\u5f15\u7528 test1.sh \u6587\u4ef6\n. ./test1.sh\n\n# \u6216\u8005\u4f7f\u7528\u4ee5\u4e0b\u5305\u542b\u6587\u4ef6\u4ee3\u7801\n# source ./test1.sh\n\necho \"\u83dc\u9e1f\u6559\u7a0b\u5b98\u7f51\u5730\u5740:$url\"\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/","title":"Tax","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u77e5\u4e4e\u6559\u7a0b - \u591f\u7528 - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#katex","title":"KaTex","text":"<ul> <li>\u4e00\u4e2a\u517c\u5bb9 Tex \u7684\u6570\u5b66\u516c\u5f0f\u6e32\u67d3\u5e93, \u4e3b\u8981\u662f js \u5b9e\u73b0, \u56e0\u6b64 md \u5e38\u5185\u5d4c KaTex</li> <li><code>$...$</code> \u8868\u793a\u884c\u5185\u516c\u5f0f, <code>$$...$$</code> \u8868\u793a\u884c\u95f4\u516c\u5f0f</li> <li>\u5176\u652f\u6301\u4e00\u4e9b\u539f\u751f\u7684\u6570\u5b66\u7b26\u53f7, \u4f46\u66f4\u591a\u7684\u7b26\u53f7\u9700\u8981\u4f7f\u7528 <code>\\...</code> \u7684\u5f62\u5f0f\u6765\u8f93\u5165</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_2","title":"\u8bed\u6cd5","text":"<ul> <li>\u8bb0\u4e0d\u4f4f, \u5efa\u8bae\u8ba9 AI \u5e2e\u5fd9\u5199</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_3","title":"\u914d\u7f6e\u73af\u5883","text":"<ul> <li>Tex Live+VSCode (\u63d2\u4ef6 latex workshop/latex language support + \u914d\u7f6e\u4e00\u4e0b)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_4","title":"\u6587\u6863\u7c7b\u578b","text":"<ul> <li>\u82f1\u6587, \u53ef\u4ee5\u7528 <code>book article \u548c beamer</code></li> <li>\u4e2d\u6587, \u53ef\u4ee5\u7528 <code>ctexbook ctexart \u548c ctexbeamer</code>, \u8fd9\u4e9b\u7c7b\u578b\u81ea\u5e26\u4e86\u5bf9\u4e2d\u6587\u7684\u652f\u6301</li> <li>\u4e0d\u540c\u7684\u6587\u4ef6\u7c7b\u578b, \u7f16\u5199\u7684\u8fc7\u7a0b\u4e2d\u4e5f\u4f1a\u6709\u4e00\u5b9a\u7684\u5dee\u5f02, \u5982\u679c\u76f4\u63a5\u4fee\u6539\u6587\u4ef6\u7c7b\u578b\u7684\u8bdd, \u751a\u81f3\u4f1a\u62a5\u9519</li> <li>\u4ee5\u4e0b\u7edf\u4e00\u9009\u7528 <code>ctexart</code> \u5728\u7f16\u8f91\u6846\u7b2c\u4e00\u884c</li> </ul> <pre><code>\\documentclass[12pt(\u5b57\u4f53\u5927\u5c0f), a4paper(\u7eb8\u5f20\u5927\u5c0f), oneside(\u5355\u9762\u6253\u5370)]{ctexart}\n\n\\begin{document}\n\n\u8fd9\u91cc\u662f\u6b63\u6587.\n\n\\end{document}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_5","title":"\u5b8f\u5305","text":"<ul> <li>\u4e0e\u6570\u5b66\u516c\u5f0f\u4e0e\u5b9a\u7406\u73af\u5883\u76f8\u5173\u7684\u5b8f\u5305\u4e3a <code>amsmath amsthm amssymb</code></li> <li>\u7528\u4e8e\u63d2\u5165\u56fe\u7247\u7684\u5b8f\u5305\u4e3a <code>graphicx</code></li> <li><code>\\usepackage{amsmath, amsthm, amssymb, graphicx}</code></li> <li>\u53e6\u5916, \u5728\u52a0\u8f7d\u5b8f\u5305\u65f6\u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u57fa\u672c\u53c2\u6570, \u5982\u4f7f\u7528\u8d85\u94fe\u63a5\u5b8f\u5305 hyperref, \u53ef\u4ee5\u8bbe\u7f6e\u5f15\u7528\u7684\u989c\u8272\u4e3a\u9ed1\u8272\u7b49</li> <li><code>\\usepackage[bookmarks=true, colorlinks, citecolor=blue, linkcolor=black]{hyperref}</code></li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_6","title":"\u6807\u9898","text":"<ul> <li>\u6807\u9898\u53ef\u4ee5\u7528 <code>\\title{}</code> \u8bbe\u7f6e, \u4f5c\u8005\u53ef\u4ee5\u7528 <code>\\author</code> \u8bbe\u7f6e, \u65e5\u671f\u53ef\u4ee5\u7528 <code>\\date{}</code> \u8bbe\u7f6e, \u8fd9\u4e9b\u90fd\u9700\u8981\u653e\u5728\u5bfc\u8a00\u533a</li> <li>\u4e3a\u4e86\u5728\u6587\u6863\u4e2d\u663e\u793a\u6807\u9898\u4fe1\u606f, \u9700\u8981\u4f7f\u7528 <code>\\maketitle</code></li> </ul> <pre><code>\\documentclass[12pt, a4paper, oneside]{ctexart}\n\\usepackage{amsmath, amsthm, amssymb, graphicx}\n\\usepackage[bookmarks=true, colorlinks, citecolor=blue, linkcolor=black]{hyperref}\n\n% \u5bfc\u8a00\u533a\n\n\\title{\u6211\u7684\u7b2c\u4e00\u4e2a\\LaTeX \u6587\u6863}\n\\author{Dylaaan}\n\\date{\\today}\n\n\\begin{document}\n\n\\maketitle\n\n\u8fd9\u91cc\u662f\u6b63\u6587.\n\n\\end{document}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_7","title":"\u6b63\u6587","text":"<ul> <li>\u6b63\u6587\u53ef\u4ee5\u76f4\u63a5\u5728 document \u73af\u5883\u4e2d\u4e66\u5199, \u6ca1\u6709\u5fc5\u8981\u52a0\u5165\u7a7a\u683c\u6765\u7f29\u8fdb, \u56e0\u4e3a\u6587\u6863\u9ed8\u8ba4\u4f1a\u8fdb\u884c\u9996\u884c\u7f29\u8fdb</li> <li>\u76f8\u90bb\u7684\u4e24\u884c\u5728\u7f16\u8bd1\u65f6\u4ecd\u7136\u4f1a\u89c6\u4e3a\u540c\u4e00\u6bb5</li> <li>\u5728 LaTeX \u4e2d, \u53e6\u8d77\u4e00\u6bb5\u7684\u65b9\u5f0f\u662f\u4f7f\u7528\u4e00\u884c\u76f8\u9694</li> </ul> <pre><code>\u6211\u662f\u7b2c\u4e00\u6bb5.\n\n\u6211\u662f\u7b2c\u4e8c\u6bb5.\n</code></pre> <ul> <li>\u8fd9\u6837\u7f16\u8bd1\u51fa\u6765\u5c31\u662f\u4e24\u4e2a\u6bb5\u843d \u5728\u6b63\u6587\u90e8\u5206, \u591a\u4f59\u7684\u7a7a\u683c \u56de\u8f66\u7b49\u7b49\u90fd\u4f1a\u88ab\u81ea\u52a8\u5ffd\u7565, \u8fd9\u4fdd\u8bc1\u4e86\u5168\u6587\u6392\u7248\u4e0d\u4f1a\u7a81\u7136\u591a\u51fa\u4e00\u884c\u6216\u8005\u591a\u51fa\u4e00\u4e2a\u7a7a\u683c</li> <li>\u53e6\u5916, \u53e6\u8d77\u4e00\u9875\u7684\u65b9\u5f0f <code>\\newpage</code></li> </ul> <p>\u5728\u6b63\u6587\u4e2d, \u8fd8\u53ef\u4ee5\u8bbe\u7f6e\u5c40\u90e8\u7684\u7279\u6b8a\u5b57\u4f53:</p> \u5b57\u4f53 \u547d\u4ee4 \u76f4\u7acb <code>\\textup{}</code> \u610f\u5927\u5229 <code>\\textit{}</code> \u503e\u659c <code>\\textsl{}</code> \u5c0f\u578b\u5927\u5199 <code>\\textsc{}</code> \u52a0\u5bbd\u52a0\u7c97 <code>\\textbf{}</code>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_8","title":"\u7ae0\u8282","text":"<ul> <li>\u5bf9\u4e8e ctexart \u6587\u4ef6\u7c7b\u578b, \u7ae0\u8282\u53ef\u4ee5\u7528 <code>\\section {}</code> \u548c <code>\\subsection {}</code> \u547d\u4ee4\u6765\u6807\u8bb0</li> </ul> <pre><code>...\n\\begin{document}\n\n\\maketitle\n\n\\section{\u4e00\u7ea7\u6807\u9898}\n\n\\subsection{\u4e8c\u7ea7\u6807\u9898}\n\n\u8fd9\u91cc\u662f\u6b63\u6587.\n\n\\subsection{\u4e8c\u7ea7\u6807\u9898}\n\n\u8fd9\u91cc\u662f\u6b63\u6587.\n\n\\end{document}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_9","title":"\u76ee\u5f55","text":"<ul> <li>\u5728\u6709\u4e86\u7ae0\u8282\u7684\u7ed3\u6784\u4e4b\u540e, \u4f7f\u7528 <code>\\tableofcontents</code> \u547d\u4ee4\u5c31\u53ef\u4ee5\u5728\u6307\u5b9a\u4f4d\u7f6e\u751f\u6210\u76ee\u5f55</li> <li>\u901a\u5e38\u5e26\u6709\u76ee\u5f55\u7684\u6587\u4ef6\u9700\u8981\u7f16\u8bd1\u4e24\u6b21, \u56e0\u4e3a\u9700\u8981\u5148\u5728\u76ee\u5f55\u4e2d\u751f\u6210 <code>.toc</code> \u6587\u4ef6, \u518d\u636e\u6b64\u751f\u6210\u76ee\u5f55</li> </ul> <pre><code>...\n\\begin{document}\n\n\\maketitle\n\n\\tableofcontents\n\n\\section{\u4e00\u7ea7\u6807\u9898}\n\n\\subsection{\u4e8c\u7ea7\u6807\u9898}\n\n\u8fd9\u91cc\u662f\u6b63\u6587.\n\n\\subsection{\u4e8c\u7ea7\u6807\u9898}\n\n\u8fd9\u91cc\u662f\u6b63\u6587.\n\n\\end{document}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_10","title":"\u56fe\u7247","text":"<pre><code>\\begin{figure}[htbp]\n    \\centering\n    \\includegraphics[width=8cm]{\u56fe\u7247.jpg}\n    \\caption{\u56fe\u7247\u6807\u9898}\n\\end{figure}\n</code></pre> <ul> <li><code>[htbp]</code> \u7684\u4f5c\u7528\u662f\u81ea\u52a8\u9009\u62e9\u63d2\u5165\u56fe\u7247\u7684\u6700\u4f18\u4f4d\u7f6e</li> <li><code>\\centering</code> \u8bbe\u7f6e\u8ba9\u56fe\u7247\u5c45\u4e2d</li> <li><code>[width=8cm]</code> \u8bbe\u7f6e\u4e86\u56fe\u7247\u7684\u5bbd\u5ea6\u4e3a 8cm</li> <li><code>\\caption{}</code> \u7528\u4e8e\u8bbe\u7f6e\u56fe\u7247\u7684\u6807\u9898</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_11","title":"\u8868\u683c","text":"<ul> <li>LaTeX \u4e2d\u8868\u683c\u7684\u63d2\u5165\u8f83\u4e3a\u9ebb\u70e6, \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 <code>Create LaTeX tables online \u2013 TablesGenerator.com</code> \u6765\u751f\u6210</li> </ul> <pre><code>\\begin{table}[htbp]\n    \\centering\n    \\caption{\u8868\u683c\u6807\u9898}\n    \\begin{tabular}{ccc}\n        1 &amp; 2 &amp; 3 \\\\\n        4 &amp; 5 &amp; 6 \\\\\n        7 &amp; 8 &amp; 9\n    \\end{tabular}\n\\end{table}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_12","title":"\u5217\u8868","text":"<ul> <li>LaTeX \u4e2d\u7684\u5217\u8868\u73af\u5883\u5305\u542b\u65e0\u5e8f\u5217\u8868 <code>itemize</code></li> <li>\u6709\u5e8f\u5217\u8868 <code>enumerate</code></li> <li>\u63cf\u8ff0 <code>description</code></li> </ul> <pre><code>\\begin{enumerate}\n    \\item \u8fd9\u662f\u7b2c\u4e00\u70b9;\n    \\item \u8fd9\u662f\u7b2c\u4e8c\u70b9;\n    \\item \u8fd9\u662f\u7b2c\u4e09\u70b9.\n\\end{enumerate}\n</code></pre> <ul> <li>\u53e6\u5916, \u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49 <code>\\item</code> \u7684\u6837\u5f0f</li> </ul> <pre><code>\\begin{enumerate}\n    \\item[(1)] \u8fd9\u662f\u7b2c\u4e00\u70b9;\n    \\item[(2)] \u8fd9\u662f\u7b2c\u4e8c\u70b9;\n    \\item[(3)] \u8fd9\u662f\u7b2c\u4e09\u70b9.\n\\end{enumerate}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_13","title":"\u5b9a\u7406\u73af\u5883","text":"<ul> <li>\u5bfc\u8a00\u533a\u52a0\u5165\u4ee5\u4e0b\u4ee3\u7801<ul> <li><code>\\newtheorem{theorem}{\u5b9a\u7406}[section]</code></li> <li>\u5176\u4e2d <code>{theorem}</code> \u662f\u73af\u5883\u7684\u540d\u79f0</li> <li>{\u5b9a\u7406} \u8bbe\u7f6e\u4e86\u8be5\u73af\u5883\u663e\u793a\u7684\u540d\u79f0\u662f \"\u5b9a\u7406\"</li> <li><code>[section]</code> \u7684\u4f5c\u7528\u662f\u8ba9 theorem \u73af\u5883\u5728\u6bcf\u4e2a section \u4e2d\u5355\u72ec\u7f16\u53f7</li> </ul> </li> </ul> <pre><code>\\begin{theorem}[\u5b9a\u7406\u540d\u79f0]\n    \u8fd9\u91cc\u662f\u5b9a\u7406\u7684\u5185\u5bb9.\n\\end{theorem}\n</code></pre> <ul> <li>\u5176\u4e2d <code>[\u5b9a\u7406\u540d\u79f0]</code> \u4e0d\u662f\u5fc5\u987b\u7684</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_14","title":"\u9875\u9762","text":"<ul> <li>\u6700\u5f00\u59cb\u9009\u62e9\u6587\u4ef6\u7c7b\u578b\u65f6, \u6211\u4eec\u8bbe\u7f6e\u7684\u9875\u9762\u5927\u5c0f\u662f a4paper</li> <li>\u9664\u6b64\u4e4b\u5916, \u6211\u4eec\u4e5f\u53ef\u4ee5\u4fee\u6539\u9875\u9762\u5927\u5c0f\u4e3a b5paper \u7b49\u7b49</li> <li>\u4e3a\u4e86\u8ba9\u6bcf\u4e00\u9875\u663e\u793a\u7684\u5185\u5bb9\u66f4\u591a\u4e00\u4e9b, \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 geometry \u5b8f\u5305</li> </ul> <pre><code>\\usepackage{geometry}\n\\geometry{left=2.54cm, right=2.54cm, top=3.18cm, bottom=3.18cm}\n</code></pre> <ul> <li>\u53e6\u5916, \u4e3a\u4e86\u8bbe\u7f6e\u884c\u95f4\u8ddd, \u53ef\u4ee5 <code>\\linespread{1.5}</code></li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Tex%E5%9F%BA%E7%A1%80/#_15","title":"\u9875\u7801","text":"<ul> <li>\u9ed8\u8ba4\u7684\u9875\u7801\u7f16\u7801\u65b9\u5f0f\u662f\u963f\u62c9\u4f2f\u6570\u5b57, \u7528\u6237\u4e5f\u53ef\u4ee5\u81ea\u5df1\u8bbe\u7f6e\u4e3a\u5c0f\u5199\u7f57\u9a6c\u6570\u5b57 <code>\\pagenumbering{roman}</code></li> <li>\u53e6\u5916, aiph \u8868\u793a\u5c0f\u5199\u5b57\u6bcd</li> <li>Aiph \u8868\u793a\u5927\u5199\u5b57\u6bcd</li> <li>Roman \u8868\u793a\u5927\u5199\u7f57\u9a6c\u6570\u5b57</li> <li>arabic \u8868\u793a\u9ed8\u8ba4\u7684\u963f\u62c9\u4f2f\u6570\u5b57</li> <li>\u5982\u679c\u8981\u8bbe\u7f6e\u9875\u7801\u7684\u8bdd, \u53ef\u4ee5\u7528\u5982\u4e0b\u4ee3\u7801\u6765\u8bbe\u7f6e\u9875\u7801\u4ece 0 \u5f00\u59cb <code>\\setcounter{page}{0}</code></li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Vim%E5%9F%BA%E7%A1%80/","title":"Vim","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Vim%E5%9F%BA%E7%A1%80/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>vim - \u591f\u7528 - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/Vim%E5%9F%BA%E7%A1%80/#_2","title":"\u57fa\u7840","text":"<ul> <li>vim \u662f\u4e00\u79cd\u6a21\u5f0f\u7f16\u8f91 / \u5b8c\u5168\u952e\u76d8 / \u547d\u4ee4\u64cd\u4f5c\u7684\u7f16\u8f91\u5668, \u719f\u7ec3\u5b83\u53ef\u4ee5\u975e\u5e38\u5feb\u7684\u7f16\u8f91\u4ee3\u7801</li> <li>\u5f53\u7136, \u6700\u4e3b\u8981\u7684\u662f\u5728\u51e0\u4e4e\u6240\u6709 UNIX-like \u7cfb\u7edf\u5f53\u4e2d\u90fd\u6709 vi</li> </ul> <pre><code>x/X \u5220\u9664\n\nhjkl \u79fb\u52a8 ^+df \u7ffb\u9875\n\n0 - \u884c\u9996\nw - \u4ece\u5f53\u524d\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\u76f4\u5230\u4e0b\u4e00\u4e2a\u5355\u8bcd\u8d77\u59cb\u5904, \u4e0d\u5305\u62ec\u5b83\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\ne - \u4ece\u5f53\u524d\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\u76f4\u5230\u5355\u8bcd\u672b\u5c3e, \u5305\u62ec\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\n$ - \u4ece\u5f53\u524d\u5149\u6807\u5f53\u524d\u4f4d\u7f6e\u76f4\u5230\u5f53\u524d\u884c\u672b\n\ndd == 0d$\nxdd\n\ngg \u8df3\u8f6c\u5230\u5f00\u59cb\nG \u8df3\u8f6c\u5230\u7ed3\u675f\n\u884c\u53f7+G\n\n/\u6216\u662f?\u67e5\u627e n/N \u4e0a\u4e0b\u770b\n%\u627e\u914d\u5bf9\u62ec\u53f7\n^+v \u9009\u62e9\u5757\nyy \u590d\u5236\u4e00\u884c\nnyy\np \u7c98\u8d34\nu \u64a4\u9500\n^+r \u53cd\u64a4\u9500\n. \u518d\u505a\u4e00\u6b21\nce \u5220\u5355\u8bcd\u63d2\u5165\ni \u5f00\u59cb\u5199\no \u52a0\u4e00\u884c\u5f00\u59cb\u5199\n:#, #s/old/new/g \u5176\u4e2d #, # \u4ee3\u8868\u9996\u5c3e\u4e24\u884c\u7684\u884c\u53f7\n:%s/old/new/gc \u4f1a\u627e\u5230\u6574\u4e2a\u6587\u4ef6\u4e2d\u7684\u6bcf\u4e2a\u5339\u914d\u4e32, \u5e76\u4e14\u5bf9\u6bcf\u4e2a\u5339\u914d\u63d0\u793a\u5426\u8fdb\u884c\u66ff\u6362\n:! +shell \u547d\u4ee4\n:w filename \u4fdd\u5b58 (\u53ef\u4ee5\u4fdd\u5b58\u90e8\u5206)\n^+w ^+w \u6362\u7a97\u53e3\n:n/N \u6362\u6587\u4ef6\n:e filename \u6253\u5f00\u65b0\u6587\u4ef6\n:ls \u5217\u51fa\u6240\u6709\u6253\u5f00\n:w address \u4fdd\u5b58\u5230\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/WEB%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/","title":"WEB \u5f00\u53d1\u5e38\u8bc6","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/WEB%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>GeekHour - \u5927\u91cf\u73b0\u4ee3\u5de5\u5177 = 5</li> <li>\u5b98\u65b9\u6587\u6863 - ... - 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/WEB%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#_2","title":"\u6570\u636e\u5e93\u7ba1\u7406\u5de5\u5177","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/WEB%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#navicat","title":"Navicat","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/WEB%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#dbeaver","title":"DBeaver","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/WEB%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#_3","title":"\u63a5\u53e3\u6d4b\u8bd5","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/WEB%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#postman","title":"postman","text":"<ul> <li>\u4f9d\u8d56\u5176\u56fe\u5f62\u754c\u9762, \u4f60\u53ef\u4ee5\u65b9\u4fbf\u7684\u8fdb\u884c\u63a5\u53e3\u6d4b\u8bd5, \u5e76\u5c06\u6d4b\u8bd5\u7ed3\u679c\u5bfc\u51fa\u4e3a html \u683c\u5f0f\u7684\u62a5\u544a</li> <li>\u53ef\u4ee5\u7f16\u5199 js \u6587\u4ef6, \u6784\u9020\u9519\u8bef\u8bf7\u6c42, \u8fdb\u884c\u63a5\u53e3\u6d4b\u8bd5</li> <li>\u4f60\u53ef\u4ee5\u521b\u5efa\u6d4b\u8bd5\u96c6\u5408, \u5c06\u591a\u4e2a\u63a5\u53e3\u6d4b\u8bd5\u653e\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d, \u65b9\u4fbf\u7ba1\u7406</li> <li>\u53ef\u4ee5\u9694\u79bb\u73af\u5883, \u5e76\u5b9a\u4e49\u73af\u5883\u53d8\u91cf</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/WEB%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#bruno","title":"bruno","text":"<ul> <li>\u79bb\u7ebf\u7684\u8f7b\u91cf\u7684\u4e0e postman \u54f2\u5b66\u4e00\u81f4\u7684\u63a5\u53e3\u6d4b\u8bd5\u5de5\u5177</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/WEB%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#hoppscotch","title":"Hoppscotch","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/WEB%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#cicd","title":"CI/CD","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/WEB%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#ci","title":"CI (\u6301\u7eed\u96c6\u6210)","text":"<ul> <li>\u7248\u672c\u63a7\u5236 -&gt; \u81ea\u52a8\u6784\u5efa -&gt; \u81ea\u52a8\u6d4b\u8bd5</li> <li>\u7248\u672c\u63a7\u5236 Git</li> <li>\u81ea\u52a8\u6784\u5efa\u5f62\u5f0f\u591a\u6837, \u81ea\u884c\u4e86\u89e3</li> <li>\u6d4b\u8bd5\u6846\u67b6\u4f9d\u6258\u8bed\u8a00</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/WEB%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#cd","title":"CD (\u6301\u7eed\u4ea4\u4ed8)","text":"<ul> <li>\u81ea\u52a8\u90e8\u7f72 -&gt; \u76d1\u63a7 -&gt; \u6539\u8fdb</li> <li>\u81ea\u52a8\u90e8\u7f72\u5f62\u5f0f\u591a\u6837, \u5982 docker+k8s</li> <li>\u76d1\u63a7\u53cd\u9988\u5de5\u5177\u591a\u6837, \u81ea\u884c\u4e86\u89e3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/WEB%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#_4","title":"\u670d\u52a1\u5668\u8fd0\u7ef4\u7ba1\u7406\u5de5\u5177","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/WEB%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#1panel","title":"1panel","text":"<ul> <li>\u5176\u53ef\u4ee5\u4e00\u952e\u90e8\u7f72\u5404\u79cd\u5e94\u7528 (Docker)</li> <li>\u7ba1\u7406\u754c\u9762\u6e05\u6670\u7b80\u5355</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/","title":"\u524d\u7aef\u5e38\u8bc6","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u5434\u60a0\u8bb2\u7f16\u7a0b - \u524d\u7aef - 5</li> <li>WEB \u5f00\u53d1\u5165\u95e8 - \u7cbe\u7b80 - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#html","title":"HTML","text":"<ul> <li>\u6807\u7b7e</li> <li>\u5c5e\u6027</li> <li>\u5143\u4fe1\u606f, \u5b57\u7b26\u7f16\u7801 / \u4f5c\u8005 / \u56fe\u6807 / \u6807\u9898...</li> <li>\u5934\u4e2d\u53ef\u4ee5\u653e css/js</li> <li>md \u5e38\u7528 p/h1-h6/ul/ol/li/em/strong</li> <li>\u901a\u7528\u5757 span/div</li> </ul> <pre><code>&lt;!doctype html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;title&gt;\u4e8c\u6b21\u5143\u4ff1\u4e50\u90e8&lt;/title&gt;\n    &lt;link\n      href=\"https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300|Sonsie+One\"\n      rel=\"stylesheet\" /&gt;\n    &lt;link\n      href=\"https://fonts.googleapis.com/css?family=ZCOOL+KuaiLe\"\n      rel=\"stylesheet\" /&gt;\n    &lt;link href=\"style.css\" rel=\"stylesheet\" /&gt;\n  &lt;/head&gt;\n\n  &lt;body&gt;\n    &lt;header&gt;\n      &lt;!-- \u672c\u7ad9\u6240\u6709\u7f51\u9875\u7684\u7edf\u4e00\u4e3b\u6807\u9898 --&gt;\n      &lt;h1&gt;\u8046\u542c\u7535\u5b50\u5929\u7c41\u4e4b\u97f3&lt;/h1&gt;\n    &lt;/header&gt;\n\n    &lt;nav&gt;\n      &lt;!-- \u672c\u7ad9\u7edf\u4e00\u7684\u5bfc\u822a\u680f --&gt;\n      &lt;ul&gt;\n        &lt;li&gt;&lt;a href=\"#\"&gt;\u4e3b\u9875&lt;/a&gt;&lt;/li&gt;\n        &lt;!-- \u5171 n \u4e2a\u5bfc\u822a\u680f\u9879\u76ee, \u7701\u7565\u2026\u2026 --&gt;\n      &lt;/ul&gt;\n\n      &lt;form&gt;\n        &lt;!-- \u641c\u7d22\u680f\u662f\u7ad9\u70b9\u5185\u5bfc\u822a\u7684\u4e00\u4e2a\u975e\u7ebf\u6027\u7684\u65b9\u5f0f  --&gt;\n        &lt;input type=\"search\" name=\"q\" placeholder=\"\u8981\u641c\u7d22\u7684\u5185\u5bb9\" /&gt;\n        &lt;input type=\"submit\" value=\"\u641c\u7d22\" /&gt;\n      &lt;/form&gt;\n    &lt;/nav&gt;\n\n    &lt;main&gt;\n      &lt;!-- \u7f51\u9875\u4e3b\u4f53\u5185\u5bb9 --&gt;\n      &lt;article&gt;\n        &lt;!-- \u6b64\u5904\u5305\u542b\u4e00\u4e2a article(\u4e00\u7bc7\u6587\u7ae0), \u5185\u5bb9\u7565\u2026\u2026 --&gt;\n      &lt;/article&gt;\n\n      &lt;aside&gt;\n        &lt;!-- \u4fa7\u8fb9\u680f\u5728\u4e3b\u5185\u5bb9\u53f3\u4fa7 --&gt;\n        &lt;h2&gt;\u76f8\u5173\u94fe\u63a5&lt;/h2&gt;\n        &lt;ul&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;\u8fd9\u662f\u4e00\u4e2a\u8d85\u94fe\u63a5&lt;/a&gt;&lt;/li&gt;\n          &lt;!-- \u4fa7\u8fb9\u680f\u6709 n \u4e2a\u8d85\u94fe\u63a5, \u7565\u7565\u7565\u2026\u2026 --&gt;\n        &lt;/ul&gt;\n      &lt;/aside&gt;\n    &lt;/main&gt;\n\n    &lt;footer&gt;\n      &lt;!-- \u672c\u7ad9\u6240\u6709\u7f51\u9875\u7684\u7edf\u4e00\u9875\u811a --&gt;\n      &lt;p&gt;\u00a9 2050 \u67d0\u67d0\u4fdd\u7559\u6240\u6709\u6743\u5229&lt;/p&gt;\n    &lt;/footer&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#css","title":"CSS","text":"<ul> <li>\u9700\u8981 <code>&lt;link&gt;</code> \u4e00\u4e0b</li> <li>\u9009\u62e9\u5668 <code>.classname/\u6807\u7b7e\u540d/\u901a\u914d\u7b26/... {\u5c5e\u6027: \u503c; \u5c5e\u6027: \u503c;}</code></li> <li>\u5c5e\u6027: \u5c3a\u5bf8 / \u80cc\u666f / \u989c\u8272 / \u6587\u672c / \u5e03\u5c40 / \u8fc7\u6e21 / \u53d8\u6362 / \u52a8\u753b</li> <li>\u9009\u62e9\u5668\u540e\u52a0 <code>:name</code> \u4f2a\u7c7b\u9009\u62e9\u5668 (\u67d0\u4e2a\u72b6\u6001\u4e0b, \u5982\u5149\u6807\u60ac\u6d6e)</li> <li>\u52a0 <code>::name</code> \u4f2a\u5143\u7d20\u9009\u62e9\u5668 (\u4e3a\u6807\u7b7e\u6dfb\u52a0\u5143\u7d20, \u5982\u5bf9\u53f7 / \u53ea\u9009\u4e2d\u7b2c\u4e00\u884c)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#js","title":"JS","text":"<ul> <li><code>&lt;script&gt;</code> \u4e00\u4e0b</li> <li>DOM \u6587\u6863\u5bf9\u8c61\u6a21\u578b \u83b7\u53d6 HTML \u6807\u7b7e\u8f6c\u5316\u4e3a js \u5bf9\u8c61\u8fdb\u884c\u64cd\u4f5c \u5176\u4e2d\u63d0\u4f9b\u5927\u91cf\u65b9\u6cd5, \u5305\u62ec\u4e8b\u4ef6\u76d1\u542c</li> <li>\u5b9a\u65f6\u5668 \u5b57\u9762\u610f\u601d, \u5f02\u6b65\u7684</li> <li><code>(\u53c2\u6570\u5217\u8868) =&gt; {}</code> \u533f\u540d\u51fd\u6570</li> <li>\u6a21\u5757 \u8303\u5f0f: ESM (\u5f15\u64ce)/CJS (Node)<ul> <li>ESM <code>export/import \u8d77\u4e2a\u540d\u5b57(\u76f8\u5f53\u4e8e\u5168\u5bfc\u5165)/{ \u5bfc\u51fa\u7684 obj \u7684\u540d\u5b57 } from file</code> \u5bfc\u5165\u5bfc\u51fa (\u7f16\u8bd1\u65f6\u52a0\u8f7d, \u9759\u6001)</li> <li>CJS <code>module.exports</code> \u5bfc\u5165 <code>require('file')</code> \u5bfc\u51fa (\u8fd0\u884c\u65f6\u52a0\u8f7d, \u52a8\u6001)</li> </ul> </li> <li><code>promise</code> \u5f02\u6b65\u64cd\u4f5c<ul> <li><code>promise((resolve, reject)=&gt;{resolve(date)})</code></li> <li><code>.then((date)=&gt;{...})</code></li> <li><code>then()</code> \u7ecf\u5e38\u8fd4\u56de\u53e6\u4e00\u4e2a <code>promise</code> \u5bf9\u8c61, \u7528\u4ee5\u94fe\u5f0f\u8c03\u7528 <code>.then()</code></li> <li><code>.catch((err)=&gt;{...})</code></li> <li><code>async</code>/<code>await</code> \u662f <code>promise</code> \u7684\u8bed\u6cd5\u7cd6</li> </ul> </li> <li><code>proxy</code> \u4ee3\u7406\u5bf9\u8c61, \u53ef\u4ee5\u62e6\u622a\u5bf9\u5bf9\u8c61\u7684\u64cd\u4f5c, \u5982 <code>get()</code> / <code>set()</code> \u7b49, \u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#ts","title":"TS","text":"<ul> <li>\u7c7b\u578b: \u7c7b\u578b\u68c0\u67e5 / \u6ce8\u89e3 / \u65ad\u8a00 / \u8054\u5408</li> <li>string/number/boolean/null/undefined</li> <li>\u6570\u7ec4 / \u5143\u7956 (\u7ed3\u6784\u4f53) / \u679a\u4e3e / \u6a21\u7248</li> <li>\u51fd\u6570\u91cd\u8f7d / \u7c7b\u7ee7\u627f / \u8bbf\u95ee\u6743 / \u591a\u6001 / \u88c5\u9970\u5668</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#_3","title":"\u7f51\u7edc\u8bf7\u6c42","text":"<ul> <li><code>ajax</code> \u4f9d\u8d56\u5e93\u5bf9\u8c61, \u6307\u5b9a\u8bf7\u6c42\u65b9\u5f0f / \u5730\u5740 / \u53c2\u6570 / \u56de\u8c03\u51fd\u6570 (\u54cd\u5e94\u4e8b\u4ef6)</li> <li><code>axios</code> \u5c01\u88c5\u7684 <code>ajax</code>, <code>async</code> \u4e00\u4e2a\u51fd\u6570, <code>await</code> \u8bf7\u6c42, \u8fdb\u884c\u64cd\u4f5c<ul> <li>\u62e6\u622a\u5668 (\u9762\u5411\u5207\u9762) \u53ef\u4ee5\u7edf\u4e00\u64cd\u4f5c\u8bf7\u6c42</li> </ul> </li> <li><code>fetch</code> \u57fa\u4e8e <code>promise</code> \u7684\u5f02\u6b65\u8bf7\u6c42 <code>fetch(url).then(res=&gt;res.json()).then(data=&gt;console.log(data))</code></li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#vue-2","title":"VUE 2","text":"<ul> <li>\u5b9e\u4f8b\u5316\u4e00\u4e2a <code>VUE</code>, \u5728\u5176\u53c2\u6570\u4e2d</li> <li>\u58f0\u660e\u54cd\u5e94\u5f0f\u6570\u636e (\u6570\u636e\u4e0e\u663e\u793a\u540c\u6b65) <code>date(){name:value}</code> \u65b9\u6cd5 <code>methods:{fun(){}}</code></li> <li>HTML \u4e2d\u7528\u63d2\u503c\u8868\u8fbe\u5f0f <code>&lt;p&gt;{{name}}&lt;/p&gt;</code> name \u4ea6\u53ef\u662f\u8868\u8fbe\u5f0f / \u65b9\u6cd5 /...</li> <li>\u8ba1\u7b97\u5c5e\u6027 <code>computed:{fun(){}}</code> \u7f13\u5b58\u51fd\u6570\u7ed3\u679c (constexpr \u51fd\u6570)</li> <li>\u4fa6\u542c\u5668 <code>watch:{name(newValue, oldValue){}}</code></li> <li>\u6307\u4ee4 <code>v-text=\"...\"</code> <code>v-html=\"...\"</code> \u89e3\u6790... \u4e3a\u5185\u5bb9 <code>v-for</code> <code>v-if</code> <code>v-show</code><ul> <li><code>v-bind:\u5c5e\u6027:</code> \u7ed1\u5b9a\u5c5e\u6027</li> <li><code>v-on:opt=\"fun\"</code> \u7ed1\u5b9a\u4e8b\u4ef6</li> <li><code>v-model=\"fun\"</code> \u53cc\u5411\u7ed1\u5b9a, \u5982\u8f93\u5165\u6846</li> <li>\u53ef\u4ee5\u52a0\u4fee\u9970\u7b26, \u5982 <code>v-model.trim=\"fun\"</code></li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#vue-cli","title":"VUE CLI","text":"<ul> <li><code>npm i @vue/cli -g</code></li> <li><code>vue-create</code></li> <li>VUE \u63d0\u4f9b server build lint \u7b49\u529f\u80fd</li> <li>\u4e00\u4e2a <code>.vue</code> \u6587\u4ef6\u662f\u4e00\u4e2a\u5355\u6587\u4ef6\u7ec4\u4ef6, \u5305\u542b\u7ed3\u6784, \u6837\u5f0f, \u903b\u8f91</li> <li>\u9664\u6839\u7ec4\u4ef6 App.vue \u5916, \u4e0d\u9700\u8981 el \u5c5e\u6027, \u6302\u8f7d\u5728\u54ea\u53d6\u51b3\u4e8e\u7236\u7ec4\u4ef6<ul> <li>\u901a\u8fc7\u5f15\u5165\u7ec4\u4ef6, \u5373\u53ef\u5728\u7ed3\u6784\u4e2d\u4f7f\u7528\u5b50\u7ec4\u4ef6</li> <li>\u5bfc\u51fa\u65f6\u58f0\u660e\u81ea\u5df1\u7528\u7684\u5b50\u7ec4\u4ef6</li> </ul> </li> <li>\u5bfc\u51fa <code>props</code> \u58f0\u660e\u81ea\u5df1\u53ef\u4ee5\u63a5\u6536\u7684\u5c5e\u6027, \u7236\u7ec4\u4ef6\u53ef\u4ee5\u5728 HTML \u6807\u7b7e\u4e2d\u6307\u5b9a<ul> <li>\u8fd9\u4e9b\u5c5e\u6027\u53ef\u4ee5\u58f0\u660e\u4e3a\u54cd\u5e94\u5f0f</li> </ul> </li> <li>\u5b50\u7ec4\u4ef6\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u53bb\u5411\u7236\u7ec4\u4ef6\u4f20\u9012\u4fe1\u606f</li> <li>\u5b50\u7ec4\u4ef6\u53ef\u4ee5\u5b9a\u4e49\u63d2\u69fd\u4ee5\u663e\u793a\u7236\u7ec4\u4ef6\u8c03\u7528\u65f6\u6807\u7b7e\u5185\u7684\u5185\u5bb9</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#vue-router-vuex","title":"<code>VUE Router</code> \u4e0e <code>VUEX</code>","text":"<ul> <li><code>Router</code> \u68c0\u67e5 <code>url</code> \u53d8\u5316, \u5b9e\u73b0\u5355\u9875\u9762\u5e94\u7528</li> <li>Vuex \u5168\u5c40\u7684\u72b6\u6001\u7ba1\u7406\u5de5\u5177, \u4ee3\u66ff\u7236\u5b50\u7ec4\u4ef6\u95f4\u7684\u590d\u6742\u901a\u4fe1</li> <li>vue create \u65f6\u9009\u4e0a, \u4f1a\u751f\u6210\u76f8\u5e94\u6587\u4ef6\u5939, \u5728 main \u4e2d\u5f15\u5165, \u4f5c\u4e3a VUE \u5b9e\u4f8b\u7684\u53c2\u6570</li> <li>\u5728\u76f8\u5e94\u6587\u4ef6\u5939\u4e2d\u8fdb\u884c\u914d\u7f6e, \u4f7f\u7528\u65b9\u6cd5\u67e5\u770b\u5b98\u7f51</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#vue-3","title":"VUE 3","text":"<ul> <li>\u7ec4\u5408\u5f0f api, \u539f\u672c VUE \u529f\u80fd\u96c6\u4e2d (\u54cd\u5e94\u5f0f\u6570\u636e, \u8ba1\u7b97\u5c5e\u6027), \u9020\u6210\u4e86\u903b\u8f91\u5206\u6563, VUE3 \u53ef\u4ee5\u5c06 VUE \u529f\u80fd\u968f\u5730\u4f7f\u7528</li> <li>\u56e0\u6b64\u539f\u672c <code>new vue</code> -&gt; <code>create (vue).mount ()</code></li> <li><code>&lt;script setup&gt; &lt;/script&gt;</code> \u4ee3\u66ff\u4e00\u5927\u5768, \u539f\u672c\u96c6\u4e2d\u58f0\u660e\u7684\u53ef\u4ee5\u4f7f\u7528\u76f8\u5e94\u65b9\u6cd5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#pinia","title":"Pinia","text":"<ul> <li>\u7b80\u5316\u7684\u590d\u5408\u76f4\u89c9\u7684 VUEX</li> <li>\u5c31\u50cf\u5199\u4e00\u4e2a\u7ec4\u4ef6\u4e00\u6837, \u4f46\u5168\u5c40</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#_4","title":"\u5305\u7ba1\u7406\u5668","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#nvm","title":"nvm","text":"<ul> <li>node \u7248\u672c\u7ba1\u7406\u5668</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#npm","title":"npm","text":"<ul> <li>node \u5305\u7ba1\u7406\u5668</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#corepack","title":"corepack","text":"<ul> <li>node \u81ea\u5e26\u7684\u5305\u7ba1\u7406\u5668\u7ba1\u7406\u5668</li> <li><code>npm install -g corepack</code></li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#yarn","title":"yarn","text":"<ul> <li><code>corepack enable</code> \u542f\u7528</li> <li><code>corepack prepare yarn@stable --activate</code> \u5b89\u88c5</li> <li><code>yarn init -2</code> \u521d\u59cb\u5316</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E5%B8%B8%E8%AF%86/#bun","title":"bun","text":"<ul> <li>\u57fa\u4e8e Zig \u8bed\u8a00</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/","title":"\u5f00\u53d1\u73af\u5883\u914d\u7f6e\u5907\u5fd8\u5f55","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u4f1f\u5927\u7684\u5f00\u6e90\u7cbe\u795e - \u65e0\u9700\u591a\u8a00 - 5+</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_3","title":"\u4ee3\u7406","text":"<ul> <li>clash-verge</li> <li>\u65b9\u4fbf</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_4","title":"\u540c\u6b65\u8d26\u53f7","text":"<ul> <li>Microsoft</li> <li>GitHub</li> <li>Google</li> <li>EMail</li> <li>\u624b\u673a\u53f7</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_5","title":"\u5e38\u7528\u8f6f\u4ef6","text":"<ul> <li>Everything</li> <li>Geek / App Cleaner</li> <li>uTools<ul> <li>\u622a\u56fe</li> <li>PDF \u8f6c\u6362</li> <li>\u6587\u4ef6\u641c\u7d22</li> <li>\u526a\u8d34\u677f</li> <li>OCR</li> <li>ctool</li> <li>\u7ffb\u8bd1</li> </ul> </li> <li>QuilkLook</li> <li>PowerToys</li> <li>Office</li> <li>Nanzip</li> <li>FDM</li> <li>LocalSend</li> <li>OBS</li> <li>Hyper-V</li> <li>\u9690\u85cf\u4efb\u52a1\u680f</li> <li>\u8bbe\u5907\u9a71\u52a8\u4e0e\u7cfb\u7edf\u73af\u5883</li> <li>koodo reader</li> <li>\u817e\u8baf\u4f1a\u8bae - \u5fae\u4fe1 - WPS - \u767e\u5ea6\u7f51\u76d8 - QQ - \u7f51\u6613\u4e91\u97f3\u4e50 - QQ \u97f3\u4e50 - \u98de\u4e66</li> <li>\u5e94\u7528\u5b9d -&gt; \u4e0d\u80cc\u5355\u8bcd</li> <li>RustDesk</li> <li>ollama</li> <li>sunshine</li> <li>DiskGenius</li> <li>Windows11 \u8f7b\u677e\u8bbe\u7f6e</li> <li>\u56fe\u5427\u5de5\u5177\u7bb1</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_6","title":"\u529e\u516c\u8f6f\u4ef6","text":"<ul> <li>GenP</li> <li>Photoshop -&gt; GIMP</li> <li>Premiere -&gt; \u526a\u6620</li> <li>Acrobat Reader</li> <li>Blender</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_7","title":"\u6587\u732e","text":"<ul> <li>Zotero<ul> <li>PDFMathTranslate-next</li> </ul> </li> <li>MinerU</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_8","title":"\u57fa\u672c\u5f00\u53d1\u73af\u5883","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#cc","title":"C/C++","text":"<ul> <li>GNU</li> <li>CMake</li> <li>Valgrind</li> <li>LLVM</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#python","title":"Python","text":"<ul> <li>Python</li> <li>conda / miniforge</li> <li>uv</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#javascript","title":"JavaScript","text":"<ul> <li>Node.js</li> <li>yarn</li> <li>bun</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_9","title":"\u6d4f\u89c8\u5668","text":"<ul> <li>Edge / Chrome</li> <li>\u540c\u6b65\u540e\u914d\u7f6e\u63d2\u4ef6</li> <li>\u6cb9\u7334\u811a\u672c<ul> <li>Codeforces Better</li> <li>GitHub \u6c49\u5316</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_10","title":"\u5f00\u53d1\u5de5\u5177","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#vscode","title":"VSCode","text":"<ul> <li>\u540c\u6b65\u914d\u7f6e</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#trae","title":"Trae","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#jetbrains","title":"JetBrains","text":"<ul> <li>\u540c\u6b65\u914d\u7f6e</li> <li>\u767b\u5f55\u6559\u80b2\u514d\u8d39</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#visual-studio","title":"Visual Studio","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#git","title":"Git","text":"<ul> <li>\u8bbe\u7f6e config</li> </ul> <pre><code>git --version # \u770b\u4e00\u773c\n\ngit config --global user.name \"Your Name Here\"\ngit config --global user.email \"your_email@youremail.com\"\n# \u8bbe\u7f6e name&amp;email\n\ngit config --global credential.helper osxkeychain\n# \u7f13\u5b58\u51ed\u636e\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#github","title":"GitHub \u6559\u80b2","text":"<ul> <li>\u7533\u8bf7\u6559\u80b2\u514d\u8d39 PRO + CodeSpace + Copilot</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%AE%B9%E5%99%A8%E5%B8%B8%E8%AF%86/","title":"\u5bb9\u5668\u5e38\u8bc6","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%AE%B9%E5%99%A8%E5%B8%B8%E8%AF%86/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>GeekHour - \u5927\u91cf\u73b0\u4ee3\u5de5\u5177 = 5</li> <li>\u5b98\u65b9\u6587\u6863 - ... - 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%AE%B9%E5%99%A8%E5%B8%B8%E8%AF%86/#docker","title":"Docker","text":"<ul> <li>\u6620\u50cf\u662f\u4e00\u4e2a\u53ea\u8bfb\u7684\u6a21\u677f, \u5305\u542b\u4e86\u5bb9\u5668\u8fd0\u884c\u6240\u9700\u7684\u5185\u5bb9, \u5305\u62ec\u4ee3\u7801 \u8fd0\u884c\u65f6 \u5e93 \u73af\u5883\u53d8\u91cf\u548c\u914d\u7f6e\u6587\u4ef6</li> <li>\u4ed3\u5e93\u662f\u4e00\u4e2a\u96c6\u4e2d\u5b58\u653e\u6620\u50cf\u7684\u5730\u65b9, \u7c7b\u4f3c\u4e8e\u4ee3\u7801\u4ed3\u5e93, \u5176\u4e2d\u53ef\u4ee5\u5b58\u653e\u591a\u4e2a\u6620\u50cf</li> <li>\u5bb9\u5668\u662f\u4e00\u4e2a\u8fd0\u884c\u4e2d\u7684\u6620\u50cf\u5b9e\u4f8b, \u5b83\u53ef\u4ee5\u88ab\u521b\u5efa \u542f\u52a8 \u505c\u6b62 \u5220\u9664\u7b49\u64cd\u4f5c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%AE%B9%E5%99%A8%E5%B8%B8%E8%AF%86/#_3","title":"\u4f7f\u7528\u573a\u666f","text":"<ul> <li>\u901a\u8fc7 Docker \u6765\u8fd0\u884c\u5f00\u53d1\u8005\u5728\u516c\u6709\u4ed3\u5e93\u4e0a\u5206\u4eab\u7684\u6620\u50cf, \u907f\u514d\u4e86\u914d\u7f6e\u73af\u5883</li> <li>\u5f00\u53d1\u65f6\u9700\u8981\u9a8c\u8bc1\u975e\u672c\u5730\u73af\u5883, \u907f\u514d\u4e86\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u51fa\u73b0\u95ee\u9898, \u4f7f\u7528 Docker \u6a21\u62df</li> <li>\u5728\u5b9e\u9645\u751f\u4ea7\u4e2d\u5229\u7528 Docker \u6765\u6784\u5efa\u548c\u90e8\u7f72\u670d\u52a1, \u907f\u514d\u4e86\u624b\u52a8\u914d\u7f6e\u548c\u90e8\u7f72\u7684\u8fc7\u7a0b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%AE%B9%E5%99%A8%E5%B8%B8%E8%AF%86/#_4","title":"\u8fd0\u884c\u5bb9\u5668","text":"<ul> <li>\u5f3a\u70c8\u5efa\u8bae\u4f7f\u7528 Docker Desktop \u6765\u8fd0\u884c\u5bb9\u5668, \u56fe\u5f62\u5316\u7684\u754c\u9762\u5c31\u662f\u723d</li> </ul> <pre><code>docker pull name\n# \u7528\u4e8e\u4ece Docker \u4ed3\u5e93\u62c9\u53d6\u955c\u50cf\n\ndocker run name\n# \u521b\u5efa\u5e76\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u5bb9\u5668\n# -d \u540e\u53f0\n# -p \u6307\u5b9a\u7aef\u53e3\n\ndocker images\n# \u5217\u51fa\u672c\u5730\u5df2\u6709\u7684\u955c\u50cf\n\ndocker ps\n# \u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\n# -a \u663e\u793a\u6240\u6709\u5bb9\u5668, \u5305\u62ec\u7ec8\u6b62\u7684\u5bb9\u5668\n\ndocker start id\n# \u542f\u52a8\u5df2\u505c\u6b62\u7684\u5bb9\u5668\n\ndocker stop id`\n# \u505c\u6b62\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\n\ndocker rm name/id\n# \u5220\u9664\u5bb9\u5668\n 3-f \u5f3a\u5236\n\ndocker rmi name\n# \u5220\u9664\u672c\u5730\u955c\u50cf\n# -f \u5f3a\u5236\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%AE%B9%E5%99%A8%E5%B8%B8%E8%AF%86/#_5","title":"\u6784\u5efa\u5bb9\u5668","text":"<ul> <li>\u5199\u4e00\u4e2a Dockerfile \u6587\u4ef6, \u7136\u540e\u4f7f\u7528 <code>docker build -t name .</code> \u6765\u6784\u5efa\u955c\u50cf</li> </ul> <pre><code>FROM \u6307\u5b9a\u57fa\u7840\u955c\u50cf, \u7528\u4e8e\u540e\u7eed\u7684\u6307\u4ee4\u6784\u5efa\n\nMAINTAINER \u6307\u5b9a Dockerfile \u7684\u4f5c\u8005/\u7ef4\u62a4\u8005 (\u5df2\u5f03\u7528, \u63a8\u8350\u4f7f\u7528 LABEL \u6307\u4ee4)\nLABEL \u6dfb\u52a0\u955c\u50cf\u7684\u5143\u6570\u636e, \u4f7f\u7528\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\n\nRUN \u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u5728\u955c\u50cf\u4e2d\u6267\u884c\u547d\u4ee4\nCMD \u6307\u5b9a\u5bb9\u5668\u521b\u5efa\u65f6\u7684\u9ed8\u8ba4\u547d\u4ee4 (\u53ef\u4ee5\u88ab\u8986\u76d6)\nENTRYPOINT \u8bbe\u7f6e\u5bb9\u5668\u521b\u5efa\u65f6\u7684\u4e3b\u8981\u547d\u4ee4 (\u4e0d\u53ef\u88ab\u8986\u76d6)\n\nEXPOSE \u58f0\u660e\u5bb9\u5668\u8fd0\u884c\u65f6\u76d1\u542c\u7684\u7279\u5b9a\u7f51\u7edc\u7aef\u53e3\n\nENV \u5728\u5bb9\u5668\u5185\u90e8\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\n\nADD \u5c06\u6587\u4ef6 \u76ee\u5f55\u6216\u8fdc\u7a0b URL \u590d\u5236\u5230\u955c\u50cf\u4e2d\nCOPY \u5c06\u6587\u4ef6\u6216\u76ee\u5f55\u590d\u5236\u5230\u955c\u50cf\u4e2d\nVOLUME \u4e3a\u5bb9\u5668\u521b\u5efa\u6302\u8f7d\u70b9\u6216\u58f0\u660e\u5377\n\nWORKDIR \u8bbe\u7f6e\u540e\u7eed\u6307\u4ee4\u7684\u5de5\u4f5c\u76ee\u5f55\nUSER \u6307\u5b9a\u540e\u7eed\u6307\u4ee4\u7684\u7528\u6237\u4e0a\u4e0b\u6587\n\nARG \u5b9a\u4e49\u5728\u6784\u5efa\u8fc7\u7a0b\u4e2d\u4f20\u9012\u7ed9\u6784\u5efa\u5668\u7684\u53d8\u91cf, \u53ef\u4f7f\u7528 \"docker build\" \u547d\u4ee4\u8bbe\u7f6e\n\nONBUILD \u5f53\u8be5\u955c\u50cf\u88ab\u7528\u4f5c\u53e6\u4e00\u4e2a\u6784\u5efa\u8fc7\u7a0b\u7684\u57fa\u7840\u65f6, \u6dfb\u52a0\u89e6\u53d1\u5668\n\nSTOPSIGNAL \u8bbe\u7f6e\u53d1\u9001\u7ed9\u5bb9\u5668\u4ee5\u9000\u51fa\u7684\u7cfb\u7edf\u8c03\u7528\u4fe1\u53f7\n\nHEALTHCHECK \u5b9a\u4e49\u5468\u671f\u6027\u68c0\u67e5\u5bb9\u5668\u5065\u5eb7\u72b6\u6001\u7684\u547d\u4ee4\n\nSHELL \u8986\u76d6 Docker \u4e2d\u9ed8\u8ba4\u7684 shell , \u7528\u4e8e RUN CMD \u548c ENTRYPOINT \u6307\u4ee4\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%AE%B9%E5%99%A8%E5%B8%B8%E8%AF%86/#_6","title":"\u5728\u5bb9\u5668\u4e2d\u5f00\u53d1","text":"<ul> <li>\u63a8\u8350\u4f7f\u7528 <code>VSCode</code> \u7684 <code>Dev Container</code> \u63d2\u4ef6\u6765\u5f00\u53d1</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%AE%B9%E5%99%A8%E5%B8%B8%E8%AF%86/#docker-compose","title":"docker-compose","text":"<ul> <li>\u7528\u4e8e\u5b9a\u4e49\u548c\u8fd0\u884c\u591a\u5bb9\u5668 Docker \u5e94\u7528\u7684\u5de5\u5177</li> <li>\u53ef\u4ee5\u4f7f\u7528 YAML \u6587\u4ef6\u6765\u5b9a\u4e49\u5e94\u7528\u7a0b\u5e8f\u7684\u670d\u52a1, \u7f51\u7edc\u548c\u5377</li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>docker-compose up</code> \u547d\u4ee4\u6765\u542f\u52a8\u5e94\u7528\u7a0b\u5e8f</li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>docker-compose down</code> \u547d\u4ee4\u6765\u505c\u6b62\u5e94\u7528\u7a0b\u5e8f</li> <li>\u53ef\u4ee5\u4f7f\u7528 <code>docker-compose ps</code> \u547d\u4ee4\u6765\u67e5\u770b\u5e94\u7528\u7a0b\u5e8f\u7684\u72b6\u6001</li> </ul> <pre><code>version: '3' # \u6307\u5b9a Docker Compose \u6587\u4ef6\u7684\u7248\u672c\nservices: # \u5b9a\u4e49\u670d\u52a1\n  web: # \u670d\u52a1\u540d\u79f0\n    image: nginx:latest # \u955c\u50cf\u540d\u79f0\n    ports: # \u7aef\u53e3\u6620\u5c04\n      - \"80:80\" # \u4e3b\u673a\u7aef\u53e3:\u5bb9\u5668\u7aef\u53e3\n    volumes: # \u5377\u6620\u5c04\n      - ./html:/usr/share/nginx/html # \u4e3b\u673a\u76ee\u5f55:\u5bb9\u5668\u76ee\u5f55\n    depends_on: # \u4f9d\u8d56\n      - db # \u4f9d\u8d56\u7684\u670d\u52a1\u540d\u79f0\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%AE%B9%E5%99%A8%E5%B8%B8%E8%AF%86/#k8s","title":"k8s","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%AE%B9%E5%99%A8%E5%B8%B8%E8%AF%86/#_7","title":"\u7ec4\u4ef6","text":"<ul> <li><code>Node</code> \u5373\u662f\u4e00\u53f0\u670d\u52a1\u5668, \u53ef\u4ee5\u662f\u7269\u7406\u673a\u4e5f\u53ef\u4ee5\u662f\u865a\u62df\u673a, \u96c6\u7fa4\u4e2d\u6709\u8bb8\u591a <code>Node</code></li> <li><code>Pod</code> \u8fd0\u884c\u5728 <code>Node</code> \u4e0a, \u662f\u4e00\u7ec4\u5bb9\u5668\u7684\u96c6\u5408, \u4e00\u4e2a <code>Pod</code> \u4e2d\u6240\u6709\u7684\u5bb9\u5668\u5171\u4eab\u7f51\u7edc\u548c\u5b58\u50a8\u8d44\u6e90 (k8s \u7684\u6700\u5c0f\u8c03\u5ea6\u5355\u5143)</li> <li>\u6700\u4f73\u5b9e\u8df5\u662f\u5728 <code>Pod</code> \u4e2d\u8fd0\u884c\u4e00\u4e2a\u5e94\u7528 (\u7eaf\u8f85\u52a9\u53ef\u4ee5\u653e\u4e00\u8d77, \u5982\u65e5\u5fd7\u7cfb\u7edf)</li> <li><code>Service</code> \u662f\u4e00\u7ec4 <code>Pod</code> \u7684\u62bd\u8c61, \u63d0\u4f9b\u4e86\u8d1f\u8f7d\u5747\u8861\u548c\u670d\u52a1\u53d1\u73b0\u7684\u529f\u80fd (\u7c7b\u4f3c\u53cd\u5411\u4ee3\u7406)</li> <li><code>Service</code> \u5206\u5185\u90e8 (\u96c6\u7fa4\u5185\u8bbf\u95ee) \u548c\u5916\u90e8 (\u96c6\u7fa4\u5916\u8bbf\u95ee)</li> <li>\u7fa4\u5916\u8bbf\u95ee\u53ef\u4ee5\u4f9d\u8d56 <code>Ingress</code> \u89c4\u5b9a\u8f6c\u53d1\u89c4\u5219</li> <li><code>ConfigMap</code> \u662f\u4e00\u7ec4\u952e\u503c\u5bf9\u7684\u96c6\u5408, \u7528\u4e8e\u5b58\u50a8\u5e94\u7528\u7a0b\u5e8f\u7684\u914d\u7f6e\u4fe1\u606f</li> <li><code>secret</code> \u662f\u4e00\u79cd\u7279\u6b8a\u7684 <code>ConfigMap</code>, \u7528\u4e8e\u5b58\u50a8\u654f\u611f\u4fe1\u606f, \u5982\u6570\u636e\u5e93\u5bc6\u7801\u7b49 (Base64)</li> <li><code>volume</code> \u662f\u4e00\u4e2a\u6301\u4e45\u5316\u5b58\u50a8\u5377, \u7528\u4e8e\u5b58\u50a8 <code>Pod</code> \u4e2d\u7684\u6301\u4e45\u5316\u6570\u636e</li> <li><code>Deployment</code> \u662f\u4e00\u79cd\u8d44\u6e90\u5bf9\u8c61, \u7528\u4e8e\u5b9a\u4e49 <code>Pod</code> \u7684\u526f\u672c\u6570\u548c\u66f4\u65b0\u7b56\u7565</li> <li><code>StatefulSet</code> \u662f\u4e00\u79cd\u8d44\u6e90\u5bf9\u8c61, \u7528\u4e8e\u5b9a\u4e49\u6709\u72b6\u6001\u5e94\u7528\u7684\u526f\u672c\u6570\u548c\u66f4\u65b0\u7b56\u7565</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%AE%B9%E5%99%A8%E5%B8%B8%E8%AF%86/#_8","title":"\u67b6\u6784","text":"<ul> <li>\u4e3b\u4ece\u67b6\u6784 (Master/Worker)</li> <li>\u4e00\u4e2a <code>Worker-Node</code> \u4e2d\u6709 <code>kubelet, kube-proxy</code> \u548c\u5bb9\u5668\u8fd0\u884c\u65f6\u4e09\u4e2a\u7ec4\u4ef6, \u5176\u4e2d <code>kubelet</code> \u8d1f\u8d23\u7ba1\u7406 <code>Pod</code>, <code>kube-proxy</code> \u8d1f\u8d23\u7f51\u7edc\u4ee3\u7406 / \u8d1f\u8f7d\u5747\u8861</li> <li><code>Master-Node</code> \u4e2d\u6709 <code>kube-apiserver</code>, <code>kube-controller-manager</code>, <code>kube-scheduler, etcd</code> \u56db\u4e2a\u7ec4\u4ef6</li> <li><code>kube-apiserver</code> \u8d1f\u8d23\u63a5\u6536\u548c\u54cd\u5e94 API \u8bf7\u6c42</li> <li><code>kube-controller-manager</code> \u8d1f\u8d23\u7ef4\u62a4\u96c6\u7fa4\u72b6\u6001 (\u76d1\u63a7)</li> <li><code>kube-scheduler</code> \u8d1f\u8d23\u8c03\u5ea6 <code>Pod</code> \u5230 <code>Node</code></li> <li><code>etcd</code> \u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u952e\u503c\u5b58\u50a8\u7cfb\u7edf, \u7528\u4e8e\u5b58\u50a8\u96c6\u7fa4\u7684\u5143\u6570\u636e</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%AE%B9%E5%99%A8%E5%B8%B8%E8%AF%86/#_9","title":"\u672c\u5730\u90e8\u7f72","text":"<ul> <li><code>minikube</code> \u662f\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684 Kubernetes \u53d1\u884c\u7248, \u7528\u4e8e\u5728\u672c\u5730\u5f00\u53d1\u548c\u6d4b\u8bd5 Kubernetes \u96c6\u7fa4 (\u521b\u5efa\u4e00\u4e2a VM, \u90e8\u7f72\u4e00\u4e2a\u5355 <code>Node</code> \u7684 Kubernetes \u96c6\u7fa4)</li> <li><code>multipass</code> \u662f\u4e00\u4e2a\u865a\u62df\u673a\u7ba1\u7406\u5de5\u5177, \u7528\u4e8e\u521b\u5efa\u548c\u7ba1\u7406\u865a\u62df\u673a, \u521b\u5efa\u591a\u4e2a\u865a\u62df\u673a\u4f5c\u4e3a Node, \u5373\u53ef\u7528 k3s \u521b\u5efa\u96c6\u7fa4</li> <li><code>kubectl</code> \u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177, \u7528\u4e8e\u4e0e Kubernetes \u96c6\u7fa4\u4ea4\u4e92</li> <li>\u547d\u4ee4\u770b\u6587\u6863</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%AE%B9%E5%99%A8%E5%B8%B8%E8%AF%86/#_10","title":"\u66ff\u4ee3\u65b9\u6848","text":"<ul> <li><code>podman</code> \u662f\u4e00\u4e2a\u65e0\u5b88\u62a4\u8fdb\u7a0b\u7684\u5bb9\u5668\u5f15\u64ce, \u53ef\u4ee5\u66ff\u4ee3 Docker, \u4e0d\u9700\u8981 <code>dockerd</code> \u5b88\u62a4\u8fdb\u7a0b, \u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\u5bb9\u5668</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E5%BF%98%E5%BD%95/","title":"\u5907\u5fd8\u5f55","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E5%BF%98%E5%BD%95/#vscode","title":"VSCode","text":"<ul> <li>\u6c49\u5316 VSCode \u5feb\u6377\u952e\u6307\u5357</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E5%BF%98%E5%BD%95/#jetbrains","title":"JetBrains","text":"<ul> <li>\u5b89\u88c5 Key Promoter X \u63d2\u4ef6<ul> <li>\u5f53\u4f7f\u7528\u9f20\u6807\u6267\u884c\u547d\u4ee4\u65f6, \u663e\u793a\u5e26\u6709\u76f8\u5e94\u952e\u76d8\u5feb\u6377\u952e\u7684\u5f39\u51fa\u901a\u77e5</li> <li>\u5efa\u8bae\u4e3a\u9891\u7e41\u6267\u884c\u7684\u547d\u4ee4\u521b\u5efa\u5feb\u6377\u65b9\u5f0f</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E5%BF%98%E5%BD%95/#windows","title":"Windows","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E5%BF%98%E5%BD%95/#_2","title":"\u7cfb\u7edf","text":"<ul> <li><code>Win + (0-9)</code> \u5207\u6362\u5230\u4efb\u52a1\u680f\u4e2d\u6570\u5b57\u4f4d\u7f6e\u4e2d\u5e94\u7528\u7684\u6700\u540e\u4e00\u4e2a\u6d3b\u52a8\u7a97\u53e3</li> <li><code>Win + Ctrl + Shift + (0-9)</code> \u5728\u4efb\u52a1\u680f\u4e2d\u7684\u6570\u5b57\u4f4d\u7f6e\u4ee5\u5e94\u7528\u7ba1\u7406\u5458\u8eab\u4efd\u6253\u5f00\u53e6\u4e00\u4e2a\u5b9e\u4f8b</li> <li><code>Win + h</code> \u6253\u5f00\u542c\u5199\u529f\u80fd</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E5%BF%98%E5%BD%95/#explorer","title":"Explorer","text":"<ul> <li><code>Alt + Up/Down</code> \u5728\u6587\u4ef6\u5939\u8def\u5f84\u4e2d\u5411\u4e0a\u79fb\u52a8\u7ea7\u522b</li> <li><code>Ctrl + Shift + E</code> \u5c55\u5f00\u5bfc\u822a\u7a97\u683c\u4e2d\u6811\u4e2d\u7684\u6240\u6709\u6587\u4ef6\u5939</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E5%BF%98%E5%BD%95/#terminal","title":"Terminal","text":"<ul> <li><code>Ctrl + Up/Down</code> \u5c06\u5c4f\u5e55\u5411\u4e0b / \u4e0a\u79fb\u52a8\u4e00\u884c</li> <li><code>Ctrl + End/Home</code> \u6eda\u52a8\u5230\u63a7\u5236\u53f0\u5e95 / \u9876\u90e8</li> <li><code>Page Down/Up</code> \u5c06\u5149\u6807\u5411\u4e0b / \u4e0a\u79fb\u52a8\u4e00\u9875</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E5%BF%98%E5%BD%95/#browser","title":"Browser","text":"<ul> <li><code>Alt + D/L</code> \u9009\u62e9\u5730\u5740\u680f\u4e2d\u7684 URL \u4ee5\u8fdb\u884c\u7f16\u8f91</li> <li><code>Ctrl + E/K</code> \u5728\u5730\u5740\u680f\u4e2d\u6253\u5f00\u641c\u7d22\u67e5\u8be2</li> <li><code>Ctrl + Shift + K</code> \u590d\u5236\u5f53\u524d\u6807\u7b7e\u9875</li> <li><code>Ctrl + Tab</code> \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u6807\u7b7e\u9875</li> <li><code>Ctrl + Shift + Tab</code> \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u6807\u7b7e\u9875</li> <li><code>Ctrl + Shift + T</code> \u91cd\u65b0\u6253\u5f00\u4e0a\u4e00\u4e2a\u5173\u95ed\u7684\u6807\u7b7e\u9875\u5e76\u5207\u6362\u5230\u8be5\u6807\u7b7e\u9875</li> <li><code>Ctrl + Shift + W</code> \u5173\u95ed\u5f53\u524d\u7a97\u53e3</li> <li><code>Ctrl + (1-8)</code> \u5207\u6362\u5230\u7279\u5b9a\u6807\u7b7e\u9875</li> <li><code>Ctrl + 9</code> \u5207\u6362\u5230\u6700\u540e\u4e00\u4e2a\u6807\u7b7e\u9875</li> <li><code>Ctrl + M</code> \u5c06\u5f53\u524d\u6807\u7b7e\u9875\u8bbe\u4e3a\u9759\u97f3 (\u5207\u6362)</li> <li><code>Ctrl + O</code> \u5728 Microsoft Edge \u4e2d\u6253\u5f00\u8ba1\u7b97\u673a\u4e2d\u7684\u6587\u4ef6</li> <li><code>Ctrl + R</code> \u91cd\u65b0\u52a0\u8f7d\u5f53\u524d\u9875</li> <li><code>Ctrl + Shift + R</code> \u91cd\u65b0\u52a0\u8f7d\u5f53\u524d\u9875, \u5ffd\u7565\u7f13\u5b58\u5185\u5bb9</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E5%BF%98%E5%BD%95/#_3","title":"\u7f16\u8f91","text":"<ul> <li><code>Ctrl + Backspace</code> \u5220\u9664\u5de6\u4fa7\u7684\u5b57\u8bcd</li> <li><code>Ctrl+End/Home</code> \u8f6c\u5230\u6587\u6863\u672b\u5c3e / \u5f00\u5934</li> <li><code>Ctrl + Left</code> \u8f6c\u5230\u4e0a\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u5934</li> <li><code>Ctrl + Right</code> \u5230\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u5934</li> <li><code>Shift + Ctrl + End</code> \u9009\u62e9\u5149\u6807\u548c\u6587\u6863\u672b\u5c3e\u4e4b\u95f4\u7684\u6587\u672c</li> <li><code>Shift + Ctrl + Home</code> \u9009\u62e9\u5149\u6807\u548c\u6587\u6863\u5f00\u5934\u4e4b\u95f4\u7684\u6587\u672c</li> <li><code>Shift + Ctrl + Left</code> \u9009\u62e9\u5de6\u4fa7\u7684\u5b57\u8bcd</li> <li><code>Shift + Ctrl + Right</code> \u9009\u62e9\u53f3\u4fa7\u7684\u5b57\u8bcd</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%A4%87%E5%BF%98%E5%BD%95/#_4","title":"\u5fd8\u4e0d\u4e86","text":"<ul> <li><code>Win+D</code> \u663e\u793a\u548c\u9690\u85cf\u684c\u9762</li> <li><code>F2</code> \u91cd\u547d\u540d\u6240\u9009\u9879\u76ee</li> <li><code>Ctrl + C</code> \u590d\u5236</li> <li><code>Ctrl + V</code> \u7c98\u8d34</li> <li><code>Ctrl + X</code> \u526a\u5207</li> <li><code>Ctrl + Y</code> \u91cd\u505a</li> <li><code>Ctrl + Z</code> \u64a4\u6d88</li> <li><code>Ctrl + A</code> \u5168\u9009</li> <li><code>Ctrl + F</code> \u67e5\u627e</li> <li><code>Alt+Esc</code> \u5faa\u73af\u6d4f\u89c8\u6253\u5f00\u7684\u7a97\u53e3</li> <li><code>Alt+Tab</code> \u591a\u6b21\u6309 Tab \u952e\u65f6\u5728\u6253\u5f00\u7684\u5e94\u7528\u4e4b\u95f4\u5207\u6362</li> <li><code>Alt+F4</code> \u5173\u95ed\u6d3b\u52a8\u7a97\u53e3</li> <li><code>Alt + \u5b57\u6bcd</code> \u5728\u5e94\u7528\u4e2d\u5bf9\u5e26\u4e0b\u5212\u7ebf\u7684\u5b57\u6bcd\u8fd0\u884c\u547d\u4ee4</li> <li><code>Shift</code> \u542f\u7528\u6216\u7981\u7528\u4e2d\u6587\u8f93\u5165\u6cd5</li> <li><code>Win + R</code> \u6253\u5f00 \"\u8fd0\u884c\" \u547d\u4ee4</li> <li><code>Win + I</code> \u6253\u5f00\u8bbe\u7f6e</li> <li><code>Ctrl + Shift + Esc</code> \u6253\u5f00\u4efb\u52a1\u7ba1\u7406\u5668</li> <li><code>Ctrl + W</code> \u5173\u95ed\u6d3b\u52a8\u7a97\u53e3</li> <li><code>Ctrl + T</code> \u521b\u5efa\u65b0\u7684\u9009\u9879\u5361</li> <li><code>Win + E</code> \u6253\u5f00\u6587\u4ef6\u8d44\u6e90\u7ba1\u7406\u5668</li> <li><code>Win + A</code> \u6253\u5f00\u64cd\u4f5c\u4e2d\u5fc3</li> <li><code>Win + L</code> \u9501\u5b9a\u8ba1\u7b97\u673a</li> <li><code>Ctrl + B</code> \u5c06\u6240\u9009\u6587\u672c\u8bbe\u4e3a\u7c97\u4f53</li> <li><code>Ctrl + I</code> \u4f7f\u6240\u9009\u6587\u672c\u91c7\u7528\u659c\u4f53</li> <li><code>Ctrl + U</code> \u4e3a\u6240\u9009\u6587\u672c\u6dfb\u52a0\u4e0b\u5212\u7ebf</li> <li><code>Shift + DEL</code> \u5220\u9664 (\u8df3\u8fc7\u56de\u6536\u7ad9)</li> <li><code>Ctrl + F</code> \u641c\u7d22</li> <li><code>Ctrl + G</code> \u8df3\u8f6c\u5230\u4e0b\u4e00\u4e2a\u7ed3\u679c\u4ee5\u5728\u9875\u9762\u4e0a\u67e5\u627e (\u6d4f\u89c8\u5668)</li> <li><code>Up/Down</code> \u5faa\u73af\u6d4f\u89c8\u5f53\u524d\u4f1a\u8bdd\u7684\u547d\u4ee4\u5386\u53f2\u8bb0\u5f55 (\u7ec8\u7aef)</li> <li><code>Ctrl + P</code> \u6253\u5370\u5f53\u524d\u9875</li> <li><code>Ctrl + +</code> \u653e\u5927</li> <li><code>Ctrl + -</code> \u7f29\u5c0f</li> <li><code>Ctrl + N</code> \u6253\u5f00\u65b0\u7a97\u53e3</li> <li><code>Ctrl + Shift + N</code> \u6253\u5f00\u65b0\u7684 InPrivate \u7a97\u53e3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/","title":"\u6807\u8bb0\u8bed\u8a00","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u83dc\u9e1f\u6559\u7a0b - \u7cbe\u7b80, \u5feb - 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/#_3","title":"\u6982\u5ff5","text":"<ul> <li>\u63cf\u8ff0\u4e00\u4e2a\u5bf9\u8c61, \u672c\u8d28\u4e0a\u662f\u5bf9\u8c61 / \u6570\u7ec4 / key-value \u7684\u5d4c\u5957</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/#xml","title":"XML","text":"<pre><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;!-- \u7b2c\u4e00\u884c\u63cf\u8ff0, \u8fd9\u662f\u6ce8\u91ca --&gt;\n&lt;message&gt;\n    &lt;warning&gt;\n         Hello World\n    &lt;/warning&gt;\n&lt;/message&gt;\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/#yaml","title":"YAML","text":"<pre><code>languages:\n  - Ruby # \u6570\u7ec4\n  - Perl\n  - Python \nwebsites:\n  YAML: yaml.org # \u5bf9\u8c61 \n  Ruby: ruby-lang.org \n  Python: python.org \n  Perl: use.perl.org\n\n# \u7eaf\u91cf\nboolean: \n    - TRUE  # true, True \u90fd\u53ef\u4ee5\n    - FALSE  # false, False \u90fd\u53ef\u4ee5\nfloat:\n    - 3.14\n    - 6.8523015e+5  # \u53ef\u4ee5\u4f7f\u7528\u79d1\u5b66\u8ba1\u6570\u6cd5\nint:\n    - 123\n    - 0b1010_0111_0100_1010_1110    # \u4e8c\u8fdb\u5236\u8868\u793a\nnull:\n    nodeName: 'node'\n    parent: ~  # \u4f7f\u7528~\u8868\u793a null\nstring:\n    - \u54c8\u54c8\n    - 'Hello world'  # \u53ef\u4ee5\u4f7f\u7528\u53cc\u5f15\u53f7\u6216\u8005\u5355\u5f15\u53f7\u5305\u88f9\u7279\u6b8a\u5b57\u7b26\n    - newline\n      newline2    # \u5b57\u7b26\u4e32\u53ef\u4ee5\u62c6\u6210\u591a\u884c, \u6bcf\u4e00\u884c\u4f1a\u88ab\u8f6c\u5316\u6210\u4e00\u4e2a\u7a7a\u683c\ndate:\n    - 2018-02-17    # \u65e5\u671f\u5fc5\u987b\u4f7f\u7528 ISO 8601 \u683c\u5f0f, \u5373 yyyy-MM-dd\ndatetime: \n    -  2018-02-17T15:02:31+08:00    # \u65f6\u95f4\u4f7f\u7528 ISO 8601 \u683c\u5f0f, \u65f6\u95f4\u548c\u65e5\u671f\u4e4b\u95f4\u4f7f\u7528 T \u8fde\u63a5, \u6700\u540e\u4f7f\u7528 + \u4ee3\u8868\u65f6\u533a\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/#toml","title":"TOML","text":"<pre><code># \u8fd9\u662f\u4e00\u4e2a TOML \u6587\u6863\n\nvar_title = \"TOML \u793a\u4f8b\" # \u57fa\u672c\u8bed\u6cd5, \u652f\u6301\u7c7b\u578b\u540c\u4e0a\n\n[owner] # \u8868, \u76f4\u81f3\u4e0b\u4e00\u4e2a\u8868\u5934\nname = \"Tom Preston-Werner\"\ndob = 1979-05-27T07:32:00-08:00\n\n[database]\nenabled = true\nports = [ 8000, 8001, 8002 ] # \u6570\u7ec4\ndata = [ [\"delta\", \"phi\"], [3.14] ]\ntemp_targets = { cpu = 79.5, case = 72.0 } # \u5185\u8054\u8868\n\n[servers]\n\n[servers.alpha]\nip = \"10.0.0.1\"\nrole = \"\u524d\u7aef\"\n\n[servers.beta]\nip = \"10.0.0.2\"\nrole = \"\u540e\u7aef\"\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/#ini","title":"INI","text":"<pre><code>; Win \u914d\u7f6e\u8bed\u8a00, \u6700\u7b80\u5355\u7684\n[obj1] ;\u8282\nx=1\ny=2\n[obj2]\nx=6\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/#json","title":"JSON","text":"<ul> <li>json \u4e2d\u6709 null \u7c7b\u578b</li> </ul> <pre><code>{}\u5bf9\u8c61\n[]\u6570\u7ec4\n{\n    \"sites\": [\n        { \"name\":\"google\" , \"url\":\"www.google.com\" }, \n        { \"name\":\"\u5fae\u535a\" , \"url\":\"www.weibo.com\" }\n    ]\n}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/","title":"UNIX \u5de5\u5177","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_1","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u73b0\u4ee3 unix \u5de5\u5177 - \u597d - 5</li> <li>\u5b98\u65b9\u6587\u6863 - \u65e0\u9700\u591a\u8a00 - 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#wsl","title":"WSL","text":"<pre><code>wsl --install # \u5b89\u88c5 Linux\nwsl --unregister Ubuntu # \u5378\u8f7d\n\nwsl --set-default Ubuntu # \u8bbe\u7f6e\u9ed8\u8ba4\nwsl --list -v # \u67e5\u770b\u5b89\u88c5\u7684 Linux\n\nwsl -d Ubuntu # \u542f\u52a8\n# exit \u9000\u51fa\n\nwsl --export Ubuntu ./Ubuntu.tar # \u5bfc\u51fa\nwsl --import Ubuntu ./Ubuntu.tar # \u5bfc\u5165\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_2","title":"\u5305\u7ba1\u7406\u5668","text":"<pre><code>/bin/zsh -c \"$(curl -fsSL https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)\" # \u5b89\u88c5 brew\n\nbrew install &lt;formula&gt; # \u4e0b\u8f7d\nbrew update # \u66f4\u65b0\u8f6f\u4ef6\u76ee\u5f55\nbrew outdated # \u67e5\u770b\u9700\u8981\u66f4\u65b0\nbrew upgrade &lt;formula&gt; # \u66f4\u65b0\u8f6f\u4ef6\nbrew list --versions # \u67e5\u770b\u5df2\u5b89\u88c5\nbrew uninstall &lt;formula&gt; # \u5378\u8f7d\nbrew cleanup # \u6e05\u7406\u65e7\u7248\u672c, brew \u4e0d\u4f1a\u9ed8\u8ba4\u505a\u8fd9\u4ef6\u4e8b\nbrew search &lt;formula&gt; # \u641c\u7d22\u7a0b\u5e8f\n\npacman -S yay # \u4e0b\u8f7d yay\n\nyay -S name #\u4e0b\u8f7d\nyay -Sy #\u66f4\u65b0\u8f6f\u4ef6\u76ee\u5f55\nyay -Su #\u66f4\u65b0\u6240\u6709\u8f6f\u4ef6\nyay -Q #\u67e5\u770b\u5df2\u5b89\u88c5\nyay -R name #\u5378\u8f7d\nyay -Rs name #\u540c\u65f6\u5378\u8f7d\u76f8\u5173\u4f9d\u8d56, \u4e0d\u4f1a\u5378\u8f7d\u590d\u7528\nyay -Qi name #\u67e5\u770b\u5df2\u5b89\u88c5\u67d0\u4e2a\nyay -Ss &lt;formula&gt; #\u641c\u7d22\u7a0b\u5e8f\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_3","title":"\u7ec8\u7aef","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#wezterm","title":"Wezterm","text":"<ul> <li>\u914d\u7f6e\u6587\u4ef6\u5728 ~/.config/wezterm.lua</li> </ul> <pre><code>local wezterm = require 'wezterm';\n\nreturn {\n  -- \u4e3b\u9898\n  color_scheme = \"Tokyo Night\", \n  -- \u53d6\u6d88 Windows \u539f\u751f\u6807\u9898\u680f\n  window_decorations = \"INTEGRATED_BUTTONS|RESIZE\", \n  -- \u521d\u59cb\u5316\u7a97\u53e3\u5927\u5c0f\n  initial_cols = 110, \n  initial_rows = 30, \n  -- \u5b57\u4f53\u5927\u5c0f\n  font_size = 14.0, \n\n  -- \u5b57\u4f53\n  font = wezterm.font 'Monaspace Radon Medium', \n\n  -- \u80cc\u666f\u56fe\u7247\n  background = {\n    {\n      source = {\n        -- windows \u4e5f\u662f / \u5206\u9694\u7b26\u54c8\n        File = '', \n      }, \n      hsb = {\n        hue = 1.0, \n        saturation = 1.0, \n        brightness = 1, \n      }\n    }\n  }, \n\n  -- \u80cc\u666f\u900f\u660e\u5ea6\n  window_background_opacity = 0.9, \n  -- \u5173\u95ed\u65f6\u65e0\u9700\u786e\u8ba4\n  window_close_confirmation = 'NeverPrompt', \n\n  -- \u9ed8\u8ba4\u542f\u52a8\u65f6\u4f7f\u7528\u7684 Bash\n  default_prog = {\n    \"wsl\"\n  }, \n\n  -- \u83dc\u5355\u542f\u52a8\u9879\n  launch_menu = {\n    { \n      label = 'PowerShell', \n      args = { 'C:/Windows/System32/WindowsPowerShell/v1.0/powershell.exe' }, \n    }, \n    { \n      label = 'CMD', \n      args = { 'cmd.exe' }, \n    }, \n  }, \n\n--  ssh_domains = { \n--    { \n--      name = \"energy\", -- \u914d\u7f6e\u6807\u8bc6\u57df\u540d\n--      remote_address = \"47.104\", -- \u914d\u7f6e\u8fdc\u7a0b\u5730\u5740\n--      username = \"root\", -- \u914d\u7f6e\u7528\u6237\u540d\n--    }, \n--  }, \n\n  wsl_domains = { \n    { \n      name = \"wsl:ubuntu\", \n      distribution = \"Ubuntu\", \n    }, \n  }, \n\n  -- \u5feb\u6377\u952e\n  -- \u9ed8\u8ba4\u5feb\u6377\u952e https://wezfurlong.org/wezterm/config/default-keys.html\n  keys = {\n    -- Ctrl + p \u663e\u793a\u542f\u52a8\u83dc\u5355\n    { key = 'p', mods = 'CTRL', action = wezterm.action.ShowLauncherArgs { flags = 'FUZZY|TABS|LAUNCH_MENU_ITEMS' } }, \n    -- F11 \u5207\u6362\u5168\u5c4f\n    { key = 'F11', mods = 'NONE', action = wezterm.action.ToggleFullScreen }, \n    -- Ctrl + Shift + + \u5b57\u4f53\u589e\u5927\n    { key = '+', mods = 'SHIFT|CTRL', action = wezterm.action.IncreaseFontSize }, \n    -- Ctrl + Shift + - \u5b57\u4f53\u51cf\u5c0f\n    { key = '_', mods = 'SHIFT|CTRL', action = wezterm.action.DecreaseFontSize }, \n    -- Ctrl + t \u6253\u5f00\u65b0\u6807\u7b7e\n    { key = 't', mods = 'CTRL', action = wezterm.action.ShowLauncher }, \n    -- Ctrl + w \u5173\u95ed\u6807\u7b7e\n    { key = 'V', mods = 'SHIFT|CTRL', action = wezterm.action.PasteFrom 'Clipboard' }, \n    -- Ctrl + Shift + \u4e0a\u7bad\u5934 \u5782\u76f4\u5206\u5c4f\n    { key = \"UpArrow\", mods = \"CTRL|SHIFT\", action = wezterm.action({ SplitHorizontal = { domain = \"CurrentPaneDomain\" }})}, \n    -- Ctrl + Shift + \u4e0b\u7bad\u5934 \u6c34\u5e73\u5206\u5c4f\n    { key = \"DownArrow\", mods = \"CTRL|SHIFT\", action = wezterm.action({ SplitVertical = { domain = \"CurrentPaneDomain\" }})}, \n    -- Ctrl + Shift + - \u7f29\u5c0f\u5b57\u4f53\n    -- { key = \"-\", mods = \"CTRL|SHIFT\", action = wezterm.action.IncreaseFontSize }, \n    -- Ctrl + Shift + = \u6269\u5927\u5b57\u4f53\n    -- { key = \"=\", mods = \"CTRL|SHIFT\", action = wezterm.action.DecreaseFontSize }, \n    -- Ctrl + Shift + 0 \u91cd\u7f6e\u5b57\u4f53\n    -- { key = \"0\", mods = \"CTRL|SHIFT\", action = wezterm.action.ResetFontSize }, \n  }\n}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#tabby","title":"Tabby","text":"<ul> <li>\u5907\u7528\u7ec8\u7aef</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#zsh","title":"zsh","text":"<ul> <li>ohmyzsh \u662f zsh \u7684\u6846\u67b6, \u7528\u4e8e\u62d3\u5c55\u529f\u80fd</li> </ul> <pre><code>sh -c \"$(curl -fsSL https://gitee.com/pocmon/ohmyzsh/raw/master/tools/install.sh)\" #\u5b89\u88c5\nuninstall_oh_my_zsh # \u5378\u8f7d\nupgrade_oh_my_zsh # \u66f4\u65b0\n</code></pre> <ul> <li>\u4e3b\u9898 powerlevel10k</li> <li>\u5b89\u88c5\u5b57\u4f53</li> </ul> <pre><code>git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k #\u4e0b\u8f7d powerlevel10k  \n\ngit clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions # \u4e0b\u8f7d zsh-autosuggestions \u63d2\u4ef6\n\ngit clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting # \u4e0b\u8f7d zsh-syntax-highlighting \u63d2\u4ef6\n\n# \u5728 ~/.zshrc \u914d\u7f6e ohmyzsh\nZSH_THEME = \"powerlevel10k/powerlevel10k\"\nexport PATH=\"$PATH:/usr/local/bin:/usr/local/sbin\" # \u52a0\u5165\u5230\u73af\u5883\u53d8\u91cf, \u6839\u636e\u5305\u7ba1\u7406\u5668\u5b89\u88c5\u4f4d\u7f6e\nplugins=(git zsh-autosuggestions z extract) # \u52a0\u5165\u63d2\u4ef6\n\n\nhost_ip=$(cat /etc/resolv.conf |grep \"nameserver\" |cut -f 2 -d \" \") # \u83b7\u53d6 wsl \u5bbf\u4e3b\u673a\u7684 ip \u5730\u5740\nproxy () {\n    export all_proxy=\"socks5://127.0.0.1:1080\"\n    export http_proxy=\"socks5://127.0.0.1:1080\"\n    export https_proxy=\"socks5://127.0.0.1:1080\" # \u914d\u7f6e\u4ee3\u7406\n}\n\n# \u91cd\u542f\u81ea\u52a8\u914d\u7f6e\u5916\u89c2\np10k configure # \u91cd\u65b0\u914d\u7f6e\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#neovim","title":"neovim","text":"<pre><code>brew install neovim # \u5b89\u88c5 \n\nmkdir ~/.config/nvim\ngit clone https://www.lazyvim.org/installation\n# \u5efa\u7acb lazyvim \u914d\u7f6e\u6587\u4ef6\n\n# zsh \u4e2d\u914d\u7f6e\nexport EDITOR=nvim\n</code></pre> <pre><code>-- \u5728 options.lua \u6539\u4e00\u4e0b\u7f29\u8fdb\nlocal opt = vim.opt\nopt.shiftwidth = 4\n</code></pre> <pre><code>nvim\n:Mason\n\u968f\u4fbf\u4e0b\u559c\u6b22\u7684 LSP\n\n\u5b8c\u7f8e\u5f00\u7bb1\u5373\u7528\n\u5176\u5b9e\u53d8\u6210\u4e86 vim \u6a21\u5f0f\u7684 IDE\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#lazygit","title":"lazygit","text":"<ul> <li>\u51e0\u4e4e\u4e0d\u7528\u914d\u7f6e</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#yazi","title":"yazi","text":"<p>\u7ec8\u7aef\u6587\u4ef6\u7ba1\u7406\u5668 yazi</p> <pre><code>brew install yazi ffmpegthumbnailer unar jq poppler fd ripgrep fzf zoxide tldr mcfly xclip\n</code></pre> <pre><code>\u4ee5\u4e0b\u662f yazi \u9700\u8981\u7684\u7a0b\u5e8f, \u4e00\u8d77\u4e0b\u4e86\nffmpegthumbnailer \u89c6\u9891\u7f29\u7565\u56fe\nunar \u6587\u4ef6\u9884\u89c8\njq JSON \u9884\u89c8\npoppler PDF \u9884\u89c8\nfd \u6587\u4ef6\u641c\u7d22\nrg \u6587\u4ef6\u5185\u5bb9\u641c\u7d22\nfzf \u7528\u4e8e\u5feb\u901f\u6587\u4ef6\u5b50\u6811\u5bfc\u822a\nzoxide \u7528\u4e8e\u5386\u53f2\u76ee\u5f55\u5bfc\u822a\nxclip \u652f\u6301\u7cfb\u7edf\u526a\u8d34\u677f\n</code></pre> <ul> <li>\u5b98\u65b9\u63a8\u8350\u914d\u7f6e\u503c\u5f97\u53c2\u8003, \u5e76\u4e14\u6587\u6863\u4e2d\u7684\u914d\u7f6e\u65b9\u6cd5\u975e\u5e38\u8be6\u5c3d</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#unix_1","title":"\u73b0\u4ee3 unix \u5de5\u5177","text":"<p>\u6392\u9664\u6389\u4e00\u4e9b\u4e2a\u4eba\u4e0d\u559c\u6b22\u7684</p> <pre><code>tldr # \u7b80\u5316\u7684 man\nfzf # \u6a21\u7cca\u641c\u7d22\nrg # \u4ee3\u7801\u641c\u7d22\nfd # find\nlsd # ls\n\ndust # \u5206\u6790\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5\nduf # \u67e5\u770b\u6302\u8f7d\u8bbe\u5907\ndog # dig\nglances # top\nprocs # ps\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E5%B7%A5%E5%85%B7/%E7%BB%88%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/#_4","title":"\u8f6f\u4ef6","text":"<ul> <li>Qemu</li> <li>Lua</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Linux%E5%86%85%E6%A0%B8%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0/","title":"Linux \u5185\u6838\u8bbe\u8ba1\u4e0e\u5b9e\u73b0","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%BC%E8%AE%BA/","title":"\u64cd\u4f5c\u7cfb\u7edf\u5bfc\u8bba","text":"<ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u5bfc\u8bba - \u6700\u597d\u7684\u64cd\u4f5c\u7cfb\u7edf\u6559\u79d1\u4e66 - 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%BC%E8%AE%BA/#_2","title":"\u64cd\u4f5c\u7cfb\u7edf\u4ecb\u7ecd","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%BC%E8%AE%BA/#_3","title":"\u865a\u62df\u5316","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%BC%E8%AE%BA/#cpu","title":"cpu \u865a\u62df\u5316","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%BC%E8%AE%BA/#_4","title":"\u5185\u5b58\u865a\u62df\u5316","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%BC%E8%AE%BA/#_5","title":"\u5e76\u53d1\u63a7\u5236","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AF%BC%E8%AE%BA/#_6","title":"\u6301\u4e45\u5316","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3Linux%E5%86%85%E6%A0%B8/","title":"\u6df1\u5165\u7406\u89e3 Linux \u5185\u6838","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E4%BF%A1%E6%81%AF%E8%AE%BA/","title":"\u4fe1\u606f\u8bba","text":"<ul> <li>\u4fe1\u606f\u8bba\u57fa\u7840 \u6709\u70b9\u591a, \u6211\u53ea\u60f3\u4e86\u89e3\u65b9\u6cd5\u8bba... 3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%88%9D%E7%AD%89%E6%95%B0%E8%AE%BA/","title":"\u521d\u7b49\u6570\u8bba","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%88%9D%E7%AD%89%E6%95%B0%E8%AE%BA/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u300a\u79bb\u6563\u6570\u5b66\u53ca\u5176\u5e94\u7528\u300b- \u7ffb\u8bd1\u7248, \u5305\u542b\"\u79bb\u6563\u6570\u5b66\"\u548c\u7ec4\u5408\u6570\u5b66/\u521d\u7b49\u6570\u8bba\u7b49\u5185\u5bb9 - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%88%9D%E7%AD%89%E6%95%B0%E8%AE%BA/#_3","title":"\u6a21\u4e0e\u7d20\u6570","text":"<ul> <li>\\(a \\mid b\\) \\(\\Leftrightarrow\\) \\(a\\)\u6574\u9664\\(b\\) \\(\\Leftrightarrow\\) \\(b\\)\u662f\\(a\\)\u7684\u500d\u6570</li> <li>\\(a \\equiv b \\pmod{c}\\) \\(\\Leftrightarrow\\) \\(a=b+kc\\)(\\(k\\)\u4e3a\u6574\u6570)</li> <li>\u6a21\\(m\\)\u7b97\u672f: \u8fd0\u7b97\u6570\u5728\\(\\mathbb{Z}_m\\)\u8303\u56f4\u5185, \u7ed3\u679c\u53d6\u6a21\\(m\\), \u7ed3\u679c\u96c6\u5408\u4e3a\\(\\mathbb{Z}_m\\)</li> <li>\u6a21\u6307\u6570\u8fd0\u7b97: \\((b^a)\\%m = (b \\cdot (b^{a-1}\\%m))\\%m\\)(\u53ef\u7ed3\u5408\u5feb\u901f\u5e42\u4f18\u5316)</li> <li>\u57c3\u62c9\u6258\u65af\u7279\u5c3c\u7b5b\u6cd5: \u5bfb\u627e\u5c0f\u4e8e\\(n\\)\u7684\u7d20\u6570, \u6bcf\u9047\u5230\u7d20\u6570\u5c31\u6807\u8bb0\u5176\u500d\u6570\u4e3a\u5408\u6570</li> <li>\u7d20\u6570\u5b9a\u7406: \u5c0f\u4e8e\\(n\\)\u7684\u7d20\u6570\u4e2a\u6570\\(\\sim \\frac{n}{\\ln n}\\)</li> <li>\u6b27\u62c9\u51fd\u6570\\(\\phi(n)\\): \u5c0f\u4e8e\\(n\\)\u7684\u6b63\u6574\u6570\u4e2d\u4e0e\\(n\\)\u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%88%9D%E7%AD%89%E6%95%B0%E8%AE%BA/#gcdlcm","title":"GCD/LCM","text":"<ul> <li>\\(\\gcd(a, b)\\)/\\(lcm(a, b)\\) = \u6240\u6709\u7d20\u56e0\u5b50\u7684\u6700\u5c0f/\u6700\u5927\u5e42\u6b21\u4e58\u79ef</li> <li>\\(ab = \\gcd(a, b) \\cdot lcm(a, b)\\)</li> <li>\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5: \\(a=bq+r \\Rightarrow \\gcd(a, b)=\\gcd(b, r)\\)</li> <li>\u8d1d\u7956\u5b9a\u7406: \u5b58\u5728\u6574\u6570\\(x, y\\)\u4f7f\u5f97\\(ax+by=\\gcd(a, b)\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%88%9D%E7%AD%89%E6%95%B0%E8%AE%BA/#_4","title":"\u540c\u4f59","text":"<ul> <li>\u540c\u4f59\u65b9\u7a0b\\(ax \\equiv b \\pmod{m}\\): </li> <li>\u82e5\\(\\gcd(a, m)=1\\), \u5219\u5b58\u5728\u552f\u4e00\u9006\u5143\\(a'\\)\u4f7f\u5f97\\(aa' \\equiv 1 \\pmod{m}\\)</li> <li>\\(a'\\)\u53ef\u901a\u8fc7\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5\u6c42\u5f97</li> <li>\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406(CRT): </li> <li>\u5bf9\u4e8e\u65b9\u7a0b\u7ec4\\(x \\equiv b_i \\pmod{m_i}\\)(\\(m_i\\)\u4e24\u4e24\u4e92\u8d28)</li> <li>\u5b58\u5728\u552f\u4e00\u89e3\\(x \\equiv \\sum b_i M_i M_i' \\pmod{\\prod m_i}\\)</li> <li>(\u5176\u4e2d\\(M_i = \\prod_{j\\neq i} m_j\\), \\(M_i'\\)\u4e3a\\(M_i\\)\u6a21\\(m_i\\)\u7684\u9006\u5143)</li> <li>\u5176\u610f\u4e49\u5728\u4e8e\u5c06\u4ee5\u5927\u6570\u5206\u89e3\u4e3a\u4e92\u8d28\u7684\u56e0\u6570, \u4efb\u610f\u5c0f\u4e8e\u5927\u6570\u7684\u6570\u90fd\u53ef\u4ee5\u552f\u4e00\u8868\u793a\u4e3a\u5bf9\u4e8e\u6bcf\u4e2a\u56e0\u6570\u7684\u6a21\u7684\u4f59\u6570\u7684\u7ebf\u6027\u7ec4\u5408 (\u5c31\u662f b1-bn) \u56e0\u6b64\u53ef\u4ee5\u5206\u5f00\u8ba1\u7b97, \u6700\u540e\u518d\u5c06\u7ed3\u679c\u5408\u5e76\u590d\u539f</li> <li>\u8d39\u9a6c\u5c0f\u5b9a\u7406: \u82e5\\(p\\)\u4e3a\u7d20\u6570\u4e14\\(p \\nmid a\\), \u5219\\(a^{p-1} \\equiv 1 \\pmod{p}\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%88%9D%E7%AD%89%E6%95%B0%E8%AE%BA/#_5","title":"\u4f2a\u7d20\u6570","text":"<ul> <li>\u82e5\\(a^{n-1} \\equiv 1 \\pmod{n}\\)\u4f46\\(n\\)\u4e3a\u5408\u6570, \u79f0\\(n\\)\u4e3a\u4ee5\\(a\\)\u4e3a\u5e95\u7684\u4f2a\u7d20\u6570</li> <li>\u5361\u7c73\u5207\u5c14\u6570: \u5bf9\u6240\u6709\u4e0e\\(n\\)\u4e92\u8d28\u7684\\(a\\)\u90fd\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u5408\u6570</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%88%9D%E7%AD%89%E6%95%B0%E8%AE%BA/#_6","title":"\u539f\u6839","text":"<ul> <li>\u8bbe\\(p\\)\u4e3a\u7d20\u6570, \\(r\\)\u4e0e\\(p\\)\u4e92\u8d28, \u6700\u5c0f\u7684\\(k\\)\u4f7f\u5f97\\(r^k \\equiv 1 \\pmod{p}\\)\u79f0\u4e3a\\(r\\)\u7684\u9636</li> <li>\u82e5\\(r\\)\u7684\u9636\u7b49\u4e8e\\(\\phi(p)=p-1\\), \u5219\u79f0\\(r\\)\u4e3a\\(p\\)\u7684\u539f\u6839</li> <li>\u79bb\u6563\u5bf9\u6570: \u82e5\\(r^e \\equiv a \\pmod{p}\\), \u5219\u8bb0\\(e=\\log_r a\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%88%9D%E7%AD%89%E6%95%B0%E8%AE%BA/#_7","title":"\u5e94\u7528","text":"<ul> <li>\u6563\u5217\u51fd\u6570\u8bbe\u8ba1</li> <li>\u4f2a\u968f\u673a\u6570\u751f\u6210: \\(X_{n+1} \\equiv (aX_n + b) \\pmod{m}\\)(\u8981\u6c42\\(\\gcd(a, m)=\\gcd(b, m)=1\\))</li> <li>\u6821\u9a8c\u7801(\u5982 CRC)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/","title":"\u56fe\u8bba","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u7535\u79d1\u5927\u79bb\u6563\u6570\u5b66 - \u6807\u51c6\u79bb\u6563\u6570\u5b66 - 3</li> <li>\u79bb\u6563\u6570\u5b66\u53ca\u5176\u5e94\u7528 - \u7ffb\u8bd1\u7248, \u5305\u62ec \"\u79bb\u6563\u6570\u5b66\" \u548c\u7ec4\u5408\u6570\u5b66 / \u521d\u7b49\u6570\u8bba /... - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_3","title":"\u57fa\u672c","text":"<ul> <li>\u8fb9 / \u5f27, \u9876\u70b9 / \u5f27\u5934\u5f27\u5c3e</li> <li>\u4ee5\u6709\u5411 / \u65e0\u5411, \u662f\u5426\u591a\u91cd\u8fb9, \u662f\u5426\u5141\u8bb8\u81ea\u73af\u6765\u533a\u5206\u56fe\u7c7b\u578b</li> <li>\u5ea6 / \u51fa\u5ea6\u5165\u5ea6</li> <li>\u6839\u636e\u8fd9\u4e9b\u5b9a\u4e49\u53ef\u4ee5\u663e\u7136\u63a8\u5f97\u4e00\u4e9b\u6570\u91cf\u5173\u7cfb</li> <li>\u5e26\u6743 (\u6307\u8fb9 / \u5f27) \u56fe\u4ea6\u79f0\u7f51</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_4","title":"\u7279\u6b8a\u7684\u7b80\u5355\u56fe","text":"<ul> <li>\u5b8c\u5168\u56fe, \u6bcf\u5bf9\u9876\u70b9\u90fd\u6709\u8fb9 (\u8868\u793a\u4e3a \\(K_n\\))</li> <li>\u5708\u56fe, \u5b57\u9762\u610f\u601d</li> <li>\u8f6e\u56fe, \u52a0\u4e00\u4e2a\u4e0e\u5176\u5b83\u6240\u6709\u9876\u70b9\u6709\u8fb9\u7684\u9876\u70b9\u7684\u5708\u56fe</li> <li>n \u7acb\u65b9\u4f53\u56fe, \u5b57\u9762\u610f\u601d</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_5","title":"\u4e8c\u5206\u56fe","text":"<ul> <li>\u5206\u4fe9\u96c6\u5408, \u4ec5\u4e0e\u5bf9\u65b9\u96c6\u5408\u9876\u70b9\u5b58\u5728\u8fb9</li> <li>\u5b8c\u5168\u4e8c\u5206\u56fe, \u5b57\u9762, \u8868\u793a\u4e3a \\(K_{n, m}\\)</li> <li>\u7279\u522b\u7684, \u82e5\u4e8c\u5206\u56fe\u7684\u8fb9\u96c6\u5408\u7684\u4e00\u4e2a\u5b50\u96c6\u4e2d\u6ca1\u6709\u4e24\u8fb9\u5173\u8054\u540c\u4e00\u9876\u70b9, \u79f0\u4e4b\u4e3a\u5339\u914d<ul> <li>\u6700\u591a\u8fb9\u7684\u5339\u914d\u4e3a\u6700\u5927\u5339\u914d, \u53cd\u4e4b\u540c\u7406</li> </ul> </li> <li>\u970d\u5c14\u5a5a\u914d\u5b9a\u5f8b, \u82e5\u4e8c\u5206\u56fe\u4e00\u4e2a\u70b9\u96c6\u7684\u4efb\u610f\u975e\u7a7a\u5b50\u96c6\u7684\u57fa\u90fd\u5c0f\u4e8e\u7b49\u4e8e\u5176\u90bb\u63a5\u70b9\u96c6\u7684\u57fa, \u5219\u6709\u5b8c\u5168\u5339\u914d<ul> <li>\\(\\forall S \\subseteq \\mathcal{X}, \\ |N(S)| \\geq |S| \\Rightarrow \\exists \\mathcal{X}-\\text{\u5b8c\u5168\u5339\u914d}\\)</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_6","title":"\u5b50\u56fe","text":"<ul> <li>\u5c06\u4e24\u4e2a\u90bb\u63a5\u9876\u70b9\u53d8\u4e3a\u4e00\u4e2a\u9876\u70b9 (\u5e76\u5220\u9664\u76f8\u5e94\u7684\u8fb9), \u79f0\u4e3a\u6536\u7f29</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_7","title":"\u56fe\u7684\u8868\u793a","text":"<ul> <li>\u90bb\u63a5\u8868 / \u90bb\u63a5\u77e9\u9635, \u6309\u56fe\u7684\u758f\u5bc6\u9009\u62e9</li> <li>\u5173\u8054\u77e9\u9635, \u63cf\u8ff0\u8fb9\u70b9\u662f\u5426\u5173\u8054</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_8","title":"\u540c\u6784","text":"<ul> <li>~~\u7ed3\u6784\u4e00\u6837~~</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_9","title":"\u8fde\u901a\u6027","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_10","title":"\u65e0\u5411\u56fe\u8fde\u901a\u6027","text":"<ul> <li>\u8def\u5f84 / \u73af</li> <li>\u65e0\u5411\u56fe\u4e24\u9876\u70b9\u6709\u8def\u5f84\u4e3a\u8fde\u901a, \u65e0\u5411\u56fe\u4efb\u610f\u4e24\u70b9\u8fde\u901a\u4e3a\u8fde\u901a\u56fe</li> <li>\u82e5\u80fd\u5220\u9664\u4e00\u4e2a\u70b9, \u4f7f\u8fde\u901a\u56fe\u4e0d\u8fde\u901a, \u79f0\u4e3a\u5272\u70b9</li> <li>\u6709 k \u4e2a\u5272\u70b9\u7684\u56fe\u79f0\u4e3a k \u8054\u901a\u56fe</li> <li>\u6781\u5927 (\u6700\u591a\u9876\u70b9) \u8fde\u901a\u5b50\u56fe (\u5305\u542b\u4f9d\u9644\u7684\u8fb9) \u79f0\u4e3a\u56fe\u7684\u8fde\u901a\u5206\u91cf</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_11","title":"\u6709\u5411\u56fe\u8fde\u901a\u6027","text":"<ul> <li>\u6709\u5411\u56fe\u5f3a\u8fde\u901a\u8981\u6c42\u53cc\u5411\u5b58\u5728\u8def\u5f84, \u5426\u5219\u4e3a\u5f31\u8054\u901a</li> <li>\u5f3a\u8fde\u901a\u5206\u91cf</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_12","title":"\u6b27\u62c9\u901a\u8def\u4e0e\u54c8\u5bc6\u987f\u901a\u8def (\u90fd\u662f\u7b80\u5355\u8def\u5f84!!!)","text":"<ul> <li>\u6b27\u62c9\u901a\u8def / \u56de\u8def, \u8981\u6c42\u5305\u542b\u6bcf\u4e00\u6761\u8fb9<ul> <li>\\(\\forall v \\in V, \\ \\deg(v) \\equiv 0 \\pmod{2} \\Rightarrow \\text{\u6b27\u62c9\u56de\u8def}\\)</li> <li>\\(\\exists!\\, u, v \\in V, \\ \\deg(u) \\equiv \\deg(v) \\equiv 1 \\pmod{2} \\Rightarrow \\text{\u6b27\u62c9\u901a\u8def\u4e14\u4e0d\u4e3a\u56de\u8def}\\)</li> </ul> </li> <li>\u54c8\u5bc6\u987f\u901a\u8def / \u56de\u8def, \u8981\u6c42\u5305\u542b\u6bcf\u4e00\u4e2a\u70b9<ul> <li>\\(n \\geq 3 \\ \\land\\ \\forall v \\in V, \\ \\deg(v) \\geq \\lceil n/2 \\rceil \\Rightarrow \\text{\u54c8\u5bc6\u987f\u56de\u8def\u5b58\u5728}\\)</li> <li>\\(n \\geq 3 \\ \\land\\ \\forall u \\nsim v, \\ \\deg(u)+\\deg(v) \\geq n \\Rightarrow \\text{\u54c8\u5bc6\u987f\u56de\u8def\u5b58\u5728}\\)</li> <li>\u6ca1\u627e\u5230\u53ef\u9ad8\u6548\u8ba1\u7b97\u7684\u54c8\u5bc6\u987f\u5145\u8981</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_13","title":"\u5e73\u9762\u56fe","text":"<ul> <li>\u753b\u51fa\u6765\u6ca1\u4ea4\u70b9</li> <li>\u5e73\u9762\u56fe\u5206\u5272\u7684 \\(\u9762\u6570 r = \u8fb9\u6570 e - \u70b9\u6570 v + 2\\)</li> <li>\u53ef\u4ee5\u63a8\u51fa, \u8054\u901a\u5e73\u9762\u7b80\u5355\u56fe<ul> <li>\\(v \\geq 3 \\Rightarrow e \\leq (3*v - 6)\\)</li> <li>$\\exists v \\in V, \\ \\deg(v) \\leq 5 $</li> <li>\\(v \\geq 3 \\ \\land \\ \\text{\u65e0\u957f\u5ea6\u4e3a 3 \u7684\u56de\u8def} \\Rightarrow e \\leq 2v - 4\\)</li> <li>\u53ef\u4ee5\u68c0\u9a8c\u5e73\u9762\u56fe</li> </ul> </li> <li>\u82e5\u4e00\u4e2a\u56fe\u53ef\u4ee5\u901a\u8fc7\u521d\u7b49\u7ec6\u5206 (~~\u628a\u4e00\u6761\u8fb9\u63b0\u65ad~~) \u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u56fe, \u5219\u79f0\u540c\u80da</li> <li>\u5e73\u9762\u56fe \\(\\Leftrightarrow\\) \u4e0d\u5b58\u5728\u5b50\u56fe\u540c\u80da\u4e8e \\(K_5 / K_{3, 3}\\)</li> <li>\u56db\u8272\u5b9a\u7406</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_14","title":"\u6811","text":"<ul> <li>\u6ca1\u6709\u7b80\u5355\u56de\u8def\u7684\u8fde\u901a\u65e0\u5411\u56fe</li> <li>\u68ee\u6797\u6307\u4e0d\u76f8\u4ea4\u7684\u6811\u7684\u96c6\u5408 (\u4e0d\u8fde\u901a)</li> <li>\\(\u6811\u7684\u8fb9\u6570 e = \u8282\u70b9\u6570 v - 1\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_15","title":"\u6709\u6839\u6027","text":"<ul> <li>\u5b9a\u4e49\u6839, \u4f7f\u8fb9\u5177\u6709\u8fdc\u79bb\u6839\u7684\u65b9\u5411</li> <li>\u8282\u70b9\u7684\u5b50\u6811\u6570\u662f\u8282\u70b9\u7684\u5ea6, \u5ea6\u4e3a 0 \u7684\u8282\u70b9\u662f\u53f6\u8282\u70b9 / \u7ec8\u7aef\u8282\u70b9, \u53cd\u4e4b\u662f\u975e\u7ec8\u7aef\u8282\u70b9 / \u5206\u652f\u8282\u70b9, \u975e\u6839\u7684\u5206\u652f\u8282\u70b9\u4e5f\u53eb\u5185\u90e8\u8282\u70b9</li> <li>\u5177\u6709 \\(i\\) \u4e2a\u5185\u70b9\u7684\u6811\u6709 \\(m*i+1\\) \u4e2a\u8282\u70b9</li> <li>\u6811\u7684\u5ea6\u662f\u6811\u5185\u5404\u8282\u70b9\u5ea6\u7684\u6700\u5927\u503c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_16","title":"\u6df1\u5ea6","text":"<ul> <li>\u6811\u6700\u5927\u8282\u70b9\u5c42\u6b21\u662f\u6811\u7684\u6df1\u5ea6</li> <li>\u6811\u6700\u591a\u6709 \\(h^m\\) (\u6df1\u5ea6\\(h\\), \u53c9\u6570\\(m\\)) \u4e2a\u53f6\u5b50</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_17","title":"\u4e8c\u53c9\u6811","text":"<ul> <li>\\(\\mathcal{B} = {\\emptyset} \\cup { (v, L, R) \\mid v \\in V, \\ L, R \\in \\mathcal{B} }\\) <ul> <li>\u7a7a\u6811\u6216\u7531\u6839\u8282\u70b9\u3001\u5de6\u5b50\u6811\u3001\u53f3\u5b50\u6811\u9012\u5f52\u6784\u6210</li> </ul> </li> <li>\u53ea\u6709\u5de6 / \u53f3\u7684\u4e8c\u53c9\u6811\u5373\u659c\u6811 (\u94fe\u8868\u5c31\u662f)</li> <li>\u6ee1\u4e8c\u53c9\u6811: \u6240\u6709\u53f6\u8282\u70b9\u90fd\u5728\u540c\u4e00\u5c42\u7684\u4e8c\u53c9\u6811 (\\(2^n-1\\) \u4e2a\u8282\u70b9)</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811: \u9664\u4e86\u53f6\u8282\u70b9, \u6240\u6709\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b69\u5b50\u7684\u4e8c\u53c9\u6811 (\u6ee1\u4e8c\u53c9\u6811\u7684\u5b50\u96c6)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_18","title":"\u6811\u7684\u904d\u5386","text":"<ul> <li>\u7565</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_19","title":"\u751f\u6210\u6811","text":"<ul> <li>\u8fde\u901a\u56fe\u7684\u6781\u5c0f (\u5305\u542b\u6240\u6709\u70b9\u4e0e\u6b64\u60c5\u51b5\u7684\u6700\u5c11\u8fb9 (\\(n-1\\))) \u8fde\u901a\u5b50\u56fe\u79f0\u4e3a\u751f\u6210\u6811</li> <li>\u6709\u5411\u56fe\u4e2d\u6709\u4e00\u9876\u70b9\u5165\u5ea6\u4e3a 0, \u5176\u4f59\u4e3a 1 \u79f0\u6709\u5411\u6811</li> <li>\u6709\u5411\u56fe\u53bb\u6389\u4e00\u4e9b\u5f27\u81f3\u5176\u4ec5\u7531\u6709\u5411\u6811\u6784\u6210\u79f0\u5176\u4e3a\u56fe\u7684\u6709\u5411\u68ee\u6797</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%9B%BE%E8%AE%BA/#_20","title":"\u7f51\u8def\u6d41","text":"<ul> <li>\u89c1\u7b97\u6cd5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%BE%AE%E7%A7%AF%E5%88%86/","title":"\u5fae\u79ef\u5206","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%BE%AE%E7%A7%AF%E5%88%86/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>3b1b - \u4ecb\u7ecd\u5fae\u79ef\u5206 / \u7ebf\u6027\u4ee3\u6570\u7684 \"\u672c\u8d28\" - 5</li> <li>\u5b8b\u6d69 - \u5e94\u8bd5, \u6709\u4e9b\u5197\u4f59 - 3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%BE%AE%E7%A7%AF%E5%88%86/#_3","title":"\u51fd\u6570","text":"<ul> <li>\u5355\u5c04: \\(\\forall x_1, x_2 \\in X, \\ f (x_1)=f (x_2) \\Rightarrow x_1=x_2\\)</li> <li>\u6ee1\u5c04: \\(\\forall y \\in Y, \\ \\exists x \\in X, \\ f (x)=y\\)</li> <li>\u53cc\u5c04</li> <li>\u8fde\u7eed\u6027\u4e0e\u53ef\u5bfc\u6027</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%BE%AE%E7%A7%AF%E5%88%86/#_4","title":"\u6781\u9650","text":"<ul> <li>\u9636</li> <li>\u91cd\u8981\u6781\u9650:</li> </ul> \\[ \\begin {cases} \\lim_{x \\to 0} \\frac {\\sin x}{x} = 1\\\\ \\lim_{x \\to \\infty} \\left (1+\\frac1x\\right)^x = e \\end {cases} \\]"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%BE%AE%E7%A7%AF%E5%88%86/#_5","title":"\u5bfc\u6570","text":"<ul> <li>\u65b9\u5411\u5bfc\u6570</li> <li>\u68af\u5ea6 \u4e00\u4e2a\u504f\u5bfc\u6570\u7279\u5f81</li> <li>\u504f\u5bfc\u6570 \u6b63\u4ea4\u65b9\u5411\u5bfc\u6570</li> <li>\u5bfc\u6570\u8868</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%BE%AE%E7%A7%AF%E5%88%86/#_6","title":"\u5fae\u5206","text":"<ul> <li>\u5168\u5fae\u5206 \u5404\u65b9\u5411\u5fae\u5206\u5408\u5e76</li> <li>\u4e2d\u503c\u5b9a\u7406 \u63ed\u793a\u53ef\u5bfc\u610f\u5473\u7684\"\u5e73\u6ed1\"</li> <li>\u5fae\u5206\u65b9\u7a0b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%BE%AE%E7%A7%AF%E5%88%86/#_7","title":"\u79ef\u5206","text":"<ul> <li>\u4e0d\u5b9a\u79ef\u5206</li> <li>\u5b9a\u79ef\u5206: \\(\\int_a^b f(x)dx = F(b) - F(a) \\quad\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%BE%AE%E7%A7%AF%E5%88%86/#_8","title":"\u591a\u91cd\u79ef\u5206","text":"<ul> <li>\u4e8c\u91cd\u79ef\u5206: \\(\\iint_D f(x, y) \\, dxdy = \\int_{a}^{b} \\int_{c(x)}^{d(x)} f(x, y) \\, dydx\\)</li> <li>\u4e09\u91cd\u79ef\u5206: \\(\\iiint_V f(x, y, z) \\, dxdydz = \\int_{a}^{b} \\int_{c(x)}^{d(x)} \\int_{p(x, y)}^{q(x, y)} f(x, y, z) \\, dzdydx\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%BE%AE%E7%A7%AF%E5%88%86/#_9","title":"\u79ef\u5206\u6280\u5de7","text":"<ul> <li> <p>\u6362\u5143\u79ef\u5206\u6cd5: \\(\\int f(g(x))g'(x)dx = \\int f(u)du \\quad (u = g(x)\\))</p> </li> <li> <p>\u5206\u90e8\u79ef\u5206\u6cd5: \\(\\int u \\, dv = uv - \\int v \\, du\\)</p> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E5%BE%AE%E7%A7%AF%E5%88%86/#_10","title":"\u7ea7\u6570","text":"<ul> <li>\u655b\u6563\u6027\u5224\u5b9a</li> <li>\u6cf0\u52d2\u5c55\u5f00: \\(f (x) = \\sum_{n=0}^\\infty \\frac {f^{(n)}(a)}{n!}(x-a)^n\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/","title":"\u62bd\u8c61\u4ee3\u6570","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>AI - \u95ee\u5c31\u884c\u4e86 - 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_3","title":"\u7fa4","text":"<ul> <li>\u5b9a\u4e49\u96c6\u5408 G \u4e0a\u5c01\u95ed (\u7ed3\u679c\u8fd8\u5728\u96c6\u5408\u4e0a) \u7684\u4e8c\u5143\u8fd0\u7b97 <code>*</code><ul> <li>\u6ee1\u8db3\u7ed3\u5408\u5f8b</li> <li>\u5b58\u5728\u5355\u4f4d\u5143 e , \u5bf9\u4efb\u610f <code>a, b\u2208G</code>, \u6709 <code>a*e=e*a=a</code></li> <li>\u9006\u5143: \u5bf9\u4e8e\u4efb\u610f <code>a\u2208G</code>, \u5b58\u5728 <code>b\u2208G</code>, \u4f7f\u5f97 <code>a*b=b*a=e</code></li> <li>\u5219\u79f0 G \u5728 <code>*</code> \u4e0b\u4e3a\u7fa4</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_4","title":"\u963f\u8d1d\u5c14\u7fa4","text":"<ul> <li>\u82e5 G \u5728 <code>*</code> \u4e0b\u4e3a\u7fa4, \u4e14 <code>*</code> \u6ee1\u8db3\u4ea4\u6362\u5f8b, \u5219 G \u5728 <code>*</code> \u4e0b\u4e3a\u963f\u8d1d\u5c14\u7fa4</li> <li>\u6211\u4eec\u5e38\u7528 <code>+</code> \u63cf\u8ff0\u963f\u8d1d\u5c14\u7fa4, \u56e0\u4e3a\u6570\u5b66\u5f53\u4e2d\u8bb8\u591a <code>*</code> \u4e0d\u5177\u6709\u4ea4\u6362\u5f8b, \u4f46\u52a0\u6cd5\u5f80\u5f80\u5177\u6709\u4ea4\u6362\u5f8b (\u597d\u770b)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_5","title":"\u5b50\u7fa4","text":"<ul> <li>\u82e5\u96c6\u5408 H \u4e3a G \u7684\u5b50\u96c6, \u4e14 H \u5728 G \u7684 <code>*</code> \u4e0b\u4e3a\u7fa4, \u5219\u79f0 H \u4e3a G \u7684\u5b50\u7fa4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_6","title":"\u966a\u96c6","text":"<ul> <li>\u82e5 a \u5c5e\u4e8e G , \u5219 <code>a*H</code> (\u6240\u6709 ah) \u4e3a\u96c6\u5408 H \u7684\u4e00\u4e2a\u966a\u96c6</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_7","title":"\u4e00\u822c\u7ebf\u6027\u7fa4","text":"<ul> <li>\u6240\u6709\u884c\u5217\u5f0f\u4e0d\u4e3a 0 \u7684 n \u9636\u65b9\u9635\u6784\u6210\u7684\u96c6\u5408\u5728 <code>*</code> \u4e0b\u6784\u6210\u4e00\u822c\u7ebf\u6027\u7fa4</li> <li>\u5b83\u4e0d\u662f\u4e00\u4e2a\u963f\u8d1d\u5c14\u7fa4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_8","title":"\u7279\u6b8a\u7ebf\u6027\u7fa4","text":"<ul> <li>\u6240\u6709\u884c\u5217\u5f0f\u4e3a 1 \u7684 n \u9636\u65b9\u9635\u6784\u6210\u7684\u96c6\u5408\u5728 <code>*</code> \u4e0b\u6784\u6210\u4e00\u822c\u7ebf\u6027\u7fa4</li> <li>\u5b83\u4e0d\u662f\u4e00\u4e2a\u963f\u8d1d\u5c14\u7fa4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_9","title":"\u5bf9\u79f0\u7fa4","text":"<ul> <li>\u6240\u6709\u4ece\u96c6\u5408 X \u5230\u81ea\u5df1\u7684\u53cc\u5c04\u6784\u6210\u7684\u96c6\u5408\u5728\u590d\u5408\u8fd0\u7b97\u4e0b\u6784\u6210\u5bf9\u79f0\u7fa4</li> <li>\u4e0d\u4e00\u5b9a\u662f\u963f\u8d1d\u5c14\u7fa4</li> <li>\u82e5 X \u662f {1, 2, 3, ..., n}, \u79f0\u4e00\u822c\u5bf9\u79f0\u7fa4 (\u7f6e\u6362\u7fa4, \u5143\u7d20\u4e4b\u95f4\u76f8\u5dee\u4e00\u6b21\u7f6e\u6362)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_10","title":"\u7fa4\u8bba\u5b8c\u6574\u7b14\u8bb0","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_11","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_12","title":"\u7fa4\u7684\u5b9a\u4e49","text":"<p>\u96c6\u5408\\(G\\)\u914d\u5907\u4e8c\u5143\u8fd0\u7b97\\(\\cdot\\)\u6ee1\u8db3\uff1a 1. \u5c01\u95ed\u6027\uff1a\\(\\forall a, b \\in G, a\\cdot b \\in G\\) 2. \u7ed3\u5408\u5f8b\uff1a\\((a\\cdot b)\\cdot c = a\\cdot (b\\cdot c)\\) 3. \u5355\u4f4d\u5143\uff1a\\(\\exists e \\in G, \\forall a \\in G, e\\cdot a = a\\cdot e = a\\)  4. \u9006\u5143\uff1a\\(\\forall a \\in G, \\exists a^{-1} \\in G, a\\cdot a^{-1} = e\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_13","title":"\u7fa4\u7684\u9636","text":"<p>\u6709\u9650\u7fa4\\(G\\)\u7684\u5143\u7d20\u4e2a\u6570\u8bb0\u4e3a\\(|G|\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_14","title":"\u4f8b\u5b50","text":"<ul> <li>\u5e73\u51e1\u7fa4\\(\\{e\\}\\)</li> <li>\u6574\u6570\u52a0\u6cd5\u7fa4\\((\\mathbb{Z}, +)\\)</li> <li>\u6a21\\(n\\)\u6574\u6570\u7fa4\\((\\mathbb{Z}/n\\mathbb{Z}, +)\\)</li> <li>\u5bf9\u79f0\u7fa4\\(S_n = \\{\\sigma: \\{1, ..., n\\} \\to \\{1, ..., n\\} \\mid \\sigma \\text{\u662f\u53cc\u5c04}\\}\\)</li> <li>\u4e8c\u9762\u4f53\u7fa4\\(D_n = \\langle r, s \\mid r^n = s^2 = e, srs = r^{-1}\\rangle\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_15","title":"\u5b50\u7fa4\u7406\u8bba","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_16","title":"\u5b50\u7fa4\u5224\u5b9a","text":"<p>\u975e\u7a7a\u5b50\u96c6\\(H \\subseteq G\\)\u662f\u5b50\u7fa4\u5f53\u4e14\u4ec5\u5f53\uff1a \\(\\forall a, b \\in H, ab^{-1} \\in H\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_17","title":"\u751f\u6210\u5b50\u7fa4","text":"<p>\u5bf9\\(S \\subseteq G\\), \u5b9a\u4e49\uff1a \\(\\langle S \\rangle = \\bigcap_{S \\subseteq H \\leq G} H\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_18","title":"\u966a\u96c6\u5206\u89e3","text":"<p>\u5bf9\u5b50\u7fa4\\(H \\leq G\\)\uff1a - \u5de6\u966a\u96c6\uff1a\\(gH = \\{gh \\mid h \\in H\\}\\) - \u53f3\u966a\u96c6\uff1a\\(Hg = \\{hg \\mid h \\in H\\}\\) - \u6307\u6570$[G:H] = $\u4e0d\u540c\u5de6\u966a\u96c6\u7684\u6570\u91cf</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#lagrange","title":"Lagrange \u5b9a\u7406","text":"<p>\u5bf9\u6709\u9650\u7fa4\\(G\\)\u548c\u5b50\u7fa4\\(H\\)\uff1a \\(|G| = [G:H] \\cdot |H|\\)</p> <p>\u63a8\u8bba\uff1a - \u5b50\u7fa4\u7684\u9636\u6574\u9664\u7fa4\u7684\u9636 - \u5143\u7d20\u9636\u6570\u6574\u9664\u7fa4\u7684\u9636</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_19","title":"\u6b63\u89c4\u5b50\u7fa4\u4e0e\u5546\u7fa4","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_20","title":"\u6b63\u89c4\u5b50\u7fa4","text":"<p>\\(N \\triangleleft G\\)\u5b9a\u4e49\u4e3a\uff1a \\(\\forall g \\in G, gN = Ng\\)</p> <p>\u7b49\u4ef7\u6761\u4ef6\uff1a - \\(\\forall g \\in G, gNg^{-1} = N\\) - \\(N\\)\u662f\u67d0\u4e2a\u540c\u6001\u7684\u6838</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_21","title":"\u5546\u7fa4\u6784\u9020","text":"<p>\u5bf9\\(N \\triangleleft G\\)\uff1a \\(G/N = \\{gN \\mid g \\in G\\}\\) \u8fd0\u7b97\uff1a\\((aN)(bN) = (ab)N\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_22","title":"\u7fa4\u540c\u6001","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_23","title":"\u5b9a\u4e49","text":"<p>\u6620\u5c04\\(\\phi: G \\to H\\)\u6ee1\u8db3\uff1a \\(\\phi(ab) = \\phi(a)\\phi(b)\\)</p> <p>\u6027\u8d28\uff1a - \\(\\phi(e_G) = e_H\\) - \\(\\phi(a^{-1}) = \\phi(a)^{-1}\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_24","title":"\u540c\u6001\u57fa\u672c\u5b9a\u7406","text":"<p>\u82e5\\(\\phi: G \\to H\\)\u662f\u540c\u6001, \u5219\uff1a \\(G/\\ker\\phi \\cong \\operatorname{im}\\phi\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_25","title":"\u7fa4\u4f5c\u7528","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_26","title":"\u5b9a\u4e49","text":"<p>\u7fa4\\(G\\)\u5728\u96c6\u5408\\(X\\)\u4e0a\u7684\u4f5c\u7528\u662f\u6620\u5c04\uff1a \\(G \\times X \\to X\\) \u6ee1\u8db3\uff1a 1. \\(e\\cdot x = x\\) 2. \\(g\\cdot(h\\cdot x) = (gh)\\cdot x\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_27","title":"\u8f68\u9053\u4e0e\u7a33\u5b9a\u5b50","text":"<ul> <li>\u8f68\u9053\uff1a\\(G\\cdot x = \\{g\\cdot x \\mid g \\in G\\}\\)</li> <li>\u7a33\u5b9a\u5b50\uff1a\\(G_x = \\{g \\in G \\mid g\\cdot x = x\\}\\)</li> </ul> <p>\u8f68\u9053\u516c\u5f0f\uff1a \\(|G\\cdot x| = [G:G_x]\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#sylow","title":"Sylow \u5b9a\u7406","text":"<p>\u8bbe\\(|G| = p^n m\\), \\(p \\nmid m\\)\uff1a 1. \u5b58\u5728\u9636\u4e3a\\(p^n\\)\u7684\u5b50\u7fa4(Sylow p-\u5b50\u7fa4) 2. \u6240\u6709 Sylow p-\u5b50\u7fa4\u5171\u8f6d 3. Sylow p-\u5b50\u7fa4\u6570\u91cf\\(n_p \\equiv 1 \\mod p\\)\u4e14\\(n_p \\mid m\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#abel","title":"\u6709\u9650\u751f\u6210 Abel \u7fa4\u5206\u7c7b","text":"<p>\u4efb\u4f55\u6709\u9650\u751f\u6210 Abel \u7fa4\u540c\u6784\u4e8e\uff1a \\(\\mathbb{Z}^r \\oplus \\mathbb{Z}/d_1\\mathbb{Z} \\oplus \\cdots \\oplus \\mathbb{Z}/d_k\\mathbb{Z}\\) \u5176\u4e2d\\(d_1 \\mid \\cdots \\mid d_k\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_28","title":"\u91cd\u8981\u4f8b\u5b50","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_29","title":"\u5faa\u73af\u7fa4","text":"<p>\\(\\mathbb{Z}/n\\mathbb{Z} = \\langle a \\mid a^n = e\\rangle\\)</p> <p>\u6027\u8d28\uff1a - \u5b50\u7fa4\u4e0e\u5546\u7fa4\u4ecd\u4e3a\u5faa\u73af\u7fa4 - \u81ea\u540c\u6784\u7fa4\\(\\operatorname{Aut}(\\mathbb{Z}/n\\mathbb{Z}) \\cong (\\mathbb{Z}/n\\mathbb{Z})^\\times\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#s_n","title":"\u5bf9\u79f0\u7fa4\\(S_n\\)","text":"<ul> <li>\u5171\u8f6d\u7c7b\u7531 cycle type \u51b3\u5b9a</li> <li>\u4ea4\u9519\u7fa4\\(A_n \\triangleleft S_n\\), \\([S_n:A_n] = 2\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_30","title":"\u56db\u5143\u6570\u7fa4","text":"<p>\\(Q_8 = \\{\\pm1, \\pm i, \\pm j, \\pm k\\}\\) \u6ee1\u8db3\\(i^2 = j^2 = k^2 = ijk = -1\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_31","title":"\u7fa4\u5217","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_32","title":"\u6b63\u89c4\u5217","text":"<p>\\(G = G_0 \\triangleright G_1 \\triangleright \\cdots \\triangleright G_n = \\{e\\}\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_33","title":"\u5408\u6210\u5217","text":"<p>\u6bcf\u4e2a\u5546\u56e0\u5b50\\(G_i/G_{i+1}\\)\u662f\u5355\u7fa4</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#jordan-holder","title":"Jordan-H\u00f6lder \u5b9a\u7406","text":"<p>\u7fa4\u7684\u5408\u6210\u56e0\u5b50(\u4e0d\u8ba1\u987a\u5e8f)\u552f\u4e00\u786e\u5b9a</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_34","title":"\u81ea\u7531\u7fa4\u4e0e\u8868\u793a","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_35","title":"\u81ea\u7531\u7fa4","text":"<p>\\(F(X) = \\(\u7531\u96c6\u5408\\)X\\)\u751f\u6210\u7684\u81ea\u7531\u7fa4</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_36","title":"\u7fa4\u8868\u793a","text":"<p>\u540c\u6001\\(\\rho: G \\to GL(V)\\), \u5176\u4e2d\\(V\\)\u662f\u5411\u91cf\u7a7a\u95f4</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#first-isomorphism-theorem","title":"\u540c\u6784\u7b2c\u4e00\u5b9a\u7406 (First Isomorphism Theorem)","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_37","title":"\u5b9a\u7406\u9648\u8ff0","text":"<p>\u8bbe\\(\\phi: G \\to H\\)\u4e3a\u7fa4\u540c\u6001, \u5219\uff1a $$ G/\\ker\\phi \\cong \\operatorname{im}\\phi $$ \u5176\u4e2d\uff1a - \\(\\ker\\phi = \\{g \\in G \\mid \\phi(g) = e_H\\}\\) \u662f\u540c\u6001\u7684\u6838 - \\(\\operatorname{im}\\phi = \\{\\phi(g) \\mid g \\in G\\}\\) \u662f\u540c\u6001\u7684\u50cf</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_38","title":"\u8bc1\u660e\u6b65\u9aa4","text":"<ol> <li> <p>\u5b9a\u4e49\u5546\u6620\u5c04\uff1a    \\(\\bar{\\phi}: G/\\ker\\phi \\to \\operatorname{im}\\phi\\) \\(\\bar{\\phi}(g\\ker\\phi) = \\phi(g)\\)</p> </li> <li> <p>\u9a8c\u8bc1\u826f\u5b9a\u4e49\u6027\uff1a    \u82e5\\(g'\\ker\\phi = g\\ker\\phi\\), \u5219\\(g' = gk\\) (\\(k \\in \\ker\\phi\\))    \u4e8e\u662f\\(\\phi(g') = \\phi(gk) = \\phi(g)\\phi(k) = \\phi(g)e_H = \\phi(g)\\)</p> </li> <li> <p>\u540c\u6001\u6027\uff1a    \\(\\bar{\\phi}((g_1\\ker\\phi)(g_2\\ker\\phi)) = \\bar{\\phi}(g_1g_2\\ker\\phi) = \\phi(g_1g_2) = \\phi(g_1)\\phi(g_2) = \\bar{\\phi}(g_1\\ker\\phi)\\bar{\\phi}(g_2\\ker\\phi)\\)</p> </li> <li> <p>\u5355\u5c04\u6027\uff1a    \\(\\bar{\\phi}(g\\ker\\phi) = e_H \\Rightarrow \\phi(g) = e_H \\Rightarrow g \\in \\ker\\phi \\Rightarrow g\\ker\\phi = \\ker\\phi\\)\uff08\u5355\u4f4d\u5143\uff09</p> </li> <li> <p>\u6ee1\u5c04\u6027\uff1a    \u7531\\(\\operatorname{im}\\phi\\)\u7684\u5b9a\u4e49\u76f4\u63a5\u53ef\u5f97</p> </li> </ol>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_39","title":"\u51e0\u4f55\u89e3\u91ca","text":"<p>\u53ef\u5c06\u540c\u6001\u5206\u89e3\u4e3a\uff1a $$ G \\xrightarrow{\\pi} G/\\ker\\phi \\xrightarrow{\\cong} \\operatorname{im}\\phi \\hookrightarrow H $$ \u5176\u4e2d\uff1a - \\(\\pi\\)\u662f\u81ea\u7136\u6295\u5c04\uff08\u6ee1\u540c\u6001\uff09 - \u4e2d\u95f4\u662f\u540c\u6784 - \u6700\u540e\u662f\u5305\u542b\u6620\u5c04\uff08\u5355\u540c\u6001\uff09</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_40","title":"\u5e94\u7528\u5b9e\u4f8b","text":"<ol> <li> <p>\u884c\u5217\u5f0f\u540c\u6001\uff1a    \\(\\det: GL_n(\\mathbb{R}) \\to \\mathbb{R}^\\times\\) \\(\\ker\\det = SL_n(\\mathbb{R})\\)    \u5f97\u5230\uff1a    \\(GL_n(\\mathbb{R})/SL_n(\\mathbb{R}) \\cong \\mathbb{R}^\\times\\)</p> </li> <li> <p>\u6307\u6570\u6620\u5c04\uff1a    \\(\\exp: (\\mathbb{R}, +) \\to (\\mathbb{R}^+, \\times)\\) \\(\\ker\\exp = \\{0\\}\\)    \u5f97\u5230\uff1a    \\(\\mathbb{R}/\\{0\\} \\cong \\mathbb{R}^+\\)\uff08\u5e73\u51e1\u60c5\u5f62\uff09</p> </li> <li> <p>\u7b26\u53f7\u540c\u6001\uff1a    \\(\\operatorname{sgn}: S_n \\to \\{\\pm 1\\}\\) \\(\\ker\\operatorname{sgn} = A_n\\)    \u5f97\u5230\uff1a    \\(S_n/A_n \\cong \\mathbb{Z}/2\\mathbb{Z}\\)</p> </li> </ol>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_41","title":"\u5386\u53f2\u6ce8\u8bb0","text":"<p>\u8fd9\u4e2a\u5b9a\u7406\u6700\u65e9\u51fa\u73b0\u5728 Emmy Noether 1927 \u5e74\u7684\u5de5\u4f5c\u4e2d, \u5979\u7cfb\u7edf\u53d1\u5c55\u4e86\u540c\u8c03\u4ee3\u6570\u4e2d\u7684\u540c\u6784\u5b9a\u7406 \u7279\u6b8a\u60c5\u5f62\u5728 Dedekind \u548c Frobenius \u7684\u65e9\u671f\u5de5\u4f5c\u4e2d\u5df2\u6709\u4f53\u73b0 </p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_42","title":"\u63a8\u5e7f\u5f62\u5f0f","text":"<p>\u8fd9\u662f\u4e09\u4e2a\u540c\u6784\u5b9a\u7406\u4e2d\u7684\u7b2c\u4e00\u4e2a, \u5176\u4f59\u4e24\u4e2a\u662f\uff1a 1. \u7b2c\u4e8c\u540c\u6784\u5b9a\u7406\uff1a\\(H/(H\\cap N) \\cong HN/N\\) \uff08\\(H \\leq G\\), \\(N \\triangleleft G\\)\uff09 2. \u7b2c\u4e09\u540c\u6784\u5b9a\u7406\uff1a\\((G/N)/(M/N) \\cong G/M\\) \uff08\\(N \\triangleleft M \\triangleleft G\\)\uff09</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_43","title":"\u73af\u8bba\u5b8c\u6574\u7b14\u8bb0","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_44","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_45","title":"\u73af\u7684\u5b9a\u4e49","text":"<p>\u96c6\u5408\\(R\\)\u914d\u5907\u4e24\u4e2a\u4e8c\u5143\u8fd0\u7b97\\(+\\)\u548c\\(\\cdot\\)\u6ee1\u8db3\uff1a 1. \\((R, +)\\)\u662f Abel \u7fa4 2. \\((R, \\cdot)\\)\u662f\u534a\u7fa4 3. \u5206\u914d\u5f8b\uff1a    \\(a\\cdot(b+c) = a\\cdot b + a\\cdot c\\) \\((a+b)\\cdot c = a\\cdot c + b\\cdot c\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_46","title":"\u7279\u6b8a\u73af\u7c7b","text":"<ul> <li>\u4ea4\u6362\u73af\uff1a\u4e58\u6cd5\u53ef\u4ea4\u6362</li> <li>\u542b\u5e7a\u73af\uff1a\u5b58\u5728\u4e58\u6cd5\u5355\u4f4d\u5143\\(1_R\\)</li> <li>\u65e0\u96f6\u56e0\u5b50\u73af\uff1a\\(ab=0 \\Rightarrow a=0 \\lor b=0\\)</li> <li>\u6574\u73af\uff1a\u542b\u5e7a\u4ea4\u6362\u65e0\u96f6\u56e0\u5b50\u73af</li> <li>\u9664\u73af\uff1a\u975e\u96f6\u5143\u4e58\u6cd5\u6784\u6210\u7fa4</li> <li>\u57df\uff1a\u4ea4\u6362\u9664\u73af</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_47","title":"\u4f8b\u5b50","text":"<ul> <li>\u6574\u6570\u73af\\(\\mathbb{Z}\\)</li> <li>\u591a\u9879\u5f0f\u73af\\(F[x]\\)\uff08\\(F\\)\u4e3a\u57df\uff09</li> <li>\u77e9\u9635\u73af\\(M_n(R)\\)</li> <li>\u5269\u4f59\u7c7b\u73af\\(\\mathbb{Z}/n\\mathbb{Z}\\)</li> <li>\u56db\u5143\u6570\u73af\\(\\mathbb{H} = \\{a+bi+cj+dk \\mid a, b, c, d \\in \\mathbb{R}\\}\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_48","title":"\u5b50\u73af\u4e0e\u7406\u60f3","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_49","title":"\u5b50\u73af\u5224\u5b9a","text":"<p>\u5b50\u96c6\\(S \\subseteq R\\)\u662f\u5b50\u73af\u5f53\uff1a 1. \\((S, +)\\)\u662f\u5b50\u7fa4 2. \\(a, b \\in S \\Rightarrow ab \\in S\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_50","title":"\u7406\u60f3\u5b9a\u4e49","text":"<p>\u5b50\u96c6\\(I \\subseteq R\\)\u662f\u7406\u60f3\u5f53\uff1a 1. \\((I, +)\\)\u662f\u5b50\u7fa4 2. \\(\\forall r \\in R, a \\in I\\), \u6709\\(ra \\in I\\)\u548c\\(ar \\in I\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_51","title":"\u751f\u6210\u7406\u60f3","text":"<p>\u5bf9\\(A \\subseteq R\\)\uff1a \\((A) = \\bigcap_{A \\subseteq I \\unlhd R} I\\)</p> <p>\u4e3b\u7406\u60f3\uff1a\\((a) = \\{ra + as + na + \\sum x_iay_i \\mid r, s, x_i, y_i \\in R, n \\in \\mathbb{Z}\\}\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_52","title":"\u5546\u73af\u6784\u9020","text":"<p>\u5bf9\u7406\u60f3\\(I \\unlhd R\\)\uff1a \\(R/I = \\{r+I \\mid r \\in R\\}\\) \u8fd0\u7b97\uff1a \\((a+I)+(b+I) = (a+b)+I\\) \\((a+I)(b+I) = ab+I\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_53","title":"\u73af\u540c\u6001","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_54","title":"\u5b9a\u4e49","text":"<p>\u6620\u5c04\\(\\phi: R \\to S\\)\u6ee1\u8db3\uff1a 1. \\(\\phi(a+b) = \\phi(a)+\\phi(b)\\) 2. \\(\\phi(ab) = \\phi(a)\\phi(b)\\) \u82e5\\(R, S\\)\u542b\u5e7a\u5219\u901a\u5e38\u8981\u6c42\\(\\phi(1_R)=1_S\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_55","title":"\u540c\u6001\u57fa\u672c\u5b9a\u7406","text":"<p>\u82e5\\(\\phi: R \\to S\\)\u662f\u73af\u540c\u6001, \u5219\uff1a \\(R/\\ker\\phi \\cong \\operatorname{im}\\phi\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_56","title":"\u7279\u6b8a\u7406\u60f3","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_57","title":"\u7d20\u7406\u60f3","text":"<p>\u771f\u7406\u60f3\\(P\\)\u6ee1\u8db3\uff1a \\(ab \\in P \\Rightarrow a \\in P \\lor b \\in P\\)</p> <p>\u7b49\u4ef7\u6761\u4ef6\uff1a \\(R/P\\)\u662f\u6574\u73af</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_58","title":"\u6781\u5927\u7406\u60f3","text":"<p>\u771f\u7406\u60f3\\(M\\)\u6ee1\u8db3\uff1a \u4e0d\u5b58\u5728\u7406\u60f3\\(I\\)\u4f7f\u5f97\\(M \\subsetneq I \\subsetneq R\\)</p> <p>\u7b49\u4ef7\u6761\u4ef6\uff1a \\(R/M\\)\u662f\u57df</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_59","title":"\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"<p>\u8bbe\\(I_1, ..., I_n\\)\u662f\u4e24\u4e24\u4e92\u7d20\u7684\u7406\u60f3\uff08\\(I_i+I_j=R\\)\u5bf9\\(i \\neq j\\)\uff09, \u5219\uff1a $$ R/\\bigcap_{k=1}^n I_k \\cong \\prod_{k=1}^n R/I_k $$ \u7279\u522b\u5730, \u5bf9\\(\\mathbb{Z}\\)\u6709\uff1a \\(\\mathbb{Z}/mn\\mathbb{Z} \\cong \\mathbb{Z}/m\\mathbb{Z} \\times \\mathbb{Z}/n\\mathbb{Z}\\) \uff08\u5f53\\((m, n)=1\\)\uff09</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#ufd","title":"\u552f\u4e00\u5206\u89e3\u6574\u73af(UFD)","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_60","title":"\u5b9a\u4e49","text":"<p>\u6574\u73af\\(R\\)\u6ee1\u8db3\uff1a 1. \u6bcf\u4e2a\u975e\u96f6\u975e\u5355\u4f4d\u5143\u53ef\u5206\u89e3\u4e3a\u4e0d\u53ef\u7ea6\u5143\u4e58\u79ef 2. \u5206\u89e3\u5728\u76f8\u4f34\u610f\u4e49\u4e0b\u552f\u4e00</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_61","title":"\u4f8b\u5b50","text":"<ul> <li>\\(\\mathbb{Z}\\)</li> <li>\u57df\\(F\\)\u4e0a\u591a\u9879\u5f0f\u73af\\(F[x]\\)</li> <li>\u9ad8\u65af\u6574\u6570\u73af\\(\\mathbb{Z}[i]\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#pid","title":"\u4e3b\u7406\u60f3\u6574\u73af(PID)","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_62","title":"\u5b9a\u4e49","text":"<p>\u6574\u73af\\(R\\)\u6ee1\u8db3\u6bcf\u4e2a\u7406\u60f3\u90fd\u662f\u4e3b\u7406\u60f3</p> <p>\u6027\u8d28\uff1a - PID \u5fc5\u662f UFD - \u5b58\u5728\u975e PID \u7684 UFD\uff08\u5982\\(\\mathbb{Z}[x]\\)\uff09</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#ed","title":"\u6b27\u51e0\u91cc\u5f97\u6574\u73af(ED)","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_63","title":"\u5b9a\u4e49","text":"<p>\u5b58\u5728\u5ea6\u51fd\u6570\\(\\delta: R\\setminus\\{0\\} \\to \\mathbb{N}_0\\)\u4f7f\u5f97\uff1a \\(\\forall a, b \\neq 0\\), \u5b58\u5728\\(q, r\\)\u6ee1\u8db3\\(a=bq+r\\)\u4e14\\(r=0\\)\u6216\\(\\delta(r) &lt; \\delta(b)\\)</p> <p>\u4f8b\u5b50\uff1a - \\(\\mathbb{Z}\\)\u53d6\u7edd\u5bf9\u503c - \\(F[x]\\)\u53d6\u591a\u9879\u5f0f\u6b21\u6570</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_64","title":"\u8bfa\u7279\u73af","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_65","title":"\u5b9a\u4e49","text":"<p>\u6ee1\u8db3\u4ee5\u4e0b\u7b49\u4ef7\u6761\u4ef6\uff1a 1. \u7406\u60f3\u5347\u94fe\u6761\u4ef6 2. \u6bcf\u4e2a\u7406\u60f3\u6709\u9650\u751f\u6210 3. \u6bcf\u4e2a\u975e\u7a7a\u7406\u60f3\u96c6\u6709\u6781\u5927\u5143</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_66","title":"\u5e0c\u5c14\u4f2f\u7279\u57fa\u5b9a\u7406","text":"<p>\u82e5\\(R\\)\u662f\u8bfa\u7279\u73af, \u5219\\(R[x]\\)\u4e5f\u662f\u8bfa\u7279\u73af</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_67","title":"\u5c40\u90e8\u5316","text":"<p>\u5bf9\u4e58\u6cd5\u95ed\u96c6\\(S \\subseteq R\\)\uff08\\(1 \\in S\\), \\(s, t \\in S \\Rightarrow st \\in S\\)\uff09, \u5b9a\u4e49\uff1a \\(S^{-1}R = \\{(r, s) \\mid r \\in R, s \\in S\\}/\\sim\\) \u5176\u4e2d\\((r, s) \\sim (r', s')\\)\u5f53\u5b58\u5728\\(t \\in S\\)\u4f7f\\(t(rs'-r's)=0\\)</p> <p>\u8fd0\u7b97\uff1a \\((r, s)+(r', s') = (rs'+r's, ss')\\) \\((r, s)(r', s') = (rr', ss')\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_68","title":"\u5f20\u91cf\u79ef","text":"<p>\u5bf9\\(R\\)-\u6a21\\(M\\)\u548c\\(N\\), \u5b9a\u4e49\uff1a \\(M \\otimes_R N = F(M \\times N)/K\\) \u5176\u4e2d\\(F\\)\u662f\u81ea\u7531\\(R\\)-\u6a21, \\(K\\)\u662f\u7531\u53cc\u7ebf\u6027\u5173\u7cfb\u751f\u6210\u7684\u5b50\u6a21</p> <p>\u6027\u8d28\uff1a - \\(R \\otimes_R M \\cong M\\) - \\((M \\oplus N) \\otimes P \\cong (M \\otimes P) \\oplus (N \\otimes P)\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_69","title":"\u8303\u7574\u89c2\u70b9","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_70","title":"\u81ea\u7531\u73af","text":"<p>\u96c6\u5408\\(X\\)\u4e0a\u7684\u81ea\u7531\u73af\\(F(X)\\)\u7531\u6240\u6709\u975e\u4ea4\u6362\u591a\u9879\u5f0f\u7ec4\u6210</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_71","title":"\u6cdb\u6027\u8d28","text":"<p>\u5bf9\u4efb\u610f\u73af\\(S\\)\u548c\u6620\u5c04\\(f: X \\to S\\), \u5b58\u5728\u552f\u4e00\u73af\u540c\u6001\\(\\tilde{f}: F(X) \\to S\\)\u6269\u5c55\\(f\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_72","title":"\u91cd\u8981\u5b9a\u7406","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_73","title":"\u96c5\u5404\u5e03\u68ee\u6839","text":"<p>\u5b9a\u4e49\uff1a \\(\\operatorname{Jac}(R) = \\bigcap_{M \\text{\u6781\u5927\u7406\u60f3}} M\\)</p> <p>\u6027\u8d28\uff1a \\(x \\in \\operatorname{Jac}(R)\\)\u5f53\u4e14\u4ec5\u5f53\\(\\forall r \\in R\\), \\(1-rx\\)\u53ef\u9006</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_74","title":"\u534a\u5355\u73af\u7ed3\u6784\u5b9a\u7406","text":"<p>\u963f\u5ef7\u534a\u5355\u73af\u540c\u6784\u4e8e\u6709\u9650\u4e2a\u9664\u73af\u4e0a\u77e9\u9635\u73af\u7684\u76f4\u79ef</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_75","title":"\u57df\u8bba\u8054\u7cfb","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_76","title":"\u5206\u5f0f\u57df\u6784\u9020","text":"<p>\u5bf9\u6574\u73af\\(R\\), \u53d6\\(S = R\\setminus\\{0\\}\\), \u5219\uff1a \\(\\operatorname{Frac}(R) = S^{-1}R\\)\u662f\u5305\u542b\\(R\\)\u7684\u6700\u5c0f\u57df</p> <p>\u4f8b\u5b50\uff1a \\(\\operatorname{Frac}(\\mathbb{Z}) = \\mathbb{Q}\\) \\(\\operatorname{Frac}(F[x]) = F(x)\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_77","title":"\u4ee3\u6570\u51e0\u4f55\u57fa\u7840","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_78","title":"\u5e0c\u5c14\u4f2f\u7279\u96f6\u70b9\u5b9a\u7406","text":"<p>\u8bbe\\(k\\)\u4ee3\u6570\u95ed\u57df, \u5219\uff1a \\(\\operatorname{Rad}(I) = \\mathcal{I}(\\mathcal{Z}(I))\\) \u5176\u4e2d\\(\\mathcal{Z}\\)\u662f\u96f6\u70b9\u96c6, \\(\\mathcal{I}\\)\u662f\u7406\u60f3\u5b9a\u4e49\u51fd\u6570</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_79","title":"\u540c\u8c03\u4ee3\u6570\u521d\u6b65","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_80","title":"\u6295\u5c04\u6a21","text":"<p>\\(P\\)\u662f\u6295\u5c04\u6a21\u5f53\u4e14\u4ec5\u5f53\u51fd\u5b50\\(\\operatorname{Hom}(P, -)\\)\u6b63\u5408</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_81","title":"\u5e73\u5766\u6a21","text":"<p>\\(F\\)\u662f\u5e73\u5766\u6a21\u5f53\u4e14\u4ec5\u5f53\\(-\\otimes_R F\\)\u6b63\u5408</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_82","title":"\u975e\u4ea4\u6362\u73af","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_83","title":"\u5355\u73af","text":"<p>\u6ca1\u6709\u975e\u5e73\u51e1\u7406\u60f3\u7684\u73af</p> <p>\u4f8b\u5b50\uff1a \u9664\u73af \u77e9\u9635\u73af\\(M_n(D)\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#-","title":"\u963f\u5ef7-\u97e6\u5fb7\u4f2f\u6069\u5b9a\u7406","text":"<p>\u534a\u5355\u963f\u5ef7\u73af\u540c\u6784\u4e8e\u6709\u9650\u4e2a\u9664\u73af\u4e0a\u77e9\u9635\u73af\u7684\u76f4\u79ef</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_84","title":"\u57df\u8bba\u5b8c\u6574\u7b14\u8bb0","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_85","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_86","title":"\u57df\u7684\u5b9a\u4e49","text":"<p>\u96c6\u5408\\(F\\)\u914d\u5907\u4e24\u4e2a\u4e8c\u5143\u8fd0\u7b97\\(+\\)\u548c\\(\\cdot\\)\u6ee1\u8db3\uff1a 1. \\((F, +)\\)\u662f Abel \u7fa4 2. \\((F\\setminus\\{0\\}, \\cdot)\\)\u662f Abel \u7fa4 3. \u5206\u914d\u5f8b\uff1a\\(a\\cdot(b+c) = a\\cdot b + a\\cdot c\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_87","title":"\u5b50\u57df\u4e0e\u6269\u57df","text":"<ul> <li>\u5b50\u57df\uff1a\\(K \\subseteq F\\)\u5173\u4e8e\u76f8\u540c\u8fd0\u7b97\u6784\u6210\u57df</li> <li>\u6269\u57df\uff1a\u8bb0\u4f5c\\(F/K\\), \u8868\u793a\\(F\\)\u662f\\(K\\)\u7684\u6269\u57df</li> <li>\u7d20\u57df\uff1a\u4e0d\u542b\u771f\u5b50\u57df\u7684\u57df, \u7279\u5f81\\(p\\)\u65f6\u4e3a\\(\\mathbb{F}_p\\), \u7279\u5f81\\(0\\)\u65f6\u4e3a\\(\\mathbb{Q}\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_88","title":"\u57df\u6269\u5f20\u7406\u8bba","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_89","title":"\u6269\u5f20\u6b21\u6570","text":"<p>\\([F : K] = \\dim_K F\\)\u4f5c\u4e3a\\(K\\)-\u5411\u91cf\u7a7a\u95f4\u7684\u7ef4\u6570</p> <p>\u6027\u8d28\uff1a - \u6709\u9650\u6269\u5f20\uff1a\\([F : K] &lt; \\infty\\) - \u5854\u5f0f\u516c\u5f0f\uff1a\\(K \\subseteq E \\subseteq F\\)\u5219\\([F : K] = [F : E][E : K]\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_90","title":"\u4ee3\u6570\u6269\u5f20","text":"<ul> <li>\u4ee3\u6570\u5143\uff1a\\(\\alpha \\in F\\)\u5728\\(K\\)\u4e0a\u4ee3\u6570\u6307\u5b58\u5728\\(0 \\neq f(x) \\in K[x]\\)\u4f7f\\(f(\\alpha)=0\\)</li> <li>\u8d85\u8d8a\u5143\uff1a\u975e\u4ee3\u6570\u5143</li> <li>\u6781\u5c0f\u591a\u9879\u5f0f\uff1a\\(\\alpha\\)\u5728\\(K\\)\u4e0a\u4ee3\u6570\u65f6, \u6b21\u6570\u6700\u4f4e\u7684\u9996\u4e00\u591a\u9879\u5f0f\\(m_\\alpha(x)\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_91","title":"\u5355\u6269\u5f20","text":"<p>\\(K(\\alpha) = \\bigcap_{\\alpha \\in E \\supseteq K} E\\)</p> <p>\u7ed3\u6784\uff1a - \u4ee3\u6570\u60c5\u5f62\uff1a\\(K(\\alpha) \\cong K[x]/(m_\\alpha(x))\\) - \u8d85\u8d8a\u60c5\u5f62\uff1a\\(K(\\alpha) \\cong K(x)\\)\uff08\u6709\u7406\u51fd\u6570\u57df\uff09</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_92","title":"\u5206\u88c2\u57df\u4e0e\u4ee3\u6570\u95ed\u5305","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_93","title":"\u5206\u88c2\u57df","text":"<p>\u5bf9\\(f(x) \\in K[x]\\), \u5b58\u5728\u6700\u5c0f\u6269\u57df\\(F\\)\u4f7f\u5f97\\(f\\)\u5728\\(F\\)\u4e0a\u5b8c\u5168\u5206\u89e3\u4e3a\u4e00\u6b21\u56e0\u5f0f\u4e58\u79ef</p> <p>\u6027\u8d28\uff1a - \u552f\u4e00\u6027\uff1a\u4efb\u610f\u4e24\u4e2a\u5206\u88c2\u57df\\(K\\)-\u540c\u6784 - \u6784\u9020\u65b9\u6cd5\uff1a\u9010\u6b65\u6dfb\u52a0\u6839\\(\\alpha_i\\)\u5f97\u5230\\(K(\\alpha_1, ..., \\alpha_n)\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_94","title":"\u4ee3\u6570\u95ed\u5305","text":"<p>\u57df\\(\\overline{K}\\)\u6ee1\u8db3\uff1a 1. \u6bcf\u4e2a\\(f(x) \\in \\overline{K}[x]\\)\u5728\\(\\overline{K}\\)\u4e2d\u6709\u6839 2. \u6ca1\u6709\u771f\u4ee3\u6570\u6269\u57df</p> <p>\u5b58\u5728\u6027\u5b9a\u7406\uff1a\u6bcf\u4e2a\u57df\u90fd\u6709\u4ee3\u6570\u95ed\u5305, \u4e14\u5728\\(K\\)-\u540c\u6784\u610f\u4e49\u4e0b\u552f\u4e00</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_95","title":"\u6709\u9650\u57df","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_96","title":"\u7ed3\u6784\u4e0e\u5206\u7c7b","text":"<p>\u5bf9\u7d20\u6570\u5e42\\(q = p^n\\), \u5b58\u5728\u552f\u4e00\uff08\u540c\u6784\u610f\u4e49\u4e0b\uff09\\(q\\)\u5143\u57df\\(\\mathbb{F}_q\\)</p> <p>\u6027\u8d28\uff1a - \u4e58\u6cd5\u7fa4\\(\\mathbb{F}_q^\\times\\)\u662f\\(q-1\\)\u9636\u5faa\u73af\u7fa4 - \u5b50\u57df\u5bf9\u5e94\uff1a\\(\\mathbb{F}_{p^n}\\)\u6709\\(\\mathbb{F}_{p^d}\\)\u4f5c\u4e3a\u5b50\u57df\u5f53\u4e14\u4ec5\u5f53\\(d \\mid n\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_97","title":"\u5f17\u7f57\u8d1d\u5c3c\u4e4c\u65af\u81ea\u540c\u6784","text":"<p>\\(\\sigma_p: \\mathbb{F}_{p^n} \\to \\mathbb{F}_{p^n}\\)\u5b9a\u4e49\u4e3a\\(\\sigma_p(x) = x^p\\)</p> <p>\u6027\u8d28\uff1a - \u751f\u6210\u4f3d\u7f57\u74e6\u7fa4\\(\\operatorname{Gal}(\\mathbb{F}_{p^n}/\\mathbb{F}_p) = \\langle \\sigma_p \\rangle \\cong \\mathbb{Z}/n\\mathbb{Z}\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_98","title":"\u53ef\u5206\u6269\u5f20","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_99","title":"\u53ef\u5206\u591a\u9879\u5f0f","text":"<p>\\(f(x) \\in K[x]\\)\u65e0\u91cd\u6839\uff08\u5728\u4ee3\u6570\u95ed\u5305\u4e2d\uff09</p> <p>\u5224\u522b\u6cd5\uff1a - \u7279\u5f81\\(0\\)\uff1a\u4e0d\u53ef\u7ea6\u591a\u9879\u5f0f\u5747\u53ef\u5206 - \u7279\u5f81\\(p\\)\uff1a\\(f(x)\\)\u53ef\u5206\u5f53\u4e14\u4ec5\u5f53\\(f\\)\u4e0e\\(f'\\)\u4e92\u7d20</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_100","title":"\u5b8c\u5168\u57df","text":"<p>\u6bcf\u4e2a\u4ee3\u6570\u6269\u5f20\u90fd\u662f\u53ef\u5206\u6269\u5f20\u7684\u57df</p> <p>\u4f8b\u5b50\uff1a - \u7279\u5f81\\(0\\)\u57df - \u6709\u9650\u57df - \u5b8c\u7f8e\u95ed\u5305\uff1a\u5bf9\u975e\u5b8c\u5168\u57df\\(K\\), \u5b58\u5728\u6700\u5c0f\u6269\u57df\\(K^{perf}\\)\u4f7f\u5176\u5b8c\u5168</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_101","title":"\u6b63\u89c4\u6269\u5f20","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_102","title":"\u5b9a\u4e49","text":"<p>\u4ee3\u6570\u6269\u5f20\\(F/K\\)\u6ee1\u8db3\uff1a \u6bcf\u4e2a\u4e0d\u53ef\u7ea6\\(f(x) \\in K[x]\\)\u5728\\(F\\)\u4e2d\u6216\u6709\u6839\u6216\u4fdd\u6301\u4e0d\u53ef\u7ea6</p> <p>\u7b49\u4ef7\u6761\u4ef6\uff1a - \\(F\\)\u662f\\(K[x]\\)\u4e2d\u67d0\u65cf\u591a\u9879\u5f0f\u7684\u5206\u88c2\u57df - \u4efb\u610f\\(K\\)-\u5d4c\u5165\\(\\sigma: F \\to \\overline{K}\\)\u6ee1\u8db3\\(\\sigma(F) = F\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_103","title":"\u4f3d\u7f57\u74e6\u7406\u8bba","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_104","title":"\u4f3d\u7f57\u74e6\u6269\u5f20","text":"<p>\u65e2\u662f\u6b63\u89c4\u53c8\u662f\u53ef\u5206\u7684\u6709\u9650\u6269\u5f20</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_105","title":"\u4f3d\u7f57\u74e6\u7fa4","text":"<p>\\(\\operatorname{Gal}(F/K) = \\{\\sigma: F \\to F \\mid \\sigma\\)\u662f\\(K\\)-\u81ea\u540c\u6784\\(\\}\\)</p> <p>\u57fa\u672c\u5b9a\u7406\uff1a \u5728\u4f3d\u7f57\u74e6\u6269\u5f20\\(F/K\\)\u4e2d\uff1a - \u5b50\u7fa4\\(H \\leq \\operatorname{Gal}(F/K)\\)\u5bf9\u5e94\u4e2d\u95f4\u57df\\(F^H = \\{x \\in F \\mid \\forall \\sigma \\in H, \\sigma(x)=x\\}\\) - \\([F : F^H] = |H|\\)\u4e14\\([F^H : K] = [G : H]\\) - \u6b63\u89c4\u5b50\u7fa4\u5bf9\u5e94\u6b63\u89c4\u5b50\u6269\u5f20</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_106","title":"\u5e93\u9ed8\u5c14\u7406\u8bba","text":"<p>\u5bf9\\(K\\)\u5305\u542b\u672c\u539f\\(n\\)\u6b21\u5355\u4f4d\u6839\\(\\zeta_n\\)\u4e14\\(\\operatorname{char} K \\nmid n\\)\uff1a</p> <p>\u4e2d\u95f4\u57df\\(K \\subseteq E \\subseteq K(\\sqrt[n]{a})\\)\u5bf9\u5e94\\(\\operatorname{Gal}(K(\\sqrt[n]{a})/K)\\)\u7684\u5b50\u7fa4</p> <p>\u5177\u4f53\u6784\u9020\uff1a \\(E = K(\\sqrt[d]{a})\\)\u5176\u4e2d\\(d \\mid n\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#-_1","title":"\u963f\u5ef7-\u65bd\u83b1\u5c14\u7406\u8bba","text":"<p>\u5bf9\u7279\u5f81\\(p\\)\u57df\\(K\\)\uff1a</p> <p>\u4e2d\u95f4\u57df\\(K \\subseteq E \\subseteq K(\\alpha)\\)\u5176\u4e2d\\(\\alpha^p - \\alpha = a \\in K\\)\u5bf9\u5e94\\(\\mathbb{Z}/p\\mathbb{Z}\\)\u7684\u5b50\u7fa4</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_107","title":"\u8d85\u8d8a\u6269\u5f20","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_108","title":"\u8d85\u8d8a\u57fa","text":"<p>\u96c6\u5408\\(S \\subseteq F\\)\u5728\\(K\\)\u4e0a\u4ee3\u6570\u65e0\u5173\u4e14\\(F/K(S)\\)\u4ee3\u6570</p> <p>\u6027\u8d28\uff1a - \u57fa\u6570\u552f\u4e00\uff08\u79f0\u4e3a\u8d85\u8d8a\u6b21\u6570\uff09 - \u5bf9\u6709\u9650\u751f\u6210\u6269\u5f20\\(F = K(\\alpha_1, ..., \\alpha_n)\\), \u5b58\u5728\u6700\u5927\u4ee3\u6570\u65e0\u5173\u5b50\u96c6</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_109","title":"\u5218\u7ef4\u5c14\u5b9a\u7406","text":"<p>\u82e5\\(\\alpha\\)\u5728\\(K\\)\u4e0a\u8d85\u8d8a, \u5219\\(K(\\alpha)/K\\)\u7684\u4e2d\u95f4\u57df\u5f62\u5982\\(K(\\beta)\\)\u5176\u4e2d\\(\\beta = \\frac{a\\alpha + b}{c\\alpha + d}\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_110","title":"\u8d4b\u503c\u7406\u8bba","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_111","title":"\u79bb\u6563\u8d4b\u503c","text":"<p>\u51fd\u6570\\(v: K^\\times \\to \\mathbb{Z}\\)\u6ee1\u8db3\uff1a 1. \\(v(ab) = v(a) + v(b)\\) 2. \\(v(a+b) \\geq \\min(v(a), v(b))\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_112","title":"\u5b8c\u5907\u5316","text":"<p>\u5bf9\u8d4b\u503c\u57df\\(K\\), \u5b58\u5728\u5b8c\u5907\u57df\\(\\hat{K}\\)\u4f7f\u5f97\uff1a - \\(K\\)\u5728\\(\\hat{K}\\)\u4e2d\u7a20\u5bc6 - \u8d4b\u503c\u552f\u4e00\u5ef6\u62d3\u5230\\(\\hat{K}\\)</p> <p>\u4f8b\u5b50\uff1a - \\(\\mathbb{Q}_p\\)\u662f\\(\\mathbb{Q}\\)\u5173\u4e8e\\(p\\)-adic \u8d4b\u503c\u7684\u5b8c\u5907\u5316 - \\(k((t))\\)\u662f\\(k(t)\\)\u5173\u4e8e\\(t\\)-adic \u8d4b\u503c\u7684\u5b8c\u5907\u5316</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_113","title":"\u57df\u4e0a\u4ee3\u6570","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_114","title":"\u4e2d\u5fc3\u5355\u4ee3\u6570","text":"<p>\u6709\u9650\u7ef4\\(F\\)-\u4ee3\u6570\\(A\\)\u6ee1\u8db3\uff1a - \u4e2d\u5fc3\\(Z(A) = F\\) - \u65e0\u975e\u5e73\u51e1\u53cc\u8fb9\u7406\u60f3</p> <p>\u5206\u7c7b\uff1a \\(A \\cong M_n(D)\\)\u5176\u4e2d\\(D\\)\u662f\\(F\\)\u4e0a\u7684\u53ef\u9664\u4ee3\u6570</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_115","title":"\u5e03\u9976\u5c14\u7fa4","text":"<p>\u4e2d\u5fc3\u5355\u4ee3\u6570\u6309\u5f20\u91cf\u79ef\u548c Morita \u7b49\u4ef7\u6784\u6210\u7684\u7fa4\uff1a \\(\\operatorname{Br}(F) = \\{\u4e2d\u5fc3\u5355\u4ee3\u6570\\}/\\sim\\)</p> <p>\u6027\u8d28\uff1a - \\(\\operatorname{Br}(\\mathbb{R}) \\cong \\mathbb{Z}/2\\mathbb{Z}\\) - \\(\\operatorname{Br}(\\mathbb{F}_q) = 0\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_116","title":"\u5e94\u7528\u65b9\u5411","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_117","title":"\u5c3a\u89c4\u4f5c\u56fe","text":"<p>\u70b9\\(\\alpha\\)\u53ef\u4f5c\u56fe\u5f53\u4e14\u4ec5\u5f53\\([\\mathbb{Q}(\\alpha) : \\mathbb{Q}]\\)\u662f\\(2\\)\u7684\u5e42</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_118","title":"\u4e94\u6b21\u65b9\u7a0b\u4e0d\u53ef\u89e3\u6027","text":"<p>\u4e00\u822c\u4e94\u6b21\u65b9\u7a0b\u7684\u4f3d\u7f57\u74e6\u7fa4\u4e3a\\(S_5\\)\uff08\u4e0d\u53ef\u89e3\u7fa4\uff09</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_119","title":"\u7f16\u7801\u7406\u8bba","text":"<p>\u5229\u7528\u6709\u9650\u57df\\(\\mathbb{F}_{2^n}\\)\u6784\u9020\u7ea0\u9519\u7801</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_120","title":"\u91cd\u8981\u5b9a\u7406","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_121","title":"\u672c\u539f\u5143\u5b9a\u7406","text":"<p>\u6709\u9650\u53ef\u5206\u6269\u5f20\\(F/K\\)\u662f\u5355\u6269\u5f20</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_122","title":"\u514b\u62c9\u9ed8\u5b9a\u7406","text":"<p>\u5bf9\u7279\u5f81\\(0\\)\u57df\\(K\\), \u82e5\\(f(x) \\in K[x]\\)\u4e0d\u53ef\u7ea6\u4e14\\(\\deg f\\)\u4e3a\u7d20\u6570\\(p\\), \u5219\\(f\\)\u7684\u4f3d\u7f57\u74e6\u7fa4\u5305\u542b\\(p\\)-\u8f6e\u6362</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_123","title":"\u963f\u5ef7\u4e92\u53cd\u5f8b","text":"<p>\u63cf\u8ff0\u7c7b\u57df\u8bba\u4e2d\u7684\u8303\u5269\u4f59\u7b26\u53f7</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_124","title":"\u62bd\u8c61\u4ee3\u6570\u7efc\u5408\u7b14\u8bb0","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_125","title":"\u6a21\u8bba\u57fa\u7840","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_126","title":"\u6a21\u7684\u5b9a\u4e49","text":"<p>\u8bbe\\(R\\)\u4e3a\u73af, \\(M\\)\u4e3a Abel \u7fa4, \u914d\u5907\u6570\u4e58\u8fd0\u7b97\\(R \\times M \\to M\\)\u6ee1\u8db3\uff1a 1. \\(r(m_1 + m_2) = rm_1 + rm_2\\) 2. \\((r_1 + r_2)m = r_1m + r_2m\\) 3. \\((r_1r_2)m = r_1(r_2m)\\) 4. \u82e5\\(R\\)\u542b\u5e7a\u5143\u5219\\(1_Rm = m\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_127","title":"\u81ea\u7531\u6a21","text":"<p>\u6a21\\(M \\cong R^{(I)}\\)\uff08\\(I\\)\u4e3a\u67d0\u6307\u6807\u96c6\uff09, \u7b49\u4ef7\u4e8e\u5b58\u5728\u57fa\uff08\u7ebf\u6027\u65e0\u5173\u751f\u6210\u96c6\uff09</p> <p>\u4f8b\u5b50\uff1a - \u5411\u91cf\u7a7a\u95f4\u662f\u57df\u4e0a\u7684\u81ea\u7531\u6a21 - \\(\\mathbb{Z}/n\\mathbb{Z}\\)\u4e0d\u662f\u81ea\u7531\\(\\mathbb{Z}\\)-\u6a21</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_128","title":"\u6b63\u5408\u5e8f\u5217","text":"<p>\u5e8f\u5217\\(\\cdots \\to M_{i-1} \\xrightarrow{f_i} M_i \\xrightarrow{f_{i+1}} M_{i+1} \\to \\cdots\\)\u6ee1\u8db3\\(\\operatorname{im} f_i = \\ker f_{i+1}\\)</p> <p>\u77ed\u6b63\u5408\u5e8f\u5217\uff1a\\(0 \\to A \\xrightarrow{f} B \\xrightarrow{g} C \\to 0\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_129","title":"\u8303\u7574\u8bba\u57fa\u7840","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_130","title":"\u8303\u7574\u5b9a\u4e49","text":"<p>\u5305\u542b\uff1a - \u5bf9\u8c61\u7c7b\\(\\operatorname{Ob}(\\mathcal{C})\\) - \u6001\u5c04\u96c6\\(\\operatorname{Hom}(X, Y)\\) - \u6001\u5c04\u5408\u6210\u8fd0\u7b97 - \u6052\u7b49\u6001\u5c04</p> <p>\u4f8b\u5b50\uff1a - \\(\\mathbf{Set}\\)\uff1a\u96c6\u5408\u8303\u7574 - \\(\\mathbf{Grp}\\)\uff1a\u7fa4\u8303\u7574 - \\(_R\\mathbf{Mod}\\)\uff1a\\(R\\)-\u6a21\u8303\u7574</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_131","title":"\u51fd\u5b50","text":"<p>\u534f\u53d8\u51fd\u5b50\\(F: \\mathcal{C} \\to \\mathcal{D}\\)\u5305\u542b\uff1a - \u5bf9\u8c61\u6620\u5c04\\(F: \\operatorname{Ob}(\\mathcal{C}) \\to \\operatorname{Ob}(\\mathcal{D})\\) - \u6001\u5c04\u6620\u5c04\\(F: \\operatorname{Hom}(X, Y) \\to \\operatorname{Hom}(F(X), F(Y))\\)</p> <p>\u53cd\u53d8\u51fd\u5b50\u5c06\u6001\u5c04\u65b9\u5411\u53cd\u8f6c</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_132","title":"\u81ea\u7136\u53d8\u6362","text":"<p>\u5bf9\u51fd\u5b50\\(F, G: \\mathcal{C} \\to \\mathcal{D}\\), \u81ea\u7136\u53d8\u6362\\(\\eta: F \\Rightarrow G\\)\u5305\u542b\uff1a \u5bf9\u6bcf\u4e2a\\(X \\in \\mathcal{C}\\)\u6709\\(\\eta_X: F(X) \\to G(X)\\)\u4f7f\u5f97\u4e0b\u56fe\u4ea4\u6362</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_133","title":"\u540c\u8c03\u4ee3\u6570","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_134","title":"\u6295\u5c04\u6a21","text":"<p>\\(P\\)\u6ee1\u8db3\u5bf9\u4efb\u610f\u6ee1\u540c\u6001\\(g: B \\to C\\)\u548c\\(f: P \\to C\\), \u5b58\u5728\u63d0\u5347\\(\\tilde{f}: P \\to B\\)</p> <p>\u7b49\u4ef7\u6761\u4ef6\uff1a - \u662f\u81ea\u7531\u6a21\u7684\u76f4\u548c\u9879 - \\(\\operatorname{Hom}(P, -)\\)\u6b63\u5408</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_135","title":"\u5185\u5c04\u6a21","text":"<p>\\(I\\)\u6ee1\u8db3\u5bf9\u4efb\u610f\u5355\u540c\u6001\\(g: A \\to B\\)\u548c\\(f: A \\to I\\), \u5b58\u5728\u5ef6\u62d3\\(\\tilde{f}: B \\to I\\)</p> <p>\u7b49\u4ef7\u6761\u4ef6\uff1a - \\(\\operatorname{Hom}(-, I)\\)\u6b63\u5408</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_136","title":"\u5e73\u5766\u6a21","text":"<p>\\(F\\)\u6ee1\u8db3\\(-\\otimes_R F\\)\u6b63\u5408</p> <p>\u6027\u8d28\uff1a - \u6295\u5c04\u6a21\u5fc5\u5e73\u5766 - \u6709\u9650\u5c55\u793a\u5e73\u5766\u6a21\u662f\u6295\u5c04\u6a21</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_137","title":"\u4ea4\u6362\u4ee3\u6570","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_138","title":"\u5c40\u90e8\u73af","text":"<p>\u542b\u552f\u4e00\u6781\u5927\u7406\u60f3\\(\\mathfrak{m}\\)\u7684\u73af</p> <p>\u4f8b\u5b50\uff1a - \u5f62\u5f0f\u5e42\u7ea7\u6570\u73af\\(k[[x]]\\) - \\(p\\)-adic \u6574\u6570\\(\\mathbb{Z}_p\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_139","title":"\u8bfa\u7279\u73af","text":"<p>\u7b49\u4ef7\u6761\u4ef6\uff1a 1. \u7406\u60f3\u6ee1\u8db3\u5347\u94fe\u6761\u4ef6 2. \u6bcf\u4e2a\u7406\u60f3\u6709\u9650\u751f\u6210 3. \u6bcf\u4e2a\u7d20\u7406\u60f3\u6709\u9650\u751f\u6210</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_140","title":"\u514b\u9c81\u5c14\u7ef4\u6570","text":"<p>\u7d20\u7406\u60f3\u94fe\\(p_0 \\subsetneq \\cdots \\subsetneq p_n\\)\u7684\u6700\u5927\u957f\u5ea6\\(n\\)</p> <p>\u4f8b\u5b50\uff1a - \\(\\dim k[x_1, ..., x_n] = n\\) - \\(\\dim \\mathbb{Z} = 1\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_141","title":"\u8868\u793a\u8bba","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_142","title":"\u7fa4\u8868\u793a","text":"<p>\u540c\u6001\\(\\rho: G \\to GL(V)\\), \u5176\u4e2d\\(V\\)\u662f\u5411\u91cf\u7a7a\u95f4</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_143","title":"\u4e0d\u53ef\u7ea6\u8868\u793a","text":"<p>\u6ca1\u6709\u975e\u5e73\u51e1\u5b50\u8868\u793a</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_144","title":"\u8212\u5c14\u5f15\u7406","text":"<p>\u82e5\\(V, W\\)\u662f\u4e0d\u53ef\u7ea6\u8868\u793a, \u5219\uff1a - \\(\\operatorname{Hom}_G(V, W) = 0\\)\uff08\u5f53\\(V \\not\\cong W\\)\uff09 - \\(\\operatorname{Hom}_G(V, V) = k\\)\uff08\u4ee3\u6570\u95ed\u57df\u60c5\u5f62\uff09</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_145","title":"\u7279\u5f81\u7406\u8bba","text":"<p>\u7279\u5f81\\(\\chi_\\rho(g) = \\operatorname{tr}(\\rho(g))\\)\u6ee1\u8db3\uff1a - \\(\\chi_\\rho\\)\u662f\u7c7b\u51fd\u6570 - \\(\\chi_{\\rho \\oplus \\rho'} = \\chi_\\rho + \\chi_{\\rho'}\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_146","title":"\u674e\u4ee3\u6570","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_147","title":"\u5b9a\u4e49","text":"<p>\u5411\u91cf\u7a7a\u95f4\\(\\mathfrak{g}\\)\u914d\u5907\u53cc\u7ebf\u6027\u8fd0\u7b97\\([, ]: \\mathfrak{g} \\times \\mathfrak{g} \\to \\mathfrak{g}\\)\u6ee1\u8db3\uff1a 1. \u53cd\u5bf9\u79f0\u6027\uff1a\\([x, x] = 0\\) 2. Jacobi \u6052\u7b49\u5f0f\uff1a\\([x, [y, z]] + [y, [z, x]] + [z, [x, y]] = 0\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_148","title":"\u4f8b\u5b50","text":"<ul> <li>\u4e00\u822c\u7ebf\u6027\u674e\u4ee3\u6570\\(\\mathfrak{gl}_n(k) = M_n(k)\\)</li> <li>\u7279\u6b8a\u7ebf\u6027\u674e\u4ee3\u6570\\(\\mathfrak{sl}_n(k) = \\{X \\mid \\operatorname{tr}(X)=0\\}\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_149","title":"\u6cdb\u5305\u7edc\u4ee3\u6570","text":"<p>\u5bf9\u674e\u4ee3\u6570\\(\\mathfrak{g}\\), \u6784\u9020\u7ed3\u5408\u4ee3\u6570\\(U(\\mathfrak{g})\\)\u6ee1\u8db3\uff1a \\(\\iota: \\mathfrak{g} \\to U(\\mathfrak{g})\\)\u662f\u674e\u4ee3\u6570\u540c\u6001, \u4e14\u6ee1\u8db3\u6cdb\u6027\u8d28</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_150","title":"\u683c\u8bba","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_151","title":"\u683c\u5b9a\u4e49","text":"<p>\u504f\u5e8f\u96c6\\((L, \\leq)\\)\u6ee1\u8db3\u4efb\u610f\u4e8c\u5143\\(a, b\\)\u6709\uff1a - \u4e0a\u786e\u754c\\(a \\vee b\\) - \u4e0b\u786e\u754c\\(a \\wedge b\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_152","title":"\u6a21\u683c","text":"<p>\u6ee1\u8db3\\(a \\leq b \\Rightarrow \\forall x, a \\vee (x \\wedge b) = (a \\vee x) \\wedge b\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_153","title":"\u5206\u914d\u683c","text":"<p>\u6ee1\u8db3\\(a \\vee (b \\wedge c) = (a \\vee b) \\wedge (a \\vee c)\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_154","title":"\u6cdb\u4ee3\u6570","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_155","title":"\u4ee3\u6570\u7cfb\u7edf","text":"<p>\u96c6\u5408\\(A\\)\u914d\u5907\u8fd0\u7b97\\(\\{f_i: A^{n_i} \\to A\\}\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_156","title":"\u7c07","text":"<p>\u6ee1\u8db3\u4e00\u7ec4\u6052\u7b49\u5f0f\u7684\u4ee3\u6570\u7cfb\u7edf\u7c7b</p> <p>\u4f2f\u514b\u970d\u592b\u5b9a\u7406\uff1a\u7c07\u7b49\u4ef7\u4e8e\u5bf9\u540c\u6001\u50cf\u3001\u5b50\u4ee3\u6570\u3001\u76f4\u79ef\u5c01\u95ed\u7684\u7c7b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_157","title":"\u975e\u4ea4\u6362\u73af","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_158","title":"\u5355\u73af","text":"<p>\u6ca1\u6709\u975e\u5e73\u51e1\u53cc\u8fb9\u7406\u60f3\u7684\u73af</p> <p>\u4f8b\u5b50\uff1a - \u9664\u73af - \u77e9\u9635\u73af\\(M_n(D)\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#-_2","title":"\u963f\u5ef7-\u97e6\u5fb7\u4f2f\u6069\u5b9a\u7406","text":"<p>\u534a\u5355\u963f\u5ef7\u73af\u540c\u6784\u4e8e\u6709\u9650\u4e2a\u9664\u73af\u4e0a\u77e9\u9635\u73af\u7684\u76f4\u79ef</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_159","title":"\u540c\u4f26\u4ee3\u6570","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_160","title":"\u94fe\u590d\u5f62","text":"<p>\\(\\cdots \\to C_{n+1} \\xrightarrow{d_{n+1}} C_n \\xrightarrow{d_n} C_{n-1} \\to \\cdots\\)\u6ee1\u8db3\\(d_n \\circ d_{n+1} = 0\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_161","title":"\u540c\u8c03\u7fa4","text":"<p>\\(H_n(C_\\bullet) = \\ker d_n / \\operatorname{im} d_{n+1}\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_162","title":"\u5bfc\u51fa\u51fd\u5b50","text":"<p>\u5bf9\u53f3\u6b63\u5408\u51fd\u5b50\\(F\\), \u5de6\u5bfc\u51fa\u51fd\u5b50\\(L_nF\\)\u901a\u8fc7\u6295\u5c04\u6d88\u89e3\u5b9a\u4e49</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_163","title":"\u6a21\u578b\u8303\u7574","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_164","title":"\u5f31\u7b49\u4ef7","text":"<p>\u7c7b\u6bd4\u540c\u4f26\u7b49\u4ef7</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_165","title":"\u7ea4\u7ef4\u5316","text":"<p>\u7c7b\u6bd4\u585e\u5c14\u7ea4\u7ef4\u5316</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_166","title":"\u4e0a\u7ea4\u7ef4\u5316","text":"<p>\u7c7b\u6bd4\u8d6b\u96f7\u7ef4\u8328\u4e0a\u7ea4\u7ef4\u5316</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_167","title":"\u62d3\u6251\u4ee3\u6570","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_168","title":"\u62d3\u6251\u7fa4","text":"<p>\u7fa4\\(G\\)\u914d\u5907\u62d3\u6251\u4f7f\u5f97\u4e58\u6cd5\u548c\u9006\u8fd0\u7b97\u8fde\u7eed</p> <p>\u4f8b\u5b50\uff1a - \u674e\u7fa4 - \u6295\u5c04\u6781\u9650\\(\\varprojlim G/H\\)\uff08\\(H\\)\u4e3a\u6709\u9650\u6307\u6807\u5f00\u5b50\u7fa4\uff09</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_169","title":"\u666e\u6d1b\u5c3c\u5b8c\u5907\u5316","text":"<p>\u5bf9\u79bb\u6563\u7fa4\\(G\\), \u6784\u9020\\(\\widehat{G} = \\varprojlim G/N\\)\uff08\\(N\\)\u4e3a\u6709\u9650\u6307\u6807\u6b63\u89c4\u5b50\u7fa4\uff09</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_170","title":"\u6570\u8bba\u8054\u7cfb","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_171","title":"\u6234\u5fb7\u91d1\u73af","text":"<p>\u6574\u95ed\u8bfa\u7279\u6574\u73af\u4e14\u6bcf\u4e2a\u975e\u96f6\u7d20\u7406\u60f3\u6781\u5927</p> <p>\u6027\u8d28\uff1a - \u7406\u60f3\u552f\u4e00\u5206\u89e3\u4e3a\u7d20\u7406\u60f3\u4e58\u79ef - \u4f8b\u5b50\uff1a\u4ee3\u6570\u6574\u6570\u73af\\(\\mathcal{O}_K\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_172","title":"\u7c7b\u7fa4","text":"<p>$\\operatorname{Cl}(R) = $\u5206\u5f0f\u7406\u60f3\u7fa4/\u4e3b\u7406\u60f3\u7fa4</p> <p>\u5ea6\u91cf\u552f\u4e00\u5206\u89e3\u6027\u8d28\u7684\u5931\u6548\u7a0b\u5ea6</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_173","title":"\u8ba1\u7b97\u4ee3\u6570","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_174","title":"\u683c\u7f57\u5e03\u7eb3\u57fa","text":"<p>\u591a\u9879\u5f0f\u7406\u60f3\u7684\u6807\u51c6\u751f\u6210\u96c6</p> <p>\u5e03\u8d6b\u4f2f\u683c\u7b97\u6cd5\uff1a\u8ba1\u7b97\u683c\u7f57\u5e03\u7eb3\u57fa</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%8A%BD%E8%B1%A1%E4%BB%A3%E6%95%B0/#_175","title":"\u6d88\u53bb\u7406\u60f3","text":"<p>\\(I \\cap k[x_{i_1}, ..., x_{i_k}]\\)\u7684\u7b97\u6cd5\u8ba1\u7b97</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%97%E8%AE%BE%E8%AE%A1/","title":"\u6570\u5b57\u8bbe\u8ba1","text":"<ul> <li>\u77f3\u7fa4\u7535\u8def \u592a\u5168, \u9002\u5408\u8003\u7814 2</li> <li>\u4e0a\u4ea4\u5927\u6a21\u62df\u7535\u5b50\u6280\u672f \u5bf9\u4e8e\u5b66\u7535\u7684\u7b80\u76f4\u5723\u7ecf 4</li> <li>\u6e05\u534e\u5927\u5b66\u6570\u5b57\u7535\u5b50\u6280\u672f </li> <li>\u6570\u5b57\u8bbe\u8ba1</li> <li>Verilog HDL \u5165\u95e8</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%97%E8%AE%BE%E8%AE%A1/#_1","title":"\u7535\u8def\u5206\u6790","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%97%E8%AE%BE%E8%AE%A1/#_2","title":"\u7535\u8def\u6a21\u578b","text":"<ul> <li>\u7535\u8def\u5143\u4ef6</li> <li>\u76f8\u91cf\u6cd5</li> <li>\u6b63\u5f26\u7a33\u6001\u7535\u8def</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%97%E8%AE%BE%E8%AE%A1/#_3","title":"\u7b49\u6548\u53d8\u6362\u4e0e\u5206\u6790","text":"<ul> <li>\u5e38\u89c4\u53d8\u6362</li> <li>\u7535\u8def\u5b9a\u7406</li> <li>\u4e8c\u7aef\u53e3\u7f51\u7edc</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%97%E8%AE%BE%E8%AE%A1/#_4","title":"\u6a21\u62df\u7535\u5b50\u6280\u672f","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%97%E8%AE%BE%E8%AE%A1/#pn","title":"PN \u8282\u4e0e\u5143\u4ef6","text":"<ul> <li>PN \u8282</li> <li>\u4e8c\u6781\u7ba1</li> <li>\u4e09\u6781\u7ba1</li> <li>\u573a\u6548\u5e94\u7ba1</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%97%E8%AE%BE%E8%AE%A1/#_5","title":"\u53cd\u9988","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%97%E8%AE%BE%E8%AE%A1/#_6","title":"\u653e\u5927\u7535\u8def","text":"<ul> <li>\u4e09\u6781\u7ba1/\u573a\u6548\u5e94\u7ba1</li> <li>\u5171\u5c04\u57fa\u96c6</li> <li>\u5206\u6790</li> <li>\u591a\u7ea7(\u8026\u5408\u65b9\u5f0f)</li> <li>\u5dee\u5206</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%97%E8%AE%BE%E8%AE%A1/#_7","title":"\u96c6\u6210\u8fd0\u7b97\u653e\u5927\u5668","text":"<ul> <li>\u5e94\u7528</li> <li>\u632f\u8361\u7535\u8def</li> <li>\u6574\u6d41/\u6ee4\u6ce2</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%97%E8%AE%BE%E8%AE%A1/#_8","title":"\u6570\u5b57\u7535\u5b50\u6280\u672f","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%97%E8%AE%BE%E8%AE%A1/#_9","title":"\u6570\u5b57\u8bbe\u8ba1","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%97%E8%AE%BE%E8%AE%A1/#ver","title":"ver","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%A6%E5%A2%9E%E8%A1%A5/","title":"\u6570\u5b66\u5e38\u8bc6","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%A6%E5%A2%9E%E8%A1%A5/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u79bb\u6563\u6570\u5b66\u53ca\u5176\u5e94\u7528 - \u7ffb\u8bd1\u7248, \u5305\u62ec \"\u79bb\u6563\u6570\u5b66\" \u548c\u7ec4\u5408\u6570\u5b66 / \u521d\u7b49\u6570\u8bba /... - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%A6%E5%A2%9E%E8%A1%A5/#_3","title":"\u5f52\u7eb3\u4e0e\u9012\u5f52","text":"<ul> <li>\u6570\u5b66\u5f52\u7eb3\u6cd5 \\(P(1) \\land \\left( \\forall k \\geq 1, P(k) \\rightarrow P(k+1) \\right) \\Rightarrow \\forall n \\geq 1, P(n)\\) \u63a8\u4e0b\u4e00\u4e2a</li> <li>\u5f3a\u5f52\u7eb3\u6cd5 \\(P(1) \\land \\left( \\forall k \\geq 1, \\left( \\bigwedge_{j=1}^k P(j) \\right) \\rightarrow P(k+1) \\right) \\Rightarrow \\forall n \\geq 1, P(n)\\) \u524d\u9762\u7684\u6240\u6709\u63a8\u4e0b\u4e00\u4e2a</li> <li>\u826f\u5e8f\u6027\u516c\u7406 \u4efb\u4f55\u975e\u7a7a\u975e\u8d1f\u6574\u6570\u96c6\u5408\u90fd\u6709\u6700\u5c0f\u5143\u7d20<ul> <li>\\(\\forall S \\subseteq \\mathbb{N}^+, S \\neq \\emptyset \\implies \\exists m \\in S, \\forall x \\in S, m \\leq x\\)</li> </ul> </li> <li>\u9012\u5f52\u5b9a\u4e49\u51fd\u6570 / \u96c6\u5408</li> <li>\u9012\u5f52\u7b97\u6cd5</li> <li>\\({ p }\\ \\text{S}\\ { q }\\) \u6307\u7b97\u6cd5 S \u8f93\u5165\u6ee1\u8db3 p, \u8f93\u51fa\u6ee1\u8db3 q, \u5373 S \u5bf9\u4e8e p, q \u90e8\u5206\u6b63\u786e \u79f0\u4e4b\u4e3a\u970d\u5c14\u4e09\u5143\u7ec4</li> <li>\u5faa\u73af\u4e0d\u53d8\u91cf\u6307\u5bf9\u4e8e\u4e00\u4e2a\u5faa\u73af, \u547d\u9898 p \u59cb\u7ec8\u4e3a\u771f</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%A6%E5%A2%9E%E8%A1%A5/#_4","title":"\u5bc6\u7801\u5b66\u5e38\u8bc6","text":"<ul> <li>\u5bc6\u94a5 \u52a0\u5bc6\u7b97\u6cd5\u4e2d\u7684\u5e38\u6570</li> <li>\u5355\u7801\u5bc6\u7801 (\u4e00\u4e00\u5bf9\u5e94) \u5206\u7ec4\u5bc6\u7801 (\u591a\u5bf9\u591a)</li> <li>\u5bc6\u7801\u7cfb\u7edf: \u660e\u6587\u96c6\u5408, \u5bc6\u6587\u96c6\u5408, \u5bc6\u94a5\u96c6\u5408, \u52a0\u5bc6\u7b97\u6cd5\u96c6\u5408, \u89e3\u5bc6\u7b97\u6cd5\u96c6\u5408</li> <li>\u79c1\u94a5\u5bc6\u7801\u7cfb\u7edf</li> <li>\u516c\u94a5\u5bc6\u7801\u7cfb\u7edf (\u52a0\u5bc6\u5bc6\u94a5\u516c\u5f00) \u9700\u8981\u4e00\u4e2a\u96be\u4ee5\u9006\u8ba1\u7b97\u7684\u95ee\u9898</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%A6%E5%A2%9E%E8%A1%A5/#rsa","title":"RSA \u5bc6\u7801\u7cfb\u7edf","text":"<ul> <li>\u5bc6\u94a5\u751f\u6210<ul> <li>\\(n = p \\times q\\) (\\(p, q\\)\u4e3a\u5927\u7d20\u6570)</li> <li>$\\phi(n) = (p-1)(q-1) $</li> <li>\u9009\u62e9\\(e\\)\u6ee1\u8db3\\(\\gcd(e, \\phi(n)) = 1\\)</li> <li>\u8ba1\u7b97\\(d \\equiv e^{-1} \\pmod{\\phi(n)}\\)</li> </ul> </li> <li>\u52a0\u5bc6\u8fc7\u7a0b<ul> <li>\u660e\u6587\u5206\u7ec4\u4e3a\u6574\u6570\\(M &lt; n\\)</li> <li>\u5bc6\u6587\\(C \\equiv M^e \\pmod{n}\\)</li> </ul> </li> <li>\u89e3\u5bc6\u8fc7\u7a0b<ul> <li>\\(M \\equiv C^d \\pmod{n}\\)</li> <li>\u5bc6\u94a5\u4e3a\\(d\\)</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%A6%E5%A2%9E%E8%A1%A5/#-","title":"\u8fea\u83f2 - \u8d6b\u5c14\u66fc\u5bc6\u94a5\u4ea4\u6362","text":"<ul> <li>\u534f\u5546\u53c2\u6570: \u5927\u7d20\u6570\\(p\\)\u53ca\u5176\u539f\u6839\\(g\\)(\u6ee1\u8db3\\(g^{p-1} \\equiv 1 \\pmod{p}\\)\u4e14\u65e0\u66f4\u5c0f\u5468\u671f)</li> <li>\u7528\u6237 A \u751f\u6210\u79c1\u94a5\\(a\\), \u8ba1\u7b97\u516c\u94a5\\(A \\equiv g^a \\pmod{p}\\)</li> <li>\u7528\u6237 B \u751f\u6210\u79c1\u94a5\\(b\\), \u8ba1\u7b97\u516c\u94a5\\(B \\equiv g^b \\pmod{p}\\)</li> <li>\u4ea4\u6362\u516c\u94a5\u540e, \u53cc\u65b9\u8ba1\u7b97\u5171\u4eab\u5bc6\u94a5:<ul> <li>A \u8ba1\u7b97\\(K \\equiv B^a \\pmod{p}\\)</li> <li>B \u8ba1\u7b97\\(K \\equiv A^b \\pmod{p}\\)</li> </ul> </li> <li>\\(K \\equiv (g^b)^a \\equiv g^{ab} \\equiv (g^a)^b \\pmod{p}\\) \u539f\u7406</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%A6%E5%A2%9E%E8%A1%A5/#_5","title":"\u540c\u6001\u52a0\u5bc6","text":"<p>\u5168\u540c\u6001\u52a0\u5bc6, \u5141\u8bb8\u5bf9\u5bc6\u6587\u8fdb\u884c\u8fd0\u7b97, \u5f97\u5230\u5bc6\u6587\u7ed3\u679c\u4e3a\u5bf9\u76f8\u5e94\u660e\u6587\u8fd0\u7b97\u7684\u7ed3\u679c\u7684\u5bc6\u6587</p> \\[ \\forall m_1, m_2 \\in \\mathcal{M}, \\quad \\text{Dec}(\\text{Enc}(m_1) \\oplus \\text{Enc}(m_2)) = m_1 + m_2\\\\ \\forall m_1, m_2 \\in \\mathcal{M}, \\quad \\text{Dec}(\\text{Enc}(m_1) \\otimes \\text{Enc}(m_2)) = m_1 \\times m_2 \\] <ul> <li>\u5176\u4e2d\\(\\oplus, \\otimes\\)\u4e3a\u5bc6\u6587\u57df\u8fd0\u7b97, \\(+, \\times\\)\u4e3a\u660e\u6587\u57df\u8fd0\u7b97</li> <li>\u90e8\u5206\u6ee1\u8db3\u5219\u4e3a\u504f\u540c\u6001\u52a0\u5bc6, \u5982 RSA (\u4e58\u6cd5\u6ee1\u8db3, \u52a0\u6cd5\u4e0d\u6ee1\u8db3)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%A6%E5%A2%9E%E8%A1%A5/#_6","title":"\u6b27\u62c9\u516c\u5f0f","text":"<ul> <li>\\(e^{i\\theta} = \\cos\\theta + i\\sin\\theta\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%A6%E5%A2%9E%E8%A1%A5/#_7","title":"\u5085\u91cc\u53f6 \u2014\u2014 \u83ab\u8328\u91d1\u6d88\u5143\u6cd5","text":"<ul> <li>\u4ece\u7ebf\u6027\u4e0d\u7b49\u5f0f\u4e2d\u6d88\u9664\u53d8\u91cf\u7684\u6570\u5b66\u65b9\u6cd5</li> <li>\u6d88\u9664\u6240\u6709\u53d8\u91cf\u53ef\u7528\u4e8e\u68c0\u6d4b\u4e0d\u7b49\u5f0f\u7cfb\u7edf\u662f\u5426\u6709\u89e3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%A6%E5%A2%9E%E8%A1%A5/#_8","title":"\u5e73\u8861\u4e09\u8fdb\u5236","text":"<ul> <li>\u5e73\u8861\u4e09\u8fdb\u5236\u662f\u4e09\u8fdb\u5236\u7684\u4e00\u79cd\u53d8\u5f62, \u5b83\u7684\u57fa\u6570\u4e3a 3, \u6bcf\u4f4d\u6570\u7801\u7531\u22121, 0, 1 \u6784\u6210, \u7531\u4e8e\u22121 \u4e66\u5199\u4e0d\u65b9\u4fbf, \u4e00\u822c\u7528\u5b57\u6bcd z \u4ee3\u66ff</li> <li>\u4fc4\u7f57\u65af\u7684\u79d1\u6280\u4eba\u5458\u66fe\u7ecf\u5c06\u5176\u5e94\u7528\u5230\u8ba1\u7b97\u673a\u7cfb\u7edf, \u4e5f\u88ab\u5e94\u7528\u4e8e\u5149\u5b50\u8ba1\u7b97\u673a\u76f8\u5173\u7814\u7a76\u4e2d (\u5b83\u6ca1\u6709\u7b26\u53f7!)</li> </ul> <p><code>zz z0 z1 z 0 1 1z 10 11</code></p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%A6%E5%A2%9E%E8%A1%A5/#_9","title":"\u5377\u79ef","text":"<p>\u5377\u79ef\u7684\u6839\u672c\u601d\u60f3\u5728\u4e8e\u901a\u8fc7\u7cfb\u7edf\u7684\u6ed1\u52a8\u5185\u79ef\u8fd0\u7b97, \u6355\u6349\u4e24\u4e2a\u4fe1\u53f7\u5728\u4e0d\u540c\u76f8\u5bf9\u4f4d\u7f6e\u4e0a\u7684\u5c40\u90e8\u76f8\u4f3c\u6027</p> <ul> <li>\u5185\u79ef\u8861\u91cf\u4e24\u4e2a\u5411\u91cf\u7684\u76f8\u4f3c\u6027, \u7ed3\u5408\u6a21\u957f\u548c\u5939\u89d2<ul> <li>(\\(\\mathbf{a} \\cdot \\mathbf{b} = \\|\\mathbf{a}\\| \\|\\mathbf{b}\\| \\cos\\theta\\))</li> </ul> </li> <li>\u5377\u79ef\u5219\u5c06\u8fd9\u4e00\u6982\u5ff5\u6269\u5c55\u5230\u52a8\u6001\u573a\u666f, \u901a\u8fc7\u6ed1\u52a8\u7a97\u53e3\u8ba1\u7b97\u5c40\u90e8\u5185\u79ef</li> <li>\u5377\u79ef\u662f\u4e0d\u540c\u4f4d\u7f6e\u4e0a\u5185\u79ef\u7684\u96c6\u5408</li> <li>\u8fde\u7eed\u5377\u79ef:</li> </ul> \\[ (f - g)(t) = \\int_{-\\infty}^{\\infty} f(\\tau)g(t - \\tau) d\\tau \\]"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E7%90%86%E9%80%BB%E8%BE%91/","title":"\u6570\u7406\u903b\u8f91","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E7%90%86%E9%80%BB%E8%BE%91/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u7535\u79d1\u5927\u79bb\u6563\u6570\u5b66 - \u6807\u51c6\u79bb\u6563\u6570\u5b66 - 3</li> <li>\u79bb\u6563\u6570\u5b66\u53ca\u5176\u5e94\u7528 - \u7ffb\u8bd1\u7248, \u5305\u62ec \"\u79bb\u6563\u6570\u5b66\" \u548c\u7ec4\u5408\u6570\u5b66 / \u521d\u7b49\u6570\u8bba /... - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E7%90%86%E9%80%BB%E8%BE%91/#_3","title":"\u547d\u9898\u903b\u8f91","text":"<ul> <li>\u547d\u9898</li> <li>\u547d\u9898\u8fde\u7ed3\u8bcd / \u590d\u5408\u547d\u9898</li> <li>\u771f\u503c\u8868 / \u547d\u9898\u5316\u7b80</li> <li>\u7b49\u4ef7\u5f0f</li> <li>\u8303\u5f0f / \u4e3b\u8303\u5f0f / \u6790\u53d6\u8303\u5f0f / \u5408\u53d6\u8303\u5f0f<ul> <li>\\(\\bigvee_{i=1}^{n} \\left( \\bigwedge_{j=1}^{m} l_{ij} \\right)\\)</li> </ul> </li> <li>\u53ef\u6ee1\u8db3\u6027</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E7%90%86%E9%80%BB%E8%BE%91/#_4","title":"\u63a8\u7406","text":"<ul> <li>\u6839\u636e\u5df2\u77e5\u547d\u9898\u7684\u771f\u503c\u63a8\u51fa\u65b0\u7684\u547d\u9898</li> <li>\u76f4\u63a5\u8bc1\u660e</li> <li>\u95f4\u63a5\u8bc1\u660e<ul> <li>\u53cd\u8bc1\u6cd5 \u5047\u8bbe\u5f85\u8bc1\u660e\u7684\u547d\u9898\u4e3a\u5047, \u63a8\u51fa\u77db\u76fe\u7684\u547d\u9898</li> <li>\u7b49\u4ef7\u8bc1\u660e\u6cd5 \u8bc1\u660e\u5f85\u8bc1\u660e\u547d\u9898\u7684\u9006\u5426\u547d\u9898</li> </ul> </li> <li>\u975e\u63a8\u7406\u7684\u8bc1\u660e<ul> <li>\u6784\u9020\u8bc1\u660e \u8bc1\u660e\u5b58\u5728</li> <li>\u6570\u5b66\u5f52\u7eb3\u6cd5</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E7%90%86%E9%80%BB%E8%BE%91/#_5","title":"\u8c13\u8bcd\u903b\u8f91","text":"<ul> <li>\u4e2a\u4f53\u8bcd / \u8c13\u8bcd / \u91cf\u8bcd</li> <li>\u524d\u675f\u8303\u5f0f \u6240\u6709\u7684\u91cf\u8bcd\u90fd\u5728\u6700\u5de6\u8fb9\u4e14\u8f96\u57df\u8986\u76d6\u5168\u5f0f<ul> <li>\\(Q_1x_1 Q_2x_2 \\cdots Q_nx_n \\ \\varphi\\)</li> <li>\u5176\u4e2d \\(Q_i \\in { \\forall, \\exists }\\), \\(\\varphi\\) \u4e3a\u4e0d\u542b\u91cf\u8bcd\u7684\u516c\u5f0f</li> </ul> </li> <li>\u89e3\u91ca \u4f7f\u5168\u5f0f\u4e3a\u771f\u7684\u4e00\u7ec4\u771f\u503c</li> <li>\u63a8\u7406\u89c4\u5219</li> <li>\u5206\u60c5\u5f62\u8bc1\u660e\u6cd5 (\u5206\u7c7b\u8ba8\u8bba) / \u7a77\u4e3e\u6cd5</li> <li>\u5168\u79f0\u8bc1\u660e / \u5b58\u5728\u8bc1\u660e (\u6784\u9020 / \u975e\u6784\u9020) / \u552f\u4e00\u8bc1\u660e</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/","title":"\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u5b8b\u6d69 - \u5e94\u8bd5, \u6709\u4e9b\u5197\u4f59 - 3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#_3","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u9891\u7387 / \u6982\u7387 / \u72ec\u7acb\u6027</li> <li>\u53e4\u5178\u6982\u578b / \u51e0\u4f55\u6982\u578b (\u6709\u70b9\u79bb\u6563 / \u8fde\u7eed\u7684\u610f\u601d)</li> <li>\u6761\u4ef6\u6982\u7387</li> <li>\u5168\u6982\u7387: \\(P (A) = \\sum_{i=1}^n P (A|B_i) P (B_i) \\quad ({B_i}\\text {\u4e3a\u5b8c\u5907\u4e8b\u4ef6\u7ec4})\\)</li> <li>\u8d1d\u53f6\u65af: \\(P (B_k|A) = \\frac {P (A|B_k) P (B_k)}{\\sum_{i=1}^n P (A|B_i) P (B_i)}\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#_4","title":"\u5206\u5e03","text":"<ul> <li>\u6982\u7387\u51fd\u6570 \u63cf\u8ff0\u6982\u7387\u7d2f\u52a0</li> <li>\u6982\u7387\u5bc6\u5ea6\u51fd\u6570 (\u5bfc\u6570) \u63cf\u8ff0\u6982\u7387</li> <li>\u4e8c\u7ef4\u51fd\u6570 \u53ef\u6c42\u504f\u5bfc (\u8fb9\u7f18\u5bc6\u5ea6\u51fd\u6570 \\(f_X (x) = \\int_{-\\infty}^\\infty f (x, y) dy\\)) \u53ef\u7528\u4e8e\u5224\u65ad\u72ec\u7acb</li> <li>\u671f\u671b: \\(E (X) =  \\sum x_k p (x_k) \\ \\int x f (x) dx\\)</li> <li>\u65b9\u5dee: \\(D (X) = E \\left [ (X-E (X))^2 \\right ]\\)</li> <li>\u534f\u65b9\u5dee \u63cf\u8ff0\u4e92\u76f8\u5f71\u54cd\u7a0b\u5ea6</li> <li>\u76f8\u5173\u7cfb\u6570 \u63cf\u8ff0\u4e92\u76f8\u5f71\u54cd\u7a0b\u5ea6</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#_5","title":"\u6837\u672c","text":"<ul> <li>\u7edf\u8ba1\u91cf (\u6837\u672c\u7684\u4e00\u4e2a\u7279\u5f81)</li> <li>\u5207\u6bd4\u96ea\u592b\u4e0d\u7b49\u5f0f (\u968f\u673a\u53d8\u91cf\u504f\u79bb\u5747\u503c\u7684\u7a0b\u5ea6\u7684\u6982\u7387) \u53ef\u89c1\u5747\u503c\u4e0e\u65b9\u5dee\u4e4b\u91cd \\(P (|X-E (X)| \\geq \\epsilon) \\leq \\frac {D (X)}{\\epsilon^2}\\)</li> <li>\u5927\u6570\u5b9a\u5f8b (\u5747\u503c\u6536\u655b\u671f\u671b)</li> <li>\u4e2d\u5fc3\u6781\u9650\u5b9a\u7406 (\u5927\u91cf\u72ec\u7acb\u968f\u673a\u53d8\u91cf\u548c\u8fd1\u4f3c\u6b63\u6001\u5206\u5e03)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#_6","title":"\u62bd\u6837\u5206\u5e03","text":"<ul> <li>\u6b63\u6001\u5206\u5e03 (\u6837\u672c\u5747\u503c\u670d\u4ece\u81ea\u8eab)</li> <li>\u5361\u65b9\u5206\u5e03 (\u6b63\u6001\u6837\u672c\u65b9\u5dee\u4e0e\u5206\u5e03\u65b9\u5dee\u7684\u6bd4\u503c)<ul> <li>\\(\\chi^2 (n) = \\sum_{i=1}^n Z_i^2 \\quad (Z_i \\sim N (0, 1))\\)</li> </ul> </li> <li>t \u5206\u5e03 (\u6b63\u6001\u6837\u672c\u91cf\u5c0f\u65f6, \u5bf9\u5e94\u7684\u6807\u51c6\u6b63\u6001\u5206\u5e03\u5316\u7684\u7ed3\u679c, \u66f4\u6613\u504f\u79fb)<ul> <li>\\(T = \\frac {\\bar {X}-\\mu}{S/\\sqrt {n}} \\sim t (n-1)\\)</li> </ul> </li> <li>F \u5206\u5e03 (\u5361\u65b9 /n \u7684\u6bd4\u503c)<ul> <li>\u6839\u636e\u5927\u6570\u5b9a\u5f8b\u4e0e\u4e0a\u4e24\u4e2a\u5206\u5e03\u53d6\u6837\u8d8a\u591a\u8d8a\u7a33\u5b9a, F \u5206\u5e03\u53ef\u4ee5\u63cf\u8ff0\u4e0d\u540c\u53d6\u6837\u91cf\u7684\u4e24\u4e2a\u6837\u672c\u7684\u65b9\u5dee\u7684\u6bd4</li> <li>\\(F (m, n) = \\frac {\\chi^2 (m)/m}{\\chi^2 (n)/n}\\)</li> </ul> </li> <li>\u501f\u52a9\u4ee5\u4e0a\u6280\u672f, \u53ef\u4ee5\u62df\u5408\u7edf\u8ba1\u91cf\u4e3a\u7279\u5f81 (\u77e9\u4f30\u8ba1), \u53ef\u4ee5\u4f30\u8ba1\u7279\u5f81\u503c\u5728\u67d0\u533a\u95f4\u7684\u6982\u7387 (\u533a\u95f4\u4f30\u8ba1), \u6784\u9020\u51fd\u6570\u4f7f\u6240\u6709\u6837\u672c\u7684\u53d1\u751f\u6982\u7387\u6700\u5927 (\u6781\u5927\u4f3c\u7136\u4f30\u8ba1)</li> <li>\u4ee5\u53ca\u6821\u9a8c\u5047\u8bbe (\u5173\u4e8e\u7edf\u8ba1\u91cf) \u76f8\u5bf9\u6837\u672c\u7684\u53d1\u751f\u6982\u7387 (\u5047\u8bbe\u68c0\u9a8c)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#_7","title":"\u79bb\u6563\u578b\u5206\u5e03","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#0-1","title":"0-1 \u5206\u5e03 (\u4f2f\u52aa\u5229\u5206\u5e03)","text":"<ul> <li>\u53c2\u6570: \u6210\u529f\u6982\u7387 \\(p \\in [0, 1]\\)</li> <li>PMF:</li> </ul> \\[ P(X=k) = \\begin{cases} p &amp; k=1 \\\\ 1-p &amp; k=0 \\end{cases} \\] <ul> <li>\u671f\u671b: \\(E(X) = p\\)</li> <li>\u65b9\u5dee: \\(D(X) = p(1-p)\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#bn-p","title":"\u4e8c\u9879\u5206\u5e03 $ B(n, p) $","text":"<ul> <li>\u53c2\u6570: \u8bd5\u9a8c\u6b21\u6570 $n \\in \\mathbb{N}^* $, \u6210\u529f\u6982\u7387 $ p \\in [0, 1]$</li> <li>PMF: \\(P(X=k) = \\binom{n}{k} p^k (1-p)^{n-k} \\quad (k=0, 1, ..., n)\\)</li> <li>\u671f\u671b: \\(E(X) = np\\)</li> <li>\u65b9\u5dee: \\(D(X) = np(1-p)\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#plambda","title":"\u6cca\u677e\u5206\u5e03 $ P(\\lambda) $","text":"<ul> <li>\u53c2\u6570: \u53d1\u751f\u7387 \\(\\lambda &gt; 0\\)</li> <li>PMF: \\(P(X=k) = \\frac{\\lambda^k e^{-\\lambda}}{k!} \\quad (k=0, 1, 2, ...)\\)</li> <li>\u671f\u671b: \\(E(X) = \\lambda\\)</li> <li>\u65b9\u5dee: \\(D(X) = \\lambda\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#_8","title":"\u51e0\u4f55\u5206\u5e03","text":"<ul> <li>\u53c2\u6570: \u6210\u529f\u6982\u7387 \\(p \\in (0, 1)\\)</li> <li>PMF: \\(P(X=k) = (1-p)^{k-1} p \\quad (k=1, 2, ...)\\)</li> <li>\u671f\u671b: \\(E(X) = \\frac{1}{p}\\)</li> <li>\u65b9\u5dee: \\(D(X) = \\frac{1-p}{p^2}\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#_9","title":"\u8d85\u51e0\u4f55\u5206\u5e03","text":"<ul> <li>\u53c2\u6570: \u603b\u4f53\u91cf \\(N\\), \u6210\u529f\u5143\u7d20\u6570 \\(K\\), \u62bd\u6837\u6570 \\(n\\)</li> <li>PMF: \\(P(X=k) = \\frac{\\binom{K}{k} \\binom{N-K}{n-k}}{\\binom{N}{n}} \\quad (k = \\max(0, n+K-N), ..., \\min(n, K))\\)</li> <li>\u671f\u671b: \\(E(X) = n\\frac{K}{N}\\)</li> <li>\u65b9\u5dee: \\(D(X) = n\\frac{K}{N}\\left(1-\\frac{K}{N}\\right)\\frac{N-n}{N-1}\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#_10","title":"\u8fde\u7eed\u578b\u5206\u5e03","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#ua-b","title":"\u5747\u5300\u5206\u5e03 \\(U(a, b)\\)","text":"<ul> <li>\u53c2\u6570: \u533a\u95f4\u7aef\u70b9 \\(a &lt; b\\)</li> <li>PDF:</li> </ul> \\[ f(x) = \\begin{cases} \\frac{1}{b-a} &amp; x \\in [a, b] \\\\ 0 &amp; \\text{\u5176\u4ed6} \\end{cases} \\] <ul> <li>\u671f\u671b: \\(E(X) = \\frac{a+b}{2}\\)</li> <li>\u65b9\u5dee: \\(D(X) = \\frac{(b-a)^2}{12}\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#nmu-sigma2","title":"\u6b63\u6001\u5206\u5e03 \\(N(\\mu, \\sigma^2)\\)","text":"<ul> <li>\u53c2\u6570: \u5747\u503c \\(\\mu \\in \\mathbb{R}\\), \u65b9\u5dee \\(\\sigma^2 &gt; 0\\)</li> <li>PDF: \\(f(x) = \\frac {1} {\\sigma\\sqrt{2\\pi}}e^{-\\frac{(x-\\mu)^2}{2 \\ sigma^2}}\\)</li> <li>\u671f\u671b: \\(E(X) = \\mu\\)</li> <li>\u65b9\u5dee: \\(D(X) = \\sigma^2\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E6%A6%82%E7%8E%87%E8%AE%BA/#explambda","title":"\u6307\u6570\u5206\u5e03 \\(Exp(\\lambda)\\)","text":"<ul> <li>\u53c2\u6570: \u7387\u53c2\u6570 \\(\\lambda &gt; 0\\)</li> <li>PDF:</li> </ul> \\[ f(x) = \\begin{cases} \\lambda e^{-\\lambda x} &amp; x \\geq 0 \\\\ 0 &amp; x &lt; 0 \\end{cases} \\] <ul> <li>\u671f\u671b: \\(E(X) = \\frac{1}{\\lambda}\\)</li> <li>\u65b9\u5dee: \\(D(X) = \\frac{1}{\\lambda^2}\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/","title":"\u7ebf\u6027\u4ee3\u6570","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>3b1b - \u4ecb\u7ecd\u5fae\u79ef\u5206 / \u7ebf\u6027\u4ee3\u6570\u7684 \"\u672c\u8d28\" - 5</li> <li>\u5b8b\u6d69 - \u5e94\u8bd5, \u6709\u4e9b\u5197\u4f59 - 3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_3","title":"\u77e9\u9635","text":"<ul> <li>\u8fd0\u7b97 / \u5206\u5757\u77e9\u9635</li> <li>\u9006 (\u53cd\u53d8\u6362)\\(A^{-1} = \\frac{1}{\\det(A)}\\mathrm{adj}(A)\\)</li> <li>\u4f34\u968f\u77e9\u9635 \\(\\mathrm{adj}(A)_{ij} = (-1)^{i+j} M_{ji} \\quad (\\text{\u5176\u4e2d} M_{ji} \\text{\u4e3a\u5143\u7d20} a_{ji} \\text{\u7684\u4f59\u5b50\u5f0f})\\)</li> <li>\u521d\u7b49\u53d8\u6362 (\u4e0d\u6539\u53d8 \u5411\u91cf\u7ebf\u6027\u53d8\u6362 \u7684 \u76f8\u5bf9\u5173\u7cfb \u7684\u53d8\u6362)</li> <li>\u6b63\u4ea4\u77e9\u9635 \u63cf\u8ff0\u4e0d\u6539\u53d8\u53d8\u6362\u7684\u5411\u91cf\u95f4\u7684\u5939\u89d2\u7684\u53d8\u6362</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_4","title":"\u5411\u91cf","text":"<ul> <li>\u7ebf\u6027\u5173\u7cfb</li> <li>\u6781\u5927\u7ebf\u5f62\u65e0\u5173\u7ec4 \u4e00\u7ec4\u7ebf\u6027\u65e0\u5173\u5411\u91cf\u7684\u96c6\u5408 (\u7a7a\u95f4\u7684\u4e00\u7ec4\u57fa)</li> <li>\u5185\u79ef</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_5","title":"\u884c\u5217\u5f0f","text":"<ul> <li>\u53d8\u6362\u540e \"\u9762\u79ef\" \u7684\u6bd4\u4f8b\u5173\u7cfb</li> <li>\u5c55\u5f00 / \u53d8\u6362 / \u6c42\u89e3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#rank","title":"rank","text":"<ul> <li>\u7ebf\u6027\u7a7a\u95f4\u7ef4\u6570</li> <li>\u7ebf\u6027\u76f8\u5173 / <code>\u884c\u5217\u5f0f == 0</code> \u672c\u8d28\u662f\u964d\u7ef4 / \u9000\u5316</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_6","title":"\u7279\u5f81\u503c\u4e0e\u7279\u5f81\u5411\u91cf","text":"<ul> <li>\u53d8\u6362\u540e \"\u7279\u5b9a\u65b9\u5411\"(\u7279\u5f81\u5411\u91cf) \u4e0a\u5b58\u5728\u7684\u6bd4\u4f8b\u5173\u7cfb (\u7279\u5f81\u503c)</li> <li>\u5bf9\u89d2\u5316 (\u53d8\u57fa\u540e\u7279\u5f81\u5411\u91cf\u6b63\u4ea4, \u8981\u6c42\u6ee1 rank)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_7","title":"\u77e9\u9635\u5173\u7cfb","text":"<ul> <li>\u7b49\u4ef7 (\u540c\u4e00\u7a7a\u95f4\u7ef4\u5ea6)</li> <li>\u76f8\u4f3c (\u4e0d\u540c\u57fa\u4e0b\u7684\u540c\u4e00\u53d8\u6362)</li> <li>\u5408\u540c (\u4e0d\u540c\u57fa\u4e0b\u7684\u540c\u4e00\u4e2a\u4e8c\u6b21\u578b)</li> <li>\u6b63\u4ea4\u76f8\u4f3c (\u4e0d\u540c\u6b63\u4ea4\u57fa\u4e0b\u7684\u540c\u4e00\u53d8\u6362)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_8","title":"\u7ebf\u6027\u65b9\u7a0b\u7ec4","text":"<ul> <li>\u6700\u7b80\u9636\u68af\u5f62</li> <li>\u6c42\u89e3\u7ecf\u53d8\u6362\u540e\u4e3a\u7279\u5b9a\u5411\u91cf\u7684\u672a\u77e5\u5411\u91cf</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_9","title":"\u4e8c\u6b21\u578b\u77e9\u9635","text":"<ul> <li>\u7528\u4e8e\u63cf\u8ff0\u4e8c\u6b21\u578b\u51fd\u6570\u7684\u77e9\u9635</li> <li>\u7528\u53ef\u9006\u53d8\u6362 (\u4e0d\u9000\u5316) \u662f\u77e9\u9635\"\u5bf9\u89d2\", \u5f97\u5230\u6807\u51c6\u5f62</li> <li>\u518d\u5c06\u7cfb\u6570\u7b80\u5316\u4e3a\u6b63\u8d1f 1 \u5f97\u5230\u89c4\u8303\u5f62</li> <li>\u5224\u65ad\u6709\u5b9a\u6027</li> <li>\u6b63\u5b9a\u63cf\u8ff0\u53d8\u6362\u4f1a\u4f7f\u5411\u91cf\u957f\u5ea6\u589e\u52a0, \u8d1f\u5b9a\u53cd\u4e4b</li> <li>\u6b63\u5b9a\u63cf\u8ff0\u53d8\u6362\u4f1a\u4f7f\u5411\u91cf\u5939\u89d2\u7684\u9510\u987f\u6027\u4e0d\u53d8, \u534a\u8d1f\u5b9a\u53cd\u4e4b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/","title":"\u7ec4\u5408\u6570\u5b66","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u79bb\u6563\u6570\u5b66\u53ca\u5176\u5e94\u7528 - \u7ffb\u8bd1\u7248, \u5305\u62ec \"\u79bb\u6563\u6570\u5b66\" \u548c\u7ec4\u5408\u6570\u5b66 / \u521d\u7b49\u6570\u8bba /... - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_3","title":"\u57fa\u7840\u8ba1\u6570\u539f\u7406","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_4","title":"\u57fa\u672c\u6cd5\u5219","text":"<ul> <li>\u52a0\u6cd5\u539f\u7406: \u82e5 \\(A \\cap B = \\emptyset\\), \u5219 \\(|A \\cup B| = |A| + |B|\\)</li> <li>\u4e58\u6cd5\u539f\u7406: \\(|A \\times B| = |A| \\cdot |B|\\)</li> <li>\u5bb9\u65a5\u539f\u7406: \\(|A \\cup B| = |A| + |B| - |A \\cap B|\\)</li> <li>\u9664\u6cd5\u6cd5\u5219 \u7c7b\u4f3c\u8ba1\u6570\u65f6\u91cd\u590d\u8ba1\u7b97, \u6700\u7ec8\u7ed3\u679c\u9700\u8981\u9664\u4ee5\u91cd\u590d\u6b21</li> <li>\u9e3d\u5de2\u539f\u7406: \u5c06 \\(n\\) \u4e2a\u7269\u4f53\u653e\u5165 \\(k\\) \u4e2a\u76d2\u5b50, \u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u76d2\u5b50\u5305\u542b \\(\\lceil n/k \\rceil\\) \u4e2a\u7269\u4f53</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_5","title":"\u6392\u5217\u7ec4\u5408","text":"\u7c7b\u578b \u516c\u5f0f \u793a\u4f8b \u6392\u5217 \\(P(n, k) = \\frac{n!}{(n-k)!}\\) 5 \u4eba\u9009 3 \u4eba\u6392\u961f: \\(P (5, 3)=60\\) \u7ec4\u5408 \\(C(n, k) = \\frac{n!}{k!(n-k)!}\\) 5 \u4eba\u9009 3 \u4eba: \\(C (5, 3)=10\\)"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_6","title":"\u5141\u8bb8\u91cd\u590d\u7684\u6392\u5217\u7ec4\u5408","text":"<ul> <li>\u6392\u5217\u4e0e\u7ec4\u5408</li> <li>\u6392\u5217(\u6709\u5e8f, \u53ef\u91cd\u590d): \\(n^r\\)</li> <li> <p>\u7ec4\u5408(\u65e0\u5e8f, \u53ef\u91cd\u590d): \\(\\binom{n+r-1}{r}\\)</p> </li> <li> <p>\u591a\u91cd\u96c6\u6392\u5217</p> </li> <li>\u82e5\u96c6\u5408\u4e2d\u6709\u91cd\u590d\u5143\u7d20, \u6392\u5217\u6570\u4e3a \\(\\frac{n!}{\\prod_{i} (k_i!)}\\), \u5176\u4e2d \\(k_i\\) \u4e3a\u7b2c \\(i\\) \u7c7b\u5143\u7d20\u7684\u91cd\u590d\u6b21\u6570</li> <li> <p>\u5c06 \\(n\\) \u4e2a\u76f8\u540c\u5143\u7d20\u5206\u4e3a \\(k\\) \u7ec4, \u6bcf\u7ec4\u5927\u5c0f\u4e3a \\(R_i\\), \u5219\u5206\u7ec4\u65b9\u5f0f\u4e3a \\(\\frac{n!}{\\prod_{i=1}^{k} (R_i!)}\\) | \u91cd\u590d\u7ec4\u5408 | \\(C(n+k-1, k)\\)                   | 3 \u79cd\u6c34\u679c\u4e70 5 \u4e2a: \\(C (7, 5)=21\\) |</p> </li> <li> <p>\u5b57\u5178\u5e8f\u751f\u6210\u6392\u5217</p> </li> <li>\u6bd4\u7279\u4e32\u751f\u6210\u7ec4\u5408</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_7","title":"\u9ad8\u7ea7\u8ba1\u6570\u6280\u672f","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_8","title":"\u9012\u63a8\u5173\u7cfb","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_9","title":"\u5e38\u7cfb\u6570\u9f50\u6b21\u7ebf\u6027\u9012\u63a8\u5173\u7cfb","text":"<p>\u5bf9\u4e8e\u9012\u63a8\u5173\u7cfb:  $$ a_n = c_1 a_{n-1} + c_2 a_{n-2} + \\cdots + c_k a_{n-k} $$</p> <ul> <li>\u7279\u5f81\u65b9\u7a0b\u6cd5</li> <li>\u7279\u5f81\u65b9\u7a0b\u4e3a: \\(r^k - c_1 r^{k-1} - c_2 r^{k-2} - \\cdots - c_k = 0\\)</li> <li>\u82e5\u7279\u5f81\u6839 \\(r_1, r_2, \\ldots, r_k\\) \u4e92\u5f02, \u901a\u89e3\u4e3a      $$      a_n = A_1 r_1^n + A_2 r_2^n + \\cdots + A_k r_k^n      $$</li> <li>\u82e5\u5b58\u5728\u91cd\u6839(\u5982\u4e8c\u91cd\u6839 \\(r\\)), \u5bf9\u5e94\u89e3\u4e3a \\((A + Bn) r^n\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_10","title":"\u5e38\u7cfb\u6570\u975e\u9f50\u6b21\u7ebf\u6027\u9012\u63a8\u5173\u7cfb","text":"\\[ a_n = c_1 a_{n-1} + \\cdots + c_k a_{n-k} + F(n) \\] <ul> <li>\u6c42\u89e3\u6b65\u9aa4</li> <li>\u5148\u6c42\u9f50\u6b21\u65b9\u7a0b\u7684\u901a\u89e3 \\(a_n^{(h)}\\)</li> <li>\u518d\u627e\u4e00\u4e2a\u7279\u89e3 \\(a_n^{(p)}\\)(\u5f62\u5f0f\u4e0e \\(F(n)\\) \u76f8\u5173)</li> <li>\u901a\u89e3\u4e3a \\(a_n = a_n^{(h)} + a_n^{(p)}\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_11","title":"\u751f\u6210\u51fd\u6570","text":"<ul> <li>\u751f\u6210\u51fd\u6570\u662f\u4ee5\u4e00\u4e2a\u6570\u5217\u7684\u53d8\u5f62\u4f5c\u4e3a\u4e0d\u540c\u5e42\u6b21\u9879\u7684\u7cfb\u6570\u7684\u591a\u9879\u5f0f\u548c\u5f0f</li> <li>\u666e\u901a\u751f\u6210\u51fd\u6570\u6307\u6570\u5217\u9879\u76f4\u63a5\u4e3a\u7cfb\u6570 \\(G(x) = \\sum_{k=0}^\\infty a_kx^k\\)</li> <li>\u5b83\u663e\u7136\u662f\u6570\u5b66\u5de5\u5177</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_12","title":"\u5e7f\u4e49\u4e8c\u9879\u5f0f","text":"<ul> <li>\u5c06 \\(C(n, k)\\) \u4e2d \\(n\\) \u63a8\u5e7f\u4e3a\u5b9e\u6570</li> <li>\u5e7f\u4e49\u4e8c\u9879\u5f0f\u5b9a\u7406 \\((1+x)^n = \\sum_{k=0}^\\infty \\binom{n}{k} x^k \\quad (|x|&lt;1)\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_13","title":"\u6590\u6ce2\u90a3\u5951\u6570\u5217","text":"<ul> <li>\\(F (n) = F (n-1) + F (n-2)\\)</li> <li>\u5362\u5361\u65af\u6570\u5217 \\(L(n)\\) \u662f\u4ee5 2, 1 \u5f00\u59cb\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217 \\(F(n)\\)</li> <li>\u6ce8\u610f\u5230 \\(L(n)^2 - 5F(n)^2 = -4\\)</li> <li>\u4ee5\u6590\u6ce2\u90a3\u5951\u6570\u5217\u76f8\u90bb\u4e24\u9879\u4f5c\u4e3a\u8f93\u5165\u4f1a\u4f7f\u6b27\u51e0\u91cc\u5fb7\u7b97\u6cd5\u8fbe\u5230\u6700\u574f\u590d\u6742\u5ea6</li> <li>\\(2L(m+n) = 5F(m)F(n) - L(m)L(n)\\)</li> <li>\\(2F(m+n) = F(m)L(n) + L(m)F(n)\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_14","title":"\u7279\u6b8a\u8ba1\u6570\u5e8f\u5217","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_15","title":"\u5361\u7279\u5170\u6570","text":"<p>\\(\\(C_n = \\frac undefined{n+1} C (2n, n)\\)\\) \u5e94\u7528\u573a\u666f: </p> <ol> <li>\u5408\u6cd5\u62ec\u53f7\u5e8f\u5217\u6570</li> <li>\u4e8c\u53c9\u6811\u5f62\u6001\u6570</li> <li>\u51f8\u591a\u8fb9\u5f62\u4e09\u89d2\u5256\u5206\u6570</li> </ol>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_16","title":"\u65af\u7279\u6797\u6570","text":"\u7c7b\u578b \u5b9a\u4e49 \u9012\u63a8\u5173\u7cfb \u7b2c\u4e00\u7c7b \\([n \\atop k]\\): \\(n\\) \u5143 \\(k\\) \u8f6e\u6362 \\(s(n, k) = s(n-1, k-1) + (n-1)s(n-1, k)\\) \u7b2c\u4e8c\u7c7b \\({n \\atop k}\\): \\(n\\) \u5143 \\(k\\) \u5b50\u96c6 \\(S(n, k) = S(n-1, k-1) + kS(n-1, k)\\) <ul> <li>\u7b2c\u4e8c\u79cd\u65af\u7279\u6797\u6570 \\(S(n, k)\\) \u8868\u793a\u5c06 n \u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u5206\u6210 k \u4e2a\u975e\u7a7a\u96c6\u5408\u7684\u65b9\u6848\u6570</li> <li>\u7b2c\u4e00\u79cd\u65af\u7279\u6797\u6570 \\(S(n, k)\\) \u8868\u793a\u5c06 n \u4e2a\u4e0d\u540c\u7684\u5143\u7d20\u5206\u6210 k \u4e2a\u975e\u7a7a\u8f6e\u6362\u7684\u65b9\u6848\u6570</li> <li>\u4e00\u7ec4\u5143\u7d20 (n \u4e2a) \u7684\u8f6e\u6362\u662f\u6307\u5c06\u8fd9\u7ec4\u5143\u7d20\u7684\u6392\u5217\u987a\u5e8f\u5faa\u73af\u53f3\u79fb\u4e00\u4f4d\u5f97\u5230\u7684 n \u4e2a\u6392\u5217</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_17","title":"\u7ec4\u5408\u6052\u7b49\u5f0f","text":"<ul> <li>\u4e8c\u9879\u5f0f\u7cfb\u6570\u6c42\u548c</li> <li>\\(\\sum_{r=0}^{n} \\binom{n}{r} = 2^n\\)</li> <li>\u5947\u6570\u9879\u548c\u7b49\u4e8e\u5076\u6570\u9879\u548c: \\(\\sum_{r \\text{ odd}} \\binom{n}{r} = \\sum_{r \\text{ even}} \\binom{n}{r} = 2^{n-1}\\)</li> <li> <p>\u52a0\u6743\u6c42\u548c: \\(\\sum_{r=0}^{n} 2^r \\binom{n}{r} = 3^n\\)</p> </li> <li> <p>\u5e15\u65af\u5361\u6052\u7b49\u5f0f</p> </li> <li>\\(\\binom{n+1}{r} = \\binom{n}{r} + \\binom{n}{r-1}\\)</li> <li>\u6768\u8f89\u4e09\u89d2\u6027\u8d28: \\(\\binom{n+1}{r+1} = \\sum_{j=r}^{n} \\binom{j}{r} \\quad (r \\leq n)\\)</li> </ul> \u540d\u79f0 \u516c\u5f0f \u8303\u5fb7\u8499\u5fb7 \\(\\sum_{k=0}^r C(m, k)C(n, r-k) = C(m+n, r)\\) \u591a\u9879\u5f0f\u5b9a\u7406 \\((\\sum x_i)^n = \\sum \\frac{n!}{\\prod k_i!}\\prod x_i^{k_i}\\)"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_18","title":"\u7ecf\u5178\u95ee\u9898","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_19","title":"\u9519\u4f4d\u6392\u5217","text":"<ul> <li>\\(D_n = (n-1)(D_{n-1} + D_{n-2}) \\quad (D_1=0, D_2=1)\\)</li> <li>\u5c01\u95ed\u5f62\u5f0f: \\(D_n = n!\\sum_{k=0}^n \\frac {(-1)^k}{k!}\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/#_20","title":"\u592b\u59bb\u56f4\u5750","text":"<ul> <li>\\(n\\) \u5bf9\u592b\u59bb\u56f4\u5750\u4e00\u5708, \u6bcf\u5bf9\u592b\u59bb\u4e4b\u95f4\u6709\u4e00\u4e2a\u4eba, \u95ee\u6709\u591a\u5c11\u79cd\u65b9\u6848:</li> <li>\\(\\frac {(2n)!}{2n} - \\sum_{k=1}^n (-1)^{k+1} C (n, k) 2^k (2n-1-k)!\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E7%90%86%E8%AE%BA/","title":"\u8ba1\u7b97\u7406\u8bba","text":"<ul> <li>\u8ba1\u7b97\u7406\u8bba\u5bfc\u5f15 \u5168, \u901a\u4fd7 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E9%9B%86%E5%90%88%E8%AE%BA/","title":"\u96c6\u5408\u8bba","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E9%9B%86%E5%90%88%E8%AE%BA/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u7535\u79d1\u5927\u79bb\u6563\u6570\u5b66 - \u6807\u51c6\u79bb\u6563\u6570\u5b66 - 3</li> <li>\u79bb\u6563\u6570\u5b66\u53ca\u5176\u5e94\u7528 - \u7ffb\u8bd1\u7248, \u5305\u62ec \"\u79bb\u6563\u6570\u5b66\" \u548c\u7ec4\u5408\u6570\u5b66 / \u521d\u7b49\u6570\u8bba /... - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E9%9B%86%E5%90%88%E8%AE%BA/#_3","title":"\u6982\u5ff5","text":"<ul> <li>\u9ad8\u4e2d\u96c6\u5408</li> <li>\u96c6\u5408: \u7ec4\u5408 / \u5173\u7cfb / \u56fe / \u6709\u9650\u72b6\u6001\u673a / \u57fa\u6570</li> <li>\u51fd\u6570 / \u7b1b\u5361\u5c14\u79ef (\u4e24\u4e2a\u96c6\u5408\u6240\u6709\u5143\u7d20\u4e4b\u95f4\u7684\u5173\u7cfb)</li> <li>A \u53ef\u6570\u7b49\u4ef7\u4e8e: \\(|A| = |\\mathbb{N}| \\Rightarrow \\aleph_0\\)</li> <li>\u8fde\u7eed\u7edf\u5047\u8bbe: \\(\\not\\exists\\ \\kappa\\ \\ \\aleph_0 &lt; \\kappa &lt; 2^{\\aleph_0} = \\aleph_1 = |\\mathbb{R}|\\)</li> <li>\u77e9\u9635</li> <li>\u7b1b\u5361\u5c14\u79ef: \\(A \\times B = {(a, b) \\mid a \\in A, b \\in B}\\)</li> <li>\u5e42\u96c6: \\(\\mathcal{P}(A) = { S \\mid S \\subseteq A }\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E9%9B%86%E5%90%88%E8%AE%BA/#_4","title":"\u5173\u7cfb","text":"<ul> <li>\\(R \\subseteq A \\times B\\)</li> <li>\u663e\u7136, \u51fd\u6570\u662f\u5173\u7cfb\u7684\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5</li> <li>\u5e38\u7528 0-1 \u77e9\u9635\u4e0e\u56fe\u8868\u793a\u5173\u7cfb</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E9%9B%86%E5%90%88%E8%AE%BA/#_5","title":"\u5230\u81ea\u8eab\u7684\u5173\u7cfb\u6027\u8d28","text":"<ul> <li>\\(\\forall a \\in A, \\ (a, a) \\in R\\) \u81ea\u53cd</li> <li>\\((a, b) \\in R \\Rightarrow (b, a) \\in R\\) \u5bf9\u79f0</li> <li>\\((a, b) \\in R \\land (b, c) \\in R \\Rightarrow (a, c) \\in R\\) \u4f20\u9012</li> <li>\u4ee5\u4e0a\u5168\u6ee1\u8db3\u4e3a\u7b49\u4ef7\u5173\u7cfb, \u5176\u4e2d\u5143\u7d20\u7684\u96c6\u5408\u4e3a\u7b49\u4ef7\u7c7b</li> <li>\u8fd8\u6709\u53cd\u5bf9\u79f0\u4e0e\u53cd\u81ea\u53cd</li> <li>\u5bf9\u4e8e\u5173\u7cfb R, \u80fd\u4f7f R \u6ee1\u8db3\u81ea\u53cd, \u5bf9\u79f0, \u4f20\u9012\u7684\u6700\u5c0f\u8d85\u96c6\u4e3a R \u7684\u81ea\u53cd, \u5bf9\u79f0, \u4f20\u9012\u95ed\u5305</li> <li>\\([a] = { x \\in S \\mid x \\sim a }\\) a \u7684\u7b49\u4ef7\u7c7b (\u5728\u67d0\u4e2a\u7b49\u4ef7\u5173\u7cfb\u4e0b\u76f8\u7b49\u7684\u5143\u7d20\u7684\u96c6\u5408)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E9%9B%86%E5%90%88%E8%AE%BA/#_6","title":"\u5173\u7cfb\u6027\u8d28","text":"<ul> <li>\\(S \\circ R = {(a, c) \\mid \\exists b, (a, b) \\in R \\land (b, c) \\in S}\\) \u590d\u5408\u8fd0\u7b97</li> <li>\\(R^{n+1} = R^n \\circ R\\) \u5e42\u8fd0\u7b97</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%90%86%E8%AE%BA%E5%9F%BA%E7%A1%80/%E9%9B%86%E5%90%88%E8%AE%BA/#_7","title":"\u5e8f","text":"<ul> <li>\u82e5 R \u662f\u81ea\u53cd\u7684, \u53cd\u5bf9\u79f0\u7684, \u4f20\u9012\u7684, \u5219\u79f0 R \u4e3a\u504f\u5e8f, \\((S, R)\\) \u4e3a\u4e00\u4e2a\u504f\u5e8f\u96c6</li> <li>\u82e5 S \u4e2d\u6240\u6709\u5143\u7d20\u53ef\u6bd4, \u5219\u79f0 R \u662f\u5168\u5e8f, S \u4e3a\u4e00\u4e2a\u5168\u5e8f\u96c6, \u4ea6\u79f0\u94fe</li> <li>\u94fe S \u7684\u975e\u7a7a\u5b50\u96c6\u90fd\u6709\u6700\u5c0f\u5143\u7d20, \u5219\u79f0 S \u662f\u826f\u5e8f\u96c6</li> <li>\u504f\u5e8f\u53ef\u4ee5\u7528\u54c8\u585e\u56fe\u8868\u793a, \u8282\u7701\u8bb8\u591a\u8fb9</li> <li>\u82e5\u504f\u5e8f\u96c6\u6bcf\u5bf9\u5143\u7d20\u90fd\u6709\u6700\u5c0f\u4e0a\u754c\u4e0e\u6700\u5927\u4e0b\u754c, \u5219\u8be5\u504f\u5e8f\u96c6\u4e3a\u683c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/","title":"\u4ee3\u7801\u968f\u60f3\u5f55","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u4ee3\u7801\u968f\u60f3\u5f55 - \u7cfb\u7edf\u5237\u9898, \u603b\u7ed3\u7684\u5f88\u68d2 - 5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#_3","title":"\u6570\u7ec4","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no704","title":"\u529b\u6263 no.704","text":"<p>\u4e8c\u5206\u67e5\u627e</p> <pre><code>class Solution {\npublic:\n    int search(vector&lt;int&gt;&amp; nums, int target) {\n        int left = 0, right = nums.size() - 1;\n        while(left &lt;= right){\n            int mid = (right - left) / 2 + left;\n            int num = nums[mid];\n            if (num == target) {\n                return mid;\n            } else if (num &gt; target) {\n                right = mid - 1;\n            } else {\n                left = mid + 1;\n            }\n        }\n        return -1;\n    }\n};\n</code></pre> <ul> <li>\u524d\u63d0\u4e3a\u6709\u5e8f\u65e0\u91cd\u590d</li> <li>\u533a\u95f4\u7684\u5b9a\u4e49 (\u5faa\u73af\u4e0d\u53d8\u91cf) \u4e3a\u4e24\u79cd, \u5de6\u95ed\u53f3\u95ed\u6216\u5de6\u95ed\u53f3\u5f00</li> <li>\u5de6\u95ed\u53f3\u95ed, while \u4f7f\u7528 &lt;=, if (nums [middle]&gt;target) right \u8d4b\u503c\u4e3a middle-1</li> <li>\u5de6\u95ed\u53f3\u5f00, while \u4f7f\u7528 &lt;, if (nums [middle]&gt;target) right \u8d4b\u503c\u4e3a middle</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no27","title":"\u529b\u6263 no.27","text":"<p>\u79fb\u9664\u5143\u7d20</p> <pre><code>class Solution {\npublic:\n    int removeElement(vector&lt;int&gt;&amp; nums, int val) {\n        int slowIndex = 0;\n        for (int fastIndex = 0; fastIndex &lt; nums.size(); fastIndex++) {\n            if (val != nums[fastIndex]) {\n                nums[slowIndex++] = nums[fastIndex];\n            }\n        }\n        return slowIndex;\n    }\n};\n</code></pre> <ul> <li>\u53cc\u6307\u9488\u6cd5</li> <li>\u5feb\u6307\u9488\u5bfb\u627e\u65b0\u6570\u7ec4\u7684\u5143\u7d20, \u6162\u6307\u9488\u6307\u5411\u66f4\u65b0\u65b0\u6570\u7ec4\u4e0b\u6807\u7684\u4f4d\u7f6e</li> <li>\u9996\u5c3e\u6307\u9488, \u4ece\u6570\u7ec4\u4e24\u7aef\u5411\u4e2d\u95f4\u79fb\u52a8\u53ef\u4ee5\u5c06 \\(n+k\\) \u4f18\u5316\u5230 \\(n\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no977","title":"\u529b\u6263 no.977","text":"<p>\u6709\u5e8f\u6570\u7ec4\u7684\u5e73\u65b9</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; sortedSquares(vector&lt;int&gt;&amp; A) {\n        int k = A.size() - 1;\n        vector&lt;int&gt; result(A.size(), 0);\n        for (int i = 0, j = A.size() - 1; i &lt;= j;) { // \u6ce8\u610f\u8fd9\u91cc\u8981 i &lt;= j, \u56e0\u4e3a\u6700\u540e\u8981\u5904\u7406\u4e24\u4e2a\u5143\u7d20\n            if (A[i] * A[i] &lt; A[j] * A[j])  {\n                result[k--] = A[j] * A[j];\n                j--;\n            }\n            else {\n                result[k--] = A[i] * A[i];\n                i++;\n            }\n        }\n        return result;\n    }\n};\n</code></pre> <ul> <li>\u53cc\u6307\u9488\u6cd5, \u4e00\u5f00\u59cb\u6211\u4ee5\u4e3a\u8981\u5408\u5e76\u76f8\u7b49\u9879\u5462 (\u5176\u5b9e\u4e5f\u5dee\u4e0d\u591a)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no209","title":"\u529b\u6263 no.209","text":"<p>\u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4</p> <pre><code>class Solution {\npublic:\n    int minSubArrayLen(int s, vector&lt;int&gt;&amp; nums) {\n        int result = INT32_MAX;\n        int sum = 0; // \u6ed1\u52a8\u7a97\u53e3\u6570\u503c\u4e4b\u548c\n        int i = 0; // \u6ed1\u52a8\u7a97\u53e3\u8d77\u59cb\u4f4d\u7f6e\n        int subLength = 0; // \u6ed1\u52a8\u7a97\u53e3\u7684\u957f\u5ea6\n        for (int j = 0; j &lt; nums.size(); j++) {\n            sum += nums[j];\n            // \u6ce8\u610f\u8fd9\u91cc\u4f7f\u7528 while, \u6bcf\u6b21\u66f4\u65b0 i(\u8d77\u59cb\u4f4d\u7f6e), \u5e76\u4e0d\u65ad\u6bd4\u8f83\u5b50\u5e8f\u5217\u662f\u5426\u7b26\u5408\u6761\u4ef6\n            while (sum &gt;= s) {\n                subLength = (j - i + 1); // \u53d6\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\n                result = result &lt; subLength ? result : subLength;\n                sum -= nums[i++]; // \u8fd9\u91cc\u4f53\u73b0\u51fa\u6ed1\u52a8\u7a97\u53e3\u7684\u7cbe\u9ad3\u4e4b\u5904, \u4e0d\u65ad\u53d8\u66f4 i(\u5b50\u5e8f\u5217\u7684\u8d77\u59cb\u4f4d\u7f6e)\n            }\n        }\n        // \u5982\u679c result \u6ca1\u6709\u88ab\u8d4b\u503c\u7684\u8bdd, \u5c31\u8fd4\u56de 0, \u8bf4\u660e\u6ca1\u6709\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u5e8f\u5217\n        return result == INT32_MAX ? 0 : result;\n    }\n};\n</code></pre> <ul> <li>\u6ed1\u52a8\u7a97\u53e3\u6cd5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no59","title":"\u529b\u6263 no.59","text":"<p>\u87ba\u65cb\u77e9\u9635 II</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; generateMatrix(int n) {\n        vector&lt;vector&lt;int&gt;&gt; res(n, vector&lt;int&gt;(n, 0)); // \u4f7f\u7528 vector \u5b9a\u4e49\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\n        int startx = 0, starty = 0; // \u5b9a\u4e49\u6bcf\u5faa\u73af\u4e00\u4e2a\u5708\u7684\u8d77\u59cb\u4f4d\u7f6e\n        int loop = n / 2; // \u6bcf\u4e2a\u5708\u5faa\u73af\u51e0\u6b21, \u4f8b\u5982 n \u4e3a\u5947\u6570 3, \u90a3\u4e48 loop = 1 \u53ea\u662f\u5faa\u73af\u4e00\u5708, \u77e9\u9635\u4e2d\u95f4\u7684\u503c\u9700\u8981\u5355\u72ec\u5904\u7406\n        int mid = n / 2; // \u77e9\u9635\u4e2d\u95f4\u7684\u4f4d\u7f6e, \u4f8b\u5982 :n \u4e3a 3, \u4e2d\u95f4\u7684\u4f4d\u7f6e\u5c31\u662f(1, 1), n \u4e3a 5, \u4e2d\u95f4\u4f4d\u7f6e\u4e3a(2, 2)\n        int count = 1; // \u7528\u6765\u7ed9\u77e9\u9635\u4e2d\u6bcf\u4e00\u4e2a\u7a7a\u683c\u8d4b\u503c\n        int offset = 1; // \u9700\u8981\u63a7\u5236\u6bcf\u4e00\u6761\u8fb9\u904d\u5386\u7684\u957f\u5ea6, \u6bcf\u6b21\u5faa\u73af\u53f3\u8fb9\u754c\u6536\u7f29\u4e00\u4f4d\n        int i, j;\n        while (loop --) {\n            i = startx;\n            j = starty;\n\n            // \u4e0b\u9762\u5f00\u59cb\u7684\u56db\u4e2a for \u5c31\u662f\u6a21\u62df\u8f6c\u4e86\u4e00\u5708\n            // \u6a21\u62df\u586b\u5145\u4e0a\u884c\u4ece\u5de6\u5230\u53f3(\u5de6\u95ed\u53f3\u5f00)\n            for (j; j &lt; n - offset; j++) {\n                res[i][j] = count++;\n            }\n            // \u6a21\u62df\u586b\u5145\u53f3\u5217\u4ece\u4e0a\u5230\u4e0b(\u5de6\u95ed\u53f3\u5f00)\n            for (i; i &lt; n - offset; i++) {\n                res[i][j] = count++;\n            }\n            // \u6a21\u62df\u586b\u5145\u4e0b\u884c\u4ece\u53f3\u5230\u5de6(\u5de6\u95ed\u53f3\u5f00)\n            for (; j &gt; starty; j--) {\n                res[i][j] = count++;\n            }\n            // \u6a21\u62df\u586b\u5145\u5de6\u5217\u4ece\u4e0b\u5230\u4e0a(\u5de6\u95ed\u53f3\u5f00)\n            for (; i &gt; startx; i--) {\n                res[i][j] = count++;\n            }\n\n            // \u7b2c\u4e8c\u5708\u5f00\u59cb\u7684\u65f6\u5019, \u8d77\u59cb\u4f4d\u7f6e\u8981\u5404\u81ea\u52a0 1, \u4f8b\u5982 :\u7b2c\u4e00\u5708\u8d77\u59cb\u4f4d\u7f6e\u662f(0, 0), \u7b2c\u4e8c\u5708\u8d77\u59cb\u4f4d\u7f6e\u662f(1, 1)\n            startx++;\n            starty++;\n\n            // offset \u63a7\u5236\u6bcf\u4e00\u5708\u91cc\u6bcf\u4e00\u6761\u8fb9\u904d\u5386\u7684\u957f\u5ea6\n            offset += 1;\n        }\n\n        // \u5982\u679c n \u4e3a\u5947\u6570\u7684\u8bdd, \u9700\u8981\u5355\u72ec\u7ed9\u77e9\u9635\u6700\u4e2d\u95f4\u7684\u4f4d\u7f6e\u8d4b\u503c\n        if (n % 2) {\n            res[mid][mid] = count;\n        }\n        return res;\n    }\n};\n</code></pre> <ul> <li>\u6a21\u62df, \u575a\u6301\u5faa\u73af\u4e0d\u53d8\u91cf\u539f\u5219, \u5de6\u95ed\u53f3\u5f00</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no58","title":"\u5361\u7801\u7f51 no.58","text":"<p>\u533a\u95f4\u548c</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\nint main() {\n    int n, a, b;\n    cin &gt;&gt; n;\n    vector&lt;int&gt; vec(n);\n    for (int i = 0; i &lt; n; i++) cin &gt;&gt; vec[i];\n    while (cin &gt;&gt; a &gt;&gt; b) {\n        int sum = 0;\n        // \u7d2f\u52a0\u533a\u95f4 a \u5230 b \u7684\u548c\n        for (int i = a; i &lt;= b; i++) sum += vec[i];\n        cout &lt;&lt; sum &lt;&lt; endl;\n    }\n} \n</code></pre> <ul> <li>\u524d\u7f00\u548c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no44","title":"\u5361\u7801\u7f51 no.44","text":"<p>\u5f00\u53d1\u5546\u8d2d\u4e70\u571f\u5730\\ n*m \u4e2a\u533a\u5757\u62e5\u6709\u6743\u503c, \u6240\u6709\u533a\u5757\u5206\u914d\u7ed9 A \u548c B\\ \u53ea\u5141\u8bb8\u5c06\u533a\u57df\u6309\u6a2a\u5411\u6216\u7eb5\u5411\u5212\u5206\u6210\u4e24\u4e2a\u5b50\u533a\u57df, \u6c42 A \u548c B \u7684\u6700\u5c0f\u6743\u503c\u4e4b\u5dee\\</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;climits&gt;\n\nusing namespace std;\nint main () {\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    int sum = 0;\n    vector&lt;vector&lt;int&gt;&gt; vec(n, vector&lt;int&gt;(m, 0)) ;\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = 0; j &lt; m; j++) {\n            cin &gt;&gt; vec[i][j];\n            sum += vec[i][j];\n        }\n    }\n\n    int result = INT_MAX;\n    int count = 0; // \u7edf\u8ba1\u904d\u5386\u8fc7\u7684\u884c\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = 0 ; j &lt; m; j++) {\n            count += vec[i][j];\n            // \u904d\u5386\u5230\u884c\u672b\u5c3e\u65f6\u5019\u5f00\u59cb\u7edf\u8ba1\n            if (j == m - 1) result = min (result, abs(sum - count - count));\n\n        }\n    }\n\n    count = 0; // \u7edf\u8ba1\u904d\u5386\u8fc7\u7684\u5217\n    for (int j = 0; j &lt; m; j++) {\n        for (int i = 0 ; i &lt; n; i++) {\n            count += vec[i][j];\n            // \u904d\u5386\u5230\u5217\u672b\u5c3e\u7684\u65f6\u5019\u5f00\u59cb\u7edf\u8ba1\n            if (i == n - 1) result = min (result, abs(sum - count - count));\n        }\n    }\n    cout &lt;&lt; result &lt;&lt; endl;\n}\n</code></pre> <ul> <li>\u6c42\u524d\u7f00\u548c\u7684\u8fc7\u7a0b\u4e2d\u53ef\u89e3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#_4","title":"\u94fe\u8868","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no203","title":"\u529b\u6263 no.203","text":"<p>\u79fb\u9664\u94fe\u8868\u5143\u7d20</p> <pre><code>class Solution {\npublic:\n    ListNode* removeElements(ListNode* head, int val) {\n        // \u5220\u9664\u5934\u7ed3\u70b9\n        while (head != NULL &amp;&amp; head-&gt;val == val) { // \u6ce8\u610f\u8fd9\u91cc\u4e0d\u662f if\n            ListNode* tmp = head;\n            head = head-&gt;next;\n            delete tmp;\n        }\n\n        // \u5220\u9664\u975e\u5934\u7ed3\u70b9\n        ListNode* cur = head;\n        while (cur != NULL &amp;&amp; cur-&gt;next!= NULL) {\n            if (cur-&gt;next-&gt;val == val) {\n                ListNode* tmp = cur-&gt;next;\n                cur-&gt;next = cur-&gt;next-&gt;next;\n                delete tmp;\n            } else {\n                cur = cur-&gt;next;\n            }\n        }\n        return head;\n    }\n};\n</code></pre> <ul> <li>\u865a\u62df\u5934\u8282\u70b9/\u9012\u5f52/\u6734\u7d20, \u89e3\u6cd5\u5f88\u591a</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no707","title":"\u529b\u6263 no.707","text":"<p>\u8bbe\u8ba1\u94fe\u8868</p> <pre><code>//get(index)\uff1a\u83b7\u53d6\u94fe\u8868\u4e2d\u7b2c index \u4e2a\u8282\u70b9\u7684\u503c \u5982\u679c\u7d22\u5f15\u65e0\u6548, \u5219\u8fd4\u56de-1\n//addAtHead(val)\uff1a\u5728\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e4b\u524d\u6dfb\u52a0\u4e00\u4e2a\u503c\u4e3a val \u7684\u8282\u70b9 \u63d2\u5165\u540e, \u65b0\u8282\u70b9\u5c06\u6210\u4e3a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9 \n//addAtTail(val)\uff1a\u5c06\u503c\u4e3a val \u7684\u8282\u70b9\u8ffd\u52a0\u5230\u94fe\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\n//addAtIndex(index, val)\uff1a\u5728\u94fe\u8868\u4e2d\u7684\u7b2c index \u4e2a\u8282\u70b9\u4e4b\u524d\u6dfb\u52a0\u503c\u4e3a val \u7684\u8282\u70b9 \u5982\u679c index \u7b49\u4e8e\u94fe\u8868\u7684\u957f\u5ea6, \u5219\u8be5\u8282\u70b9\u5c06\u9644\u52a0\u5230\u94fe\u8868\u7684\u672b\u5c3e \u5982\u679c index \u5927\u4e8e\u94fe\u8868\u957f\u5ea6, \u5219\u4e0d\u4f1a\u63d2\u5165\u8282\u70b9 \u5982\u679c index \u5c0f\u4e8e 0, \u5219\u5728\u5934\u90e8\u63d2\u5165\u8282\u70b9\n//deleteAtIndex(index)\uff1a\u5982\u679c\u7d22\u5f15 index \u6709\u6548, \u5219\u5220\u9664\u94fe\u8868\u4e2d\u7684\u7b2c index \u4e2a\u8282\u70b9\n</code></pre> <ul> <li>\u7565</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no206","title":"\u529b\u6263 no.206","text":"<p>\u7ffb\u8f6c\u94fe\u8868</p> <pre><code>class Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        if (!head || !head-&gt;next) {\n            return head;\n        }\n        ListNode* newHead = reverseList(head-&gt;next);\n        head-&gt;next-&gt;next = head;\n        head-&gt;next = nullptr;\n        return newHead;\n    }\n};\n</code></pre> <ul> <li>\u8fed\u4ee3/\u9012\u5f52</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no24","title":"\u529b\u6263 no.24","text":"<p>\u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9</p> <pre><code>class Solution {\npublic:\n    ListNode* swapPairs(ListNode* head) {\n        ListNode* dummyHead = new ListNode(0);\n        dummyHead-&gt;next = head;\n        ListNode* temp = dummyHead;\n        while (temp-&gt;next != nullptr &amp;&amp; temp-&gt;next-&gt;next != nullptr) {\n            ListNode* node1 = temp-&gt;next;\n            ListNode* node2 = temp-&gt;next-&gt;next;\n            temp-&gt;next = node2;\n            node1-&gt;next = node2-&gt;next;\n            node2-&gt;next = node1;\n            temp = node1;\n        }\n        ListNode* ans = dummyHead-&gt;next;\n        delete dummyHead;\n        return ans;\n    }\n};\n</code></pre> <ul> <li>easy</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no19","title":"\u529b\u6263 no.19","text":"<p>\u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c N \u4e2a\u8282\u70b9</p> <pre><code>class Solution {\npublic:\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        head=new ListNode(0, head);\n        ListNode *s(head), *q(head);\n        for(;n&gt;-1;n--) q=q-&gt;next;\n        while(q){\n            q=q-&gt;next;\n            s=s-&gt;next;\n        }\n        s-&gt;next=s-&gt;next-&gt;next;\n        return head-&gt;next;\n    }\n};\n</code></pre> <ul> <li>\u53cc\u6307\u9488\u52a0\u54d1\u8282\u70b9</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no160","title":"\u529b\u6263 no.160","text":"<p>\u5224\u65ad\u4e24\u4e2a\u94fe\u8868\u76f8\u4ea4\u70b9</p> <pre><code>public class Solution {\n    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n        if (headA == null || headB == null) {\n            return null;\n        }\n        ListNode pA = headA, pB = headB;\n        while (pA != pB) {\n            pA = pA == null ? headB : pA.next;\n            pB = pB == null ? headA : pB.next;\n        }\n        return pA;\n    }\n}\n// \u53cc\u6307\u9488\u6b63\u89e3\u771f\u7684\u5de7\u5999, \u6307\u9488\u8d70\u5b8c\u540e\u4ea4\u6362\u5230\u53e6\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9\n// \u628a\u4e09\u6bb5\u8ddd\u79bb\u8bbe\u4e3a abc, \u4e00\u4e2a\u8d70\u5b8c\u662f a+c, \u53e6\u4e00\u4e2a b+c, \u4ea4\u6362\u94fe\u8868, \u8d70\u540c\u6837\u8ddd\u79bb\u521a\u597d\u662f a+b+c, \u521a\u597d\u5728\u4ea4\u70b9\u5904\n</code></pre> <ul> <li>\u7528\u54c8\u5e0c / \u5bf9\u9f50\u592a\u7b80\u5355, \u4e0d\u8bf4\u4e86</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no142","title":"\u529b\u6263 no.142","text":"<p>\u73af\u5f62\u94fe\u8868 II</p> <pre><code>class Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        ListNode *slow = head, *fast = head;\n        while (fast != nullptr) {\n            slow = slow-&gt;next;\n            if (fast-&gt;next == nullptr) {\n                return nullptr;\n            }\n            fast = fast-&gt;next-&gt;next;\n            if (fast == slow) {\n                ListNode *ptr = head;\n                while (ptr != slow) {\n                    ptr = ptr-&gt;next;\n                    slow = slow-&gt;next;\n                }\n                return ptr;\n            }\n        }\n        return nullptr;\n    }\n};\n</code></pre> <ul> <li>\u5feb\u6162\u6307\u9488</li> <li>s \u5230\u8fbe\u73af\u5165\u53e3\u65f6 (f - \u73af\u5165\u53e3) \u4e00\u5b9a\u7b49\u4e8e s \u4e0e f \u76f8\u9047\u65f6 (\u73af\u5165\u53e3 - s) \u8bbe\u4e3a\u8ddd\u79bb c</li> <li>\u94fe\u8868\u5934\u5230\u73af\u5165\u53e3\u8ddd\u79bb\u4e00\u5b9a\u4e3a\u6574\u6570\u500d\u7684\u73af\u957f + c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#_5","title":"\u54c8\u5e0c\u8868","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no242","title":"\u529b\u6263 no.242","text":"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t, \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad t \u662f\u5426\u662f s \u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd</p> <pre><code>class Solution {\npublic:\n    bool isAnagram(string s, string t) {\n        int m[26]={0}, l(0);\n        if(s.size()==t.size()) l=s.size();\n        else return 0;\n        for(int i(0);i&lt;l;i++){\n            m[s[i]-'a']++;m[t[i]-'a']--;\n        }\n        for(int i(0);i&lt;26;i++){\n            if(m[i]) return 0;\n        }\n        return 1;\n    }\n};\n</code></pre> <ul> <li>easy</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no349","title":"\u529b\u6263 no.349","text":"<p>\u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4 nums1 \u548c nums2, \u8fd4\u56de\u5b83\u4eec\u7684\u4ea4\u96c6</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; intersection(vector&lt;int&gt;&amp; nums1, vector&lt;int&gt;&amp; nums2) {\n        unordered_set&lt;int&gt; s(nums1.begin(), nums1.end());\n        unordered_set&lt;int&gt; res;\n        for(int i(0);i&lt;nums2.size();i++){\n            if(s.find(nums2[i])!=s.end()) res.insert(nums2[i]);\n        }\n        return vector&lt;int&gt;(res.begin(), res.end());\n    }\n};\n</code></pre> <ul> <li>unordered_set \u79d2\u6740</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no202","title":"\u529b\u6263 no.202","text":"<p>\u5feb\u4e50\u6570</p> <pre><code>class Solution {\n    int happy(int n){\n        int sum;\n        for(sum=0;n&gt;0;n/=10) sum+=(n%10)*(n%10);\n        return sum;\n    }\npublic:\n    bool isHappy(int n) {\n        map&lt;int, bool&gt; m;\n        while(n!=1){\n            n=happy(n);\n            if(m[n]) return 0;\n            m[n]=1;\n        }\n        return 1;\n    }\n};\n</code></pre> <ul> <li>\u76f4\u63a5\u54c8\u5e0c\u975e\u5e38\u7b80\u5355</li> <li>\u5feb\u6162\u6307\u9488\u5224\u65ad\u73af\u66f4\u597d!!!</li> <li>\u6b63\u89e3: \u6570\u5b66\u89d2\u5ea6, \u8fd9\u9053\u9898\u5176\u5b9e\u53ea\u80fd\u5b58\u5728\u4e00\u4e2a\u73af, \u786c\u7f16\u7801\u90a3\u4e2a\u73af, \u7136\u540e\u53ea\u8981\u5230\u8fbe\u73af\u4e2d\u67d0\u4e00\u4e2a\u6570\u5b57\u5c31\u8fd4\u56de 0</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no1","title":"\u529b\u6263 no.1","text":"<p>\u4e24\u6570\u4e4b\u548c</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; nums, int target) {\n        std::unordered_map &lt;int, int&gt; map;\n        for(int i = 0; i &lt; nums.size(); i++) {\n            // \u904d\u5386\u5f53\u524d\u5143\u7d20\uff0c\u5e76\u5728 map \u4e2d\u5bfb\u627e\u662f\u5426\u6709\u5339\u914d\u7684 key\n            auto iter = map.find(target - nums[i]); \n            if(iter != map.end()) {\n                return {iter-&gt;second, i};\n            }\n            // \u5982\u679c\u6ca1\u627e\u5230\u5339\u914d\u5bf9\uff0c\u5c31\u628a\u8bbf\u95ee\u8fc7\u7684\u5143\u7d20\u548c\u4e0b\u6807\u52a0\u5165\u5230 map \u4e2d\n            map.insert(pair&lt;int, int&gt;(nums[i], i)); \n        }\n        return {};\n    }\n};\n</code></pre> <ul> <li>\u65e0\u9700\u591a\u8a00</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no454","title":"\u529b\u6263 no.454","text":"<p>\u56db\u6570\u76f8\u52a0 II</p> <pre><code>class Solution {\npublic:\n    int fourSumCount(vector&lt;int&gt;&amp; A, vector&lt;int&gt;&amp; B, vector&lt;int&gt;&amp; C, vector&lt;int&gt;&amp; D) {\n        unordered_map&lt;int, int&gt; umap; //key:a+b \u7684\u6570\u503c\uff0cvalue:a+b \u6570\u503c\u51fa\u73b0\u7684\u6b21\u6570\n        // \u904d\u5386\u5927 A \u548c\u5927 B \u6570\u7ec4\uff0c\u7edf\u8ba1\u4e24\u4e2a\u6570\u7ec4\u5143\u7d20\u4e4b\u548c\uff0c\u548c\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u653e\u5230 map \u4e2d\n        for (int a : A) {\n            for (int b : B) {\n                umap[a + b]++;\n            }\n        }\n        int count = 0; // \u7edf\u8ba1 a+b+c+d = 0 \u51fa\u73b0\u7684\u6b21\u6570\n        // \u518d\u904d\u5386\u5927 C \u548c\u5927 D \u6570\u7ec4\uff0c\u627e\u5230\u5982\u679c 0-(c+d) \u5728 map \u4e2d\u51fa\u73b0\u8fc7\u7684\u8bdd\uff0c\u5c31\u628a map \u4e2d key \u5bf9\u5e94\u7684 value \u4e5f\u5c31\u662f\u51fa\u73b0\u6b21\u6570\u7edf\u8ba1\u51fa\u6765\u3002\n        for (int c : C) {\n            for (int d : D) {\n                if (umap.find(0 - (c + d)) != umap.end()) {\n                    count += umap[0 - (c + d)];\n                }\n            }\n        }\n        return count;\n    }\n};\n</code></pre> <ul> <li>\\(O(n^2)\\) \u8bb0\u5f55 \\(a+b\\) \u7684\u548c, \u7136\u540e \\(O(n^2)\\) \u904d\u5386 \\(c+d\\) \u770b\u662f\u5426\u6709\u76f8\u53cd\u6570</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no383","title":"\u529b\u6263 no.383","text":"<p>\u8d4e\u91d1\u4fe1</p> <pre><code>class Solution {\n    public boolean canConstruct(String ransomNote, String magazine) {\n        if (ransomNote.length() &gt; magazine.length()) {\n            return false;\n        }\n        int[] cnt = new int[26];\n        for (char c : magazine.toCharArray()) {\n            cnt[c - 'a']++;\n        }\n        for (char c : ransomNote.toCharArray()) {\n            cnt[c - 'a']--;\n            if(cnt[c - 'a'] &lt; 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n</code></pre> <ul> <li>\u7b80\u5355</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no15","title":"\u529b\u6263 no.15","text":"<p>\u4e09\u6570\u4e4b\u548c</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; threeSum(vector&lt;int&gt;&amp; nums) {\n        vector&lt;vector&lt;int&gt;&gt; result;\n        sort(nums.begin(), nums.end());\n        // \u627e\u51fa a + b + c = 0\n        // a = nums[i], b = nums[left], c = nums[right]\n        for (int i = 0; i &lt; nums.size(); i++) {\n            // \u6392\u5e8f\u4e4b\u540e\u5982\u679c\u7b2c\u4e00\u4e2a\u5143\u7d20\u5df2\u7ecf\u5927\u4e8e\u96f6\uff0c\u90a3\u4e48\u65e0\u8bba\u5982\u4f55\u7ec4\u5408\u90fd\u4e0d\u53ef\u80fd\u51d1\u6210\u4e09\u5143\u7ec4\uff0c\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\u5c31\u53ef\u4ee5\u4e86\n            if (nums[i] &gt; 0) {\n                return result;\n            }\n            // \u9519\u8bef\u53bb\u91cd a \u65b9\u6cd5\uff0c\u5c06\u4f1a\u6f0f\u6389-1, -1, 2 \u8fd9\u79cd\u60c5\u51b5\n            /*\n            if (nums[i] == nums[i + 1]) {\n                continue;\n            }\n            */\n            // \u6b63\u786e\u53bb\u91cd a \u65b9\u6cd5\n            if (i &gt; 0 &amp;&amp; nums[i] == nums[i - 1]) {\n                continue;\n            }\n            int left = i + 1;\n            int right = nums.size() - 1;\n            while (right &gt; left) {\n                // \u53bb\u91cd\u590d\u903b\u8f91\u5982\u679c\u653e\u5728\u8fd9\u91cc\uff0c0\uff0c0\uff0c0 \u7684\u60c5\u51b5\uff0c\u53ef\u80fd\u76f4\u63a5\u5bfc\u81f4 right&lt;=left \u4e86\uff0c\u4ece\u800c\u6f0f\u6389\u4e86 0, 0, 0 \u8fd9\u79cd\u4e09\u5143\u7ec4\n                /*\n                while (right &gt; left &amp;&amp; nums[right] == nums[right - 1]) right--;\n                while (right &gt; left &amp;&amp; nums[left] == nums[left + 1]) left++;\n                */\n                if (nums[i] + nums[left] + nums[right] &gt; 0) right--;\n                else if (nums[i] + nums[left] + nums[right] &lt; 0) left++;\n                else {\n                    result.push_back(vector&lt;int&gt;{nums[i], nums[left], nums[right]});\n                    // \u53bb\u91cd\u903b\u8f91\u5e94\u8be5\u653e\u5728\u627e\u5230\u4e00\u4e2a\u4e09\u5143\u7ec4\u4e4b\u540e\uff0c\u5bf9 b \u548c c \u53bb\u91cd\n                    while (right &gt; left &amp;&amp; nums[right] == nums[right - 1]) right--;\n                    while (right &gt; left &amp;&amp; nums[left] == nums[left + 1]) left++;\n\n                    // \u627e\u5230\u7b54\u6848\u65f6\uff0c\u53cc\u6307\u9488\u540c\u65f6\u6536\u7f29\n                    right--;\n                    left++;\n                }\n            }\n\n        }\n        return result;\n    }\n};\n</code></pre> <ul> <li>\u6392\u5e8f\u52a0\u53cc\u6307\u9488</li> <li>\u8fd9\u9898\u7684\u53bb\u91cd\u6bd4\u8f83\u590d\u6742, \u8981\u6ce8\u610f</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no18","title":"\u529b\u6263 no.18","text":"<p>\u56db\u6570\u4e4b\u548c</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; fourSum(vector&lt;int&gt;&amp; nums, int target) {\n        vector&lt;vector&lt;int&gt;&gt; result;\n        sort(nums.begin(), nums.end());\n        for (int k = 0; k &lt; nums.size(); k++) {\n            // \u526a\u679d\u5904\u7406\n            if (nums[k] &gt; target &amp;&amp; nums[k] &gt;= 0) {\n                // \u4e00\u7ea7\u526a\u679d\n                break;\n            }\n            // \u5bf9 nums[k]\u53bb\u91cd\n            if (k &gt; 0 &amp;&amp; nums[k] == nums[k - 1]) {\n                continue;\n            }\n            for (int i = k + 1; i &lt; nums.size(); i++) {\n                // 2 \u7ea7\u526a\u679d\u5904\u7406\n                if (nums[k] + nums[i] &gt; target &amp;&amp; nums[k] + nums[i] &gt;= 0) {\n                    break;\n                }\n\n                // \u5bf9 nums[i]\u53bb\u91cd\n                if (i &gt; k + 1 &amp;&amp; nums[i] == nums[i - 1]) {\n                    continue;\n                }\n                int left = i + 1;\n                int right = nums.size() - 1;\n                while (right &gt; left) {\n                    // nums[k] + nums[i] + nums[left] + nums[right] &gt; target \u4f1a\u6ea2\u51fa\n                    if ((long) nums[k] + nums[i] + nums[left] + nums[right] &gt; target) {\n                        right--;\n                    // nums[k] + nums[i] + nums[left] + nums[right] &lt; target \u4f1a\u6ea2\u51fa\n                    } else if ((long) nums[k] + nums[i] + nums[left] + nums[right]  &lt; target) {\n                        left++;\n                    } else {\n                        result.push_back(vector&lt;int&gt;{nums[k], nums[i], nums[left], nums[right]});\n                        // \u5bf9 nums[left]\u548c nums[right]\u53bb\u91cd\n                        while (right &gt; left &amp;&amp; nums[right] == nums[right - 1]) right--;\n                        while (right &gt; left &amp;&amp; nums[left] == nums[left + 1]) left++;\n\n                        // \u627e\u5230\u7b54\u6848\u65f6\uff0c\u53cc\u6307\u9488\u540c\u65f6\u6536\u7f29\n                        right--;\n                        left++;\n                    }\n                }\n\n            }\n        }\n        return result;\n    }\n};\n</code></pre> <ul> <li>\u7c7b\u4f3c\u4e09\u6570\u4e4b\u548c, \u53ea\u662f\u591a\u4e86\u4e00\u5c42\u5faa\u73af, \u6ce8\u610f\u590d\u6742\u7684\u53bb\u91cd</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#_6","title":"\u5b57\u7b26\u4e32","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no344","title":"\u529b\u6263 no.344","text":"<p>\u53cd\u8f6c\u5b57\u7b26\u4e32</p> <pre><code>class Solution {\npublic:\n    void reverseString(vector&lt;char&gt;&amp; s) {\n        int n = s.size();\n        for (int left = 0, right = n - 1; left &lt; right; ++left, --right) {\n            swap(s[left], s[right]);\n        }\n    }\n};\n</code></pre> <ul> <li>easy</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no541","title":"\u529b\u6263 no.541","text":"<p>\u53cd\u8f6c\u5b57\u7b26\u4e32 II</p> <pre><code>class Solution {\npublic:\n    string reverseStr(string s, int k) {\n        int n = s.length();\n        for (int i = 0; i &lt; n; i += 2 * k) {\n            reverse(s.begin() + i, s.begin() + min(i + k, n));\n        }\n        return s;\n    }\n};\n</code></pre> <ul> <li>easy</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no54","title":"\u5361\u7801\u7f51 no.54","text":"<p>\u66ff\u6362\u6570\u5b57</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main() {\n    string s;\n    while (cin &gt;&gt; s) {\n        int sOldIndex = s.size() - 1;\n        int count = 0; // \u7edf\u8ba1\u6570\u5b57\u7684\u4e2a\u6570\n        for (int i = 0; i &lt; s.size(); i++) {\n            if (s[i] &gt;= '0' &amp;&amp; s[i] &lt;= '9') {\n                count++;\n            }\n        }\n        // \u6269\u5145\u5b57\u7b26\u4e32s\u7684\u5927\u5c0f\uff0c\u4e5f\u5c31\u662f\u5c06\u6bcf\u4e2a\u6570\u5b57\u66ff\u6362\u6210\"number\"\u4e4b\u540e\u7684\u5927\u5c0f\n        s.resize(s.size() + count * 5);\n        int sNewIndex = s.size() - 1;\n        // \u4ece\u540e\u5f80\u524d\u5c06\u6570\u5b57\u66ff\u6362\u4e3a\"number\"\n        while (sOldIndex &gt;= 0) {\n            if (s[sOldIndex] &gt;= '0' &amp;&amp; s[sOldIndex] &lt;= '9') {\n                s[sNewIndex--] = 'r';\n                s[sNewIndex--] = 'e';\n                s[sNewIndex--] = 'b';\n                s[sNewIndex--] = 'm';\n                s[sNewIndex--] = 'u';\n                s[sNewIndex--] = 'n';\n            } else {\n                s[sNewIndex--] = s[sOldIndex];\n            }\n            sOldIndex--;\n        }\n        cout &lt;&lt; s &lt;&lt; endl;       \n    }\n}\n</code></pre> <ul> <li>easy</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no151","title":"\u529b\u6263 no.151","text":"<p>\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd</p> <pre><code>class Solution {\npublic:\n    string reverseWords(string s) {\n        string ans;\n        int i(s.size()-1);\n        for(;i&gt;=0;i--) if(s[i]!=' ') break; // \u627e\u5230\u7b2c\u4e00\u4e2a\u975e\u7a7a\u683c\u5b57\u7b26\n        for(;i&gt;=0;i--){\n            if(s[i]==' '&amp;&amp;s[i+1]!=' '){ // \u627e\u5230\u4e00\u4e2a\u5355\u8bcd\u7684\u7ed3\u675f\u4f4d\u7f6e\n                for(int k=i+1;k&lt;s.size()&amp;&amp;s[k]!=' ';k++) ans+=s[k]; // \u53cd\u8f6c\u5355\u8bcd\n                ans+=' '; // \u5355\u8bcd\u4e4b\u95f4\u6dfb\u52a0\u7a7a\u683c\n            }\n        }\n        if(s[0]!=' ') // \u5904\u7406\u7b2c\u4e00\u4e2a\u5355\u8bcd\n            for(int k=0;k&lt;s.size()&amp;&amp;s[k]!=' ';k++) ans+=s[k];\n            else ans.erase(ans.size()-1); // \u7b2c\u4e00\u4e2a\u5355\u8bcd\u540e\u9762\u6ca1\u6709\u7a7a\u683c, \u6240\u4ee5\u9700\u8981\u5220\u9664\u6700\u540e\u4e00\u4e2a\u7a7a\u683c\n        return ans;\n    }\n};\n</code></pre> <ul> <li>\u8fd9\u662f\u521a\u5b66\u7684\u65f6\u5019\u5199\u7684\u4ee3\u7801, \u5b9e\u9645\u4e0a\u6709\\(O(1)\\)\u7a7a\u95f4\u7684\u89e3\u6cd5</li> </ul> <pre><code>class Solution {\npublic:\n    void reverse(string&amp; s, int start, int end){ //\u7ffb\u8f6c\uff0c\u533a\u95f4\u5199\u6cd5\uff1a\u5de6\u95ed\u53f3\u95ed []\n        for (int i = start, j = end; i &lt; j; i++, j--) {\n            swap(s[i], s[j]);\n        }\n    }\n\n    void removeExtraSpaces(string&amp; s) {//\u53bb\u9664\u6240\u6709\u7a7a\u683c\u5e76\u5728\u76f8\u90bb\u5355\u8bcd\u4e4b\u95f4\u6dfb\u52a0\u7a7a\u683c, \u5feb\u6162\u6307\u9488\u3002\n        int slow = 0;   //\u6574\u4f53\u601d\u60f3\u53c2\u8003https://programmercarl.com/0027.\u79fb\u9664\u5143\u7d20.html\n        for (int i = 0; i &lt; s.size(); ++i) { //\n            if (s[i] != ' ') { //\u9047\u5230\u975e\u7a7a\u683c\u5c31\u5904\u7406\uff0c\u5373\u5220\u9664\u6240\u6709\u7a7a\u683c\u3002\n                if (slow != 0) s[slow++] = ' '; //\u624b\u52a8\u63a7\u5236\u7a7a\u683c\uff0c\u7ed9\u5355\u8bcd\u4e4b\u95f4\u6dfb\u52a0\u7a7a\u683c\u3002slow != 0 \u8bf4\u660e\u4e0d\u662f\u7b2c\u4e00\u4e2a\u5355\u8bcd\uff0c\u9700\u8981\u5728\u5355\u8bcd\u524d\u6dfb\u52a0\u7a7a\u683c\u3002\n                while (i &lt; s.size() &amp;&amp; s[i] != ' ') { //\u8865\u4e0a\u8be5\u5355\u8bcd\uff0c\u9047\u5230\u7a7a\u683c\u8bf4\u660e\u5355\u8bcd\u7ed3\u675f\u3002\n                    s[slow++] = s[i++];\n                }\n            }\n        }\n        s.resize(slow); //slow\u7684\u5927\u5c0f\u5373\u4e3a\u53bb\u9664\u591a\u4f59\u7a7a\u683c\u540e\u7684\u5927\u5c0f\u3002\n    }\n\n    string reverseWords(string s) {\n        removeExtraSpaces(s); //\u53bb\u9664\u591a\u4f59\u7a7a\u683c\uff0c\u4fdd\u8bc1\u5355\u8bcd\u4e4b\u95f4\u4e4b\u53ea\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u4e14\u5b57\u7b26\u4e32\u9996\u5c3e\u6ca1\u7a7a\u683c\u3002\n        reverse(s, 0, s.size() - 1);\n        int start = 0; //removeExtraSpaces\u540e\u4fdd\u8bc1\u7b2c\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb\u4e0b\u6807\u4e00\u5b9a\u662f 0\u3002\n        for (int i = 0; i &lt;= s.size(); ++i) {\n            if (i == s.size() || s[i] == ' ') { //\u5230\u8fbe\u7a7a\u683c\u6216\u8005\u4e32\u5c3e\uff0c\u8bf4\u660e\u4e00\u4e2a\u5355\u8bcd\u7ed3\u675f\u3002\u8fdb\u884c\u7ffb\u8f6c\u3002\n                reverse(s, start, i - 1); //\u7ffb\u8f6c\uff0c\u6ce8\u610f\u662f\u5de6\u95ed\u53f3\u95ed []\u7684\u7ffb\u8f6c\u3002\n                start = i + 1; //\u66f4\u65b0\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u59cb\u4e0b\u6807start\n            }\n        }\n        return s;\n    }\n};\n</code></pre> <ul> <li>\u5148\u53cd\u8f6c\u6574\u4e2a\u5b57\u7b26\u4e32, \u7136\u540e\u518d\u53cd\u8f6c\u6bcf\u4e2a\u5355\u8bcd</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no55","title":"\u5361\u7801\u7f51 no.55","text":"<p>\u53f3\u65cb\u5b57\u7b26\u4e32</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main() {\n    int n;\n    string s;\n    cin &gt;&gt; n &gt;&gt; s;\n    reverse(s.begin(), s.begin() + s.size() - n);\n    reverse(s.begin() + s.size() - n, s.end());\n    reverse(s.begin(), s.end());\n    cout &lt;&lt; s &lt;&lt; endl;\n}\n</code></pre> <ul> <li>\u663e\u7136\u8ddf\u53f3\u65cb\u6570\u7ec4\u4e00\u6837</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no28","title":"\u529b\u6263 no.28","text":"<p>\u5b9e\u73b0 <code>strStr()</code></p> <pre><code>class Solution {\npublic:\n    int strStr(string haystack, string needle) {\n        int n = haystack.size(), m = needle.size();\n        if (m == 0) {\n            return 0;\n        }\n        vector&lt;int&gt; pi(m);\n        for (int i = 1, j = 0; i &lt; m; i++) {\n            while (j &gt; 0 &amp;&amp; needle[i] != needle[j]) {\n                j = pi[j - 1];\n            }\n            if (needle[i] == needle[j]) {\n                j++;\n            }\n            pi[i] = j;\n        }\n        for (int i = 0, j = 0; i &lt; n; i++) {\n            while (j &gt; 0 &amp;&amp; haystack[i] != needle[j]) {\n                j = pi[j - 1];\n            }\n            if (haystack[i] == needle[j]) {\n                j++;\n            }\n            if (j == m) {\n                return i - m + 1;\n            }\n        }\n        return -1;\n    }\n};\n\n- KMP \u677f\u5b50\n\n### \u529b\u6263 no.459\n\n\u91cd\u590d\u7684\u5b50\u5b57\u7b26\u4e32\n\n```C++\nclass Solution {\npublic:\n    bool repeatedSubstringPattern(string s) {\n        return (s + s).find(s, 1) != s.size();\n    }\n};\n</code></pre> <ul> <li>\u60f3\u6cd5\u6613\u4e8e\u7406\u89e3, \u8bc1\u660e\u56f0\u96be</li> <li>\u4f7f\u7528\u8bed\u8a00\u7684\u5b50\u4e32\u67e5\u627e\u51fd\u6570 (\u90e8\u5206\u662f BM \u7b97\u6cd5)</li> </ul> <pre><code>// \u6a21\u5f0f\u4e32\u81ea\u524d\u5411\u540e\u5339\u914d, \u5339\u914d\u65f6\u81ea\u540e\u5411\u524d, \u56e0\u6b64\u5339\u914d\u5931\u8d25\u65f6, \u4f1a\u540c\u65f6\u51fa\u73b0\u574f\u5b57\u7b26\u548c\u597d\u540e\u7f00\n\n// \u574f\u5b57\u7b26\u89c4\u5219\u7684\u5b9e\u73b0\n// \u7ef4\u62a4\u5b57\u7b26\u5230\u6a21\u5f0f\u4e32\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7684\u6620\u5c04\nint BadChar(int j, char temp, string str) {\n   int index = -1;\n   for (int i = j - 1; i &gt;= 0; --i) {\n       if (str[i] == temp) {\n           index = i;\n           break;\n       }\n   }\n   return j - index;\n}\n// \u597d\u540e\u7f00\u89c4\u5219\u7684\u5b9e\u73b0\n// \u7ef4\u62a4\u597d\u540e\u7f00\u5230\u6a21\u5f0f\u4e32\u4e2d\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u7684\u6620\u5c04, \u6709\u70b9\u50cf KMP \u7b97\u6cd5\u7684 next \u6570\u7ec4\nint GoodSuffix(int j, string&amp; pat) {\n   int terminal = pat.length() - 1;\n   int index = -1;\n   j--;\n   while (j &gt;= 0) {\n       if (pat[j] == pat[terminal]) {\n           index = j;\n           break;\n       } else j--;\n   }\n   return terminal - index;\n}\n// Boyer-Moore\u641c\u7d22\u7b97\u6cd5\u7684\u4e3b\u4f53\n// \u6bcf\u6b21\u5339\u914d\u5931\u8d25\u65f6, \u574f\u5b57\u7b26\u548c\u597d\u540e\u7f00\u7684\u79fb\u52a8\u8ddd\u79bb\u53d6\u8f83\u5927\u7684\u90a3\u4e2a\nint BM(string source, string target) {\n   int i = 0, j = 0, soulen = source.length(), tarlen = target.length();\n   int badvalue = 0, distance = 0;\n   if (soulen &lt; tarlen) {\n       printf(\"\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u5c0f\u4e8e\u641c\u7d22\u8bcd\u7684\u957f\u5ea6\\n\");\n       return -1;\n   }\n   i = tarlen - 1; j = tarlen - 1;\n   while (i &lt; soulen) {\n       if (source[i] == target[j]) {\n           if (j == 0) {\n               printf(\"\u5339\u914d\u6210\u529f\\n\");\n               return i;\n           }\n           i--; j--;\n       } else {\n           if (j == tarlen - 1) {\n               badvalue = BadChar(j, source[i], target);\n               cout &lt;&lt; \"\u574f\u5b57\u7b26\u79fb\u52a8\uff1a\" &lt;&lt; badvalue &lt;&lt; endl;\n               i = i + tarlen - 1 - j + badvalue;\n               j = tarlen - 1;\n           } else {\n               badvalue = BadChar(j, source[i], target);\n               if (badvalue == -1) badvalue = target.length();\n               distance = badvalue &gt; GoodSuffix(j, target) ? badvalue : GoodSuffix(j, target);\n               cout &lt;&lt; \"\u597d\u540e\u7f00\u4e3a\uff1a\" &lt;&lt; GoodSuffix(j, target) &lt;&lt; \" \u574f\u5b57\u7b26\u4e3a\uff1a\" &lt;&lt; badvalue &lt;&lt; \" \u6bd4\u8f83\u4e4b\u540e\u79fb\u52a8\" &lt;&lt; distance &lt;&lt; endl;\n               i = i + tarlen - 1 - j + distance;\n               j = tarlen - 1;\n           }\n       }\n   }\n   return -1;\n}\n</code></pre> <ul> <li>\u4f18\u5316\u7684 BM \u7b97\u6cd5\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u666e\u904d\u4f18\u4e8e KMP \u7b97\u6cd5</li> <li>\u8fd9\u9898\u53ef\u4ee5\u4f7f\u7528 KMP \u7b97\u6cd5, \u539f\u56e0\u662f <code>next[n-1] == n-1-i</code> \u4e0e\u9898\u76ee\u7b49\u6548, \u5373 next \u6307\u793a\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u7684\u56de\u9000\u957f\u5ea6\u4e3a i</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#_7","title":"\u6808\u4e0e\u961f\u5217","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no232","title":"\u529b\u6263 no.232","text":"<p>\u7528\u6808\u5b9e\u73b0\u961f\u5217</p> <pre><code>class MyQueue {\npublic:\n    stack&lt;int&gt; stIn;\n    stack&lt;int&gt; stOut;\n    /** Initialize your data structure here. */\n    MyQueue() {\n\n    }\n    /** Push element x to the back of queue. */\n    void push(int x) {\n        stIn.push(x);\n    }\n\n    /** Removes the element from in front of queue and returns that element. */\n    int pop() {\n        // \u53ea\u6709\u5f53stOut\u4e3a\u7a7a\u7684\u65f6\u5019\uff0c\u518d\u4ecestIn\u91cc\u5bfc\u5165\u6570\u636e\uff08\u5bfc\u5165stIn\u5168\u90e8\u6570\u636e\uff09\n        if (stOut.empty()) {\n            // \u4ecestIn\u5bfc\u5165\u6570\u636e\u76f4\u5230stIn\u4e3a\u7a7a\n            while(!stIn.empty()) {\n                stOut.push(stIn.top());\n                stIn.pop();\n            }\n        }\n        int result = stOut.top();\n        stOut.pop();\n        return result;\n    }\n\n    /** Get the front element. */\n    int peek() {\n        int res = this-&gt;pop(); // \u76f4\u63a5\u4f7f\u7528\u5df2\u6709\u7684pop\u51fd\u6570\n        stOut.push(res); // \u56e0\u4e3apop\u51fd\u6570\u5f39\u51fa\u4e86\u5143\u7d20res\uff0c\u6240\u4ee5\u518d\u6dfb\u52a0\u56de\u53bb\n        return res;\n    }\n\n    /** Returns whether the queue is empty. */\n    bool empty() {\n        return stIn.empty() &amp;&amp; stOut.empty();\n    }\n};\n</code></pre> <ul> <li>\u4e24\u4e2a\u6808\u6765\u56de\u5012\u6570\u636e</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no225","title":"\u529b\u6263no.225","text":"<p>\u7528\u961f\u5217\u5b9e\u73b0\u6808</p> <pre><code>class MyStack {\npublic:\n    queue&lt;int&gt; que;\n\n    MyStack() {\n\n    }\n\n    void push(int x) {\n        que.push(x);\n    }\n\n    int pop() {\n        int size = que.size();\n        size--;\n        while (size--) { // \u5c06\u961f\u5217\u5934\u90e8\u7684\u5143\u7d20\uff08\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5916\uff09 \u91cd\u65b0\u6dfb\u52a0\u5230\u961f\u5217\u5c3e\u90e8\n            que.push(que.front());\n            que.pop();\n        }\n        int result = que.front(); // \u6b64\u65f6\u5f39\u51fa\u7684\u5143\u7d20\u987a\u5e8f\u5c31\u662f\u6808\u7684\u987a\u5e8f\u4e86\n        que.pop();\n        return result;\n    }\n\n    int top(){\n        int size = que.size();\n        size--;\n        while (size--){\n            // \u5c06\u961f\u5217\u5934\u90e8\u7684\u5143\u7d20\uff08\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5916\uff09 \u91cd\u65b0\u6dfb\u52a0\u5230\u961f\u5217\u5c3e\u90e8\n            que.push(que.front());\n            que.pop();\n        }\n        int result = que.front(); // \u6b64\u65f6\u83b7\u5f97\u7684\u5143\u7d20\u5c31\u662f\u6808\u9876\u7684\u5143\u7d20\u4e86\n        que.push(que.front());    // \u5c06\u83b7\u53d6\u5b8c\u7684\u5143\u7d20\u4e5f\u91cd\u65b0\u6dfb\u52a0\u5230\u961f\u5217\u5c3e\u90e8\uff0c\u4fdd\u8bc1\u6570\u636e\u7ed3\u6784\u6ca1\u6709\u53d8\u5316\n        que.pop();\n        return result;\n    }\n\n    bool empty() {\n        return que.empty();\n    }\n};\n</code></pre> <ul> <li>\u6bcf\u6b21 pop \u64cd\u4f5c\u90fd\u9700\u8981\u5c06\u961f\u5217\u5934\u90e8\u7684\u5143\u7d20 (\u9664\u4e86\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5916) \u91cd\u65b0\u6dfb\u52a0\u5230\u961f\u5217\u5c3e\u90e8</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no20","title":"\u529b\u6263 no.20","text":"<p>\u6709\u6548\u7684\u62ec\u53f7</p> <pre><code>class Solution {\npublic:\n    bool isValid(string s) {\n        if (s.size() % 2 != 0) return false; // \u5982\u679cs\u7684\u957f\u5ea6\u4e3a\u5947\u6570\uff0c\u4e00\u5b9a\u4e0d\u7b26\u5408\u8981\u6c42\n        stack&lt;char&gt; st;\n        for (int i = 0; i &lt; s.size(); i++) {\n            if (s[i] == '(') st.push(')');\n            else if (s[i] == '{') st.push('}');\n            else if (s[i] == '[') st.push(']');\n            // \u7b2c\u4e09\u79cd\u60c5\u51b5\uff1a\u904d\u5386\u5b57\u7b26\u4e32\u5339\u914d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6808\u5df2\u7ecf\u4e3a\u7a7a\u4e86\uff0c\u6ca1\u6709\u5339\u914d\u7684\u5b57\u7b26\u4e86\uff0c\u8bf4\u660e\u53f3\u62ec\u53f7\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684\u5de6\u62ec\u53f7 return false\n            // \u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u904d\u5386\u5b57\u7b26\u4e32\u5339\u914d\u7684\u8fc7\u7a0b\u4e2d\uff0c\u53d1\u73b0\u6808\u91cc\u6ca1\u6709\u6211\u4eec\u8981\u5339\u914d\u7684\u5b57\u7b26\u3002\u6240\u4ee5return false\n            else if (st.empty() || st.top() != s[i]) return false;\n            else st.pop(); // st.top() \u4e0e s[i]\u76f8\u7b49\uff0c\u6808\u5f39\u51fa\u5143\u7d20\n        }\n        // \u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\u6b64\u65f6\u6211\u4eec\u5df2\u7ecf\u904d\u5386\u5b8c\u4e86\u5b57\u7b26\u4e32\uff0c\u4f46\u662f\u6808\u4e0d\u4e3a\u7a7a\uff0c\u8bf4\u660e\u6709\u76f8\u5e94\u7684\u5de6\u62ec\u53f7\u6ca1\u6709\u53f3\u62ec\u53f7\u6765\u5339\u914d\uff0c\u6240\u4ee5return false\uff0c\u5426\u5219\u5c31return true\n        return st.empty();\n    }\n};\n</code></pre> <ul> <li>easy</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no1047","title":"\u529b\u6263 no.1047","text":"<p>\u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u6240\u6709\u76f8\u90bb\u91cd\u590d\u9879</p> <pre><code>class Solution {\npublic:\n    string removeDuplicates(string S) {\n        string result;\n        for(char s : S) {\n            if(result.empty() || result.back() != s) {\n                result.push_back(s);\n            }\n            else {\n                result.pop_back();\n            }\n        }\n        return result;\n    }\n};\n</code></pre> <ul> <li>easy</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no150","title":"\u529b\u6263 no.150","text":"<p>\u9006\u6ce2\u5170\u8868\u8fbe\u5f0f\u6c42\u503c</p> <pre><code>class Solution {\npublic:\n    int evalRPN(vector&lt;string&gt;&amp; tokens) {\n        // \u529b\u6263\u4fee\u6539\u4e86\u540e\u53f0\u6d4b\u8bd5\u6570\u636e\uff0c\u9700\u8981\u7528longlong\n        stack&lt;long long&gt; st; \n        for (int i = 0; i &lt; tokens.size(); i++) {\n            if (tokens[i] == \"+\" || tokens[i] == \"-\" || tokens[i] == \"*\" || tokens[i] == \"/\") {\n                long long num1 = st.top();\n                st.pop();\n                long long num2 = st.top();\n                st.pop();\n                if (tokens[i] == \"+\") st.push(num2 + num1);\n                if (tokens[i] == \"-\") st.push(num2 - num1);\n                if (tokens[i] == \"*\") st.push(num2 * num1);\n                if (tokens[i] == \"/\") st.push(num2 / num1);\n            } else {\n                st.push(stoll(tokens[i]));\n            }\n        }\n\n        long long result = st.top();\n        st.pop(); // \u628a\u6808\u91cc\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5f39\u51fa\uff08\u5176\u5b9e\u4e0d\u5f39\u51fa\u4e5f\u6ca1\u4e8b\uff09\n        return result;\n    }\n};\n</code></pre> <ul> <li>easy</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no239","title":"\u529b\u6263 no.239","text":"<p>\u6ed1\u52a8\u7a97\u53e3\u6700\u5927\u503c</p> <pre><code>class Solution {\nprivate:\n    class MyQueue { //\u5355\u8c03\u961f\u5217\uff08\u4ece\u5927\u5230\u5c0f\uff09\n    public:\n        deque&lt;int&gt; que; // \u4f7f\u7528deque\u6765\u5b9e\u73b0\u5355\u8c03\u961f\u5217\n        // \u6bcf\u6b21\u5f39\u51fa\u7684\u65f6\u5019\uff0c\u6bd4\u8f83\u5f53\u524d\u8981\u5f39\u51fa\u7684\u6570\u503c\u662f\u5426\u7b49\u4e8e\u961f\u5217\u51fa\u53e3\u5143\u7d20\u7684\u6570\u503c\uff0c\u5982\u679c\u76f8\u7b49\u5219\u5f39\u51fa\u3002\n        // \u540c\u65f6pop\u4e4b\u524d\u5224\u65ad\u961f\u5217\u5f53\u524d\u662f\u5426\u4e3a\u7a7a\u3002\n        void pop(int value) {\n            if (!que.empty() &amp;&amp; value == que.front()) {\n                que.pop_front();\n            }\n        }\n        // \u5982\u679cpush\u7684\u6570\u503c\u5927\u4e8e\u5165\u53e3\u5143\u7d20\u7684\u6570\u503c\uff0c\u90a3\u4e48\u5c31\u5c06\u961f\u5217\u540e\u7aef\u7684\u6570\u503c\u5f39\u51fa\uff0c\u76f4\u5230push\u7684\u6570\u503c\u5c0f\u4e8e\u7b49\u4e8e\u961f\u5217\u5165\u53e3\u5143\u7d20\u7684\u6570\u503c\u4e3a\u6b62\u3002\n        // \u8fd9\u6837\u5c31\u4fdd\u6301\u4e86\u961f\u5217\u91cc\u7684\u6570\u503c\u662f\u5355\u8c03\u4ece\u5927\u5230\u5c0f\u7684\u4e86\u3002\n        void push(int value) {\n            while (!que.empty() &amp;&amp; value &gt; que.back()) {\n                que.pop_back();\n            }\n            que.push_back(value);\n\n        }\n        // \u67e5\u8be2\u5f53\u524d\u961f\u5217\u91cc\u7684\u6700\u5927\u503c \u76f4\u63a5\u8fd4\u56de\u961f\u5217\u524d\u7aef\u4e5f\u5c31\u662ffront\u5c31\u53ef\u4ee5\u4e86\u3002\n        int front() {\n            return que.front();\n        }\n    };\npublic:\n    vector&lt;int&gt; maxSlidingWindow(vector&lt;int&gt;&amp; nums, int k) {\n        MyQueue que;\n        vector&lt;int&gt; result;\n        for (int i = 0; i &lt; k; i++) { // \u5148\u5c06\u524dk\u7684\u5143\u7d20\u653e\u8fdb\u961f\u5217\n            que.push(nums[i]);\n        }\n        result.push_back(que.front()); // result \u8bb0\u5f55\u524dk\u7684\u5143\u7d20\u7684\u6700\u5927\u503c\n        for (int i = k; i &lt; nums.size(); i++) {\n            que.pop(nums[i - k]); // \u6ed1\u52a8\u7a97\u53e3\u79fb\u9664\u6700\u524d\u9762\u5143\u7d20\n            que.push(nums[i]); // \u6ed1\u52a8\u7a97\u53e3\u524d\u52a0\u5165\u6700\u540e\u9762\u7684\u5143\u7d20\n            result.push_back(que.front()); // \u8bb0\u5f55\u5bf9\u5e94\u7684\u6700\u5927\u503c\n        }\n        return result;\n    }\n};\n</code></pre> <ul> <li>\u5355\u8c03\u961f\u5217\u677f\u5b50</li> <li>\u5f88\u5bb9\u6613\u60f3\u5230\u65b0\u503c\u8fdb\u5165\u7684\u903b\u8f91, \u5bf9\u4e8e\u5f53\u524d\u6700\u5927\u503c\u51fa\u961f\u5217\u53ea\u9700\u8981\u77e5\u9053\u961f\u5217\u6b64\u65f6\u63a5\u4e0b\u6765\u7684\u6700\u5927\u503c, \u56e0\u6b64\u53ea\u4fdd\u7559\u5355\u8c03\u9012\u51cf\u7684\u5143\u7d20\u5373\u53ef</li> <li>\u4e0d\u9700\u8981\u8003\u8651\u5143\u7d20\u7684\u4f4d\u6b21\u53ea\u9700\u8981\u7ef4\u62a4\u961f\u5217\u7684\u6700\u5927\u5927\u5c0f\u5373\u53ef</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no347","title":"\u529b\u6263 no.347","text":"<p>\u524d K \u4e2a\u9ad8\u9891\u5143\u7d20</p> <pre><code>class Solution {\npublic:\n    // \u5c0f\u9876\u5806\n    class mycomparison {\n    public:\n        bool operator()(const pair&lt;int, int&gt;&amp; lhs, const pair&lt;int, int&gt;&amp; rhs) {\n            return lhs.second &gt; rhs.second;\n        }\n    };\n    vector&lt;int&gt; topKFrequent(vector&lt;int&gt;&amp; nums, int k) {\n        // \u8981\u7edf\u8ba1\u5143\u7d20\u51fa\u73b0\u9891\u7387\n        unordered_map&lt;int, int&gt; map; // map&lt;nums[i],\u5bf9\u5e94\u51fa\u73b0\u7684\u6b21\u6570&gt;\n        for (int i = 0; i &lt; nums.size(); i++) {\n            map[nums[i]]++;\n        }\n\n        // \u5bf9\u9891\u7387\u6392\u5e8f\n        // \u5b9a\u4e49\u4e00\u4e2a\u5c0f\u9876\u5806\uff0c\u5927\u5c0f\u4e3ak\n        priority_queue&lt;pair&lt;int, int&gt;, vector&lt;pair&lt;int, int&gt;&gt;, mycomparison&gt; pri_que;\n\n        // \u7528\u56fa\u5b9a\u5927\u5c0f\u4e3ak\u7684\u5c0f\u9876\u5806\uff0c\u626b\u9762\u6240\u6709\u9891\u7387\u7684\u6570\u503c\n        for (unordered_map&lt;int, int&gt;::iterator it = map.begin(); it != map.end(); it++) {\n            pri_que.push(*it);\n            if (pri_que.size() &gt; k) { // \u5982\u679c\u5806\u7684\u5927\u5c0f\u5927\u4e8e\u4e86K\uff0c\u5219\u961f\u5217\u5f39\u51fa\uff0c\u4fdd\u8bc1\u5806\u7684\u5927\u5c0f\u4e00\u76f4\u4e3ak\n                pri_que.pop();\n            }\n        }\n\n        // \u627e\u51fa\u524dK\u4e2a\u9ad8\u9891\u5143\u7d20\uff0c\u56e0\u4e3a\u5c0f\u9876\u5806\u5148\u5f39\u51fa\u7684\u662f\u6700\u5c0f\u7684\uff0c\u6240\u4ee5\u5012\u5e8f\u6765\u8f93\u51fa\u5230\u6570\u7ec4\n        vector&lt;int&gt; result(k);\n        for (int i = k - 1; i &gt;= 0; i--) {\n            result[i] = pri_que.top().first;\n            pri_que.pop();\n        }\n        return result;\n\n    }\n};\n</code></pre> <ul> <li>\u5806\u677f\u5b50</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#_8","title":"\u4e8c\u53c9\u6811","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#_9","title":"\u4e8c\u53c9\u6811\u904d\u5386","text":"<ul> <li>\u524d\u5e8f\u904d\u5386, \u4e2d\u5e8f\u904d\u5386, \u540e\u5e8f\u904d\u5386, \u5c42\u5e8f\u904d\u5386</li> <li>\u9012\u5f52\u904d\u5386, \u8fed\u4ee3\u904d\u5386</li> <li>\u7565</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no226","title":"\u529b\u6263 no.226","text":"<p>\u7ffb\u8f6c\u4e8c\u53c9\u6811</p> <pre><code>class Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        if (root == NULL) return root;\n        stack&lt;TreeNode*&gt; st;\n        st.push(root);\n        while(!st.empty()) {\n            TreeNode* node = st.top();              // \u4e2d\n            st.pop();\n            swap(node-&gt;left, node-&gt;right);\n            if(node-&gt;right) st.push(node-&gt;right);   // \u53f3\n            if(node-&gt;left) st.push(node-&gt;left);     // \u5de6\n        }\n        return root;\n    }\n};\n</code></pre> <ul> <li>\u904d\u5386\u65f6\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\u5373\u53ef</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no101","title":"\u529b\u6263 no.101","text":"<p>\u5bf9\u79f0\u4e8c\u53c9\u6811</p> <pre><code>class Solution {\npublic:\n    bool compare(TreeNode* left, TreeNode* right) {\n        if (left == NULL &amp;&amp; right != NULL) return false;\n        else if (left != NULL &amp;&amp; right == NULL) return false;\n        else if (left == NULL &amp;&amp; right == NULL) return true;\n        else if (left-&gt;val != right-&gt;val) return false;\n        else return compare(left-&gt;left, right-&gt;right) &amp;&amp; compare(left-&gt;right, right-&gt;left);\n\n    }\n    bool isSymmetric(TreeNode* root) {\n        if (root == NULL) return true;\n        return compare(root-&gt;left, root-&gt;right);\n    }\n};\n</code></pre> <ul> <li>\u53ef\u4ee5\u8fed\u4ee3</li> <li>\u672c\u8d28\u5c31\u662f\u901a\u8fc7\u76f8\u53cd\u7684\u904d\u5386\u987a\u5e8f, \u6765 \"\u7ffb\u8f6c\" \u5de6\u5b50\u6811\u4e0e\u53f3\u5b50\u6811, \u7136\u540e\u6bd4\u8f83\u662f\u5426\u76f8\u7b49</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no104","title":"\u529b\u6263 no.104","text":"<p>\u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6</p> <pre><code>class Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        if (root == NULL) return 0;\n        int leftDepth = maxDepth(root-&gt;left);\n        int rightDepth = maxDepth(root-&gt;right);\n        return 1 + max(leftDepth, rightDepth);\n    }\n};\n</code></pre> <ul> <li>\u9012\u5f52\u904d\u5386, \u53d6\u5de6\u53f3\u5b50\u6811\u7684\u6700\u5927\u6df1\u5ea6 + 1 \u5373\u53ef</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no111","title":"\u529b\u6263 no.111","text":"<p>\u4e8c\u53c9\u6811\u7684\u6700\u5c0f\u6df1\u5ea6</p> <pre><code>class Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if (root == NULL) return 0;\n        int leftDepth = minDepth(root-&gt;left);\n        int rightDepth = minDepth(root-&gt;right);\n        if (root-&gt;left == NULL &amp;&amp; root-&gt;right != NULL) return 1 + rightDepth;\n        else if (root-&gt;left != NULL &amp;&amp; root-&gt;right == NULL) return 1 + leftDepth;\n        else return 1 + min(leftDepth, rightDepth);\n    }\n};\n</code></pre> <ul> <li>\u9012\u5f52\u904d\u5386, \u53d6\u5de6\u53f3\u5b50\u6811\u7684\u6700\u5c0f\u6df1\u5ea6 + 1 \u5373\u53ef</li> <li>\u6ce8\u610f, \u5f53\u5de6\u5b50\u6811\u6216\u53f3\u5b50\u6811\u4e3a\u7a7a\u65f6, \u6700\u5c0f\u6df1\u5ea6\u4e3a\u53f3\u5b50\u6811\u6216\u5de6\u5b50\u6811\u7684\u6df1\u5ea6 + 1</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no222","title":"\u529b\u6263 no.222","text":"<p>\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570</p> <pre><code>class Solution {\npublic:\n    int countNodes(TreeNode* root) {\n        if (root == nullptr) return 0;\n        TreeNode* left = root-&gt;left;\n        TreeNode* right = root-&gt;right;\n        int leftDepth = 0, rightDepth = 0; // \u8fd9\u91cc\u521d\u59cb\u4e3a0\u662f\u6709\u76ee\u7684\u7684\uff0c\u4e3a\u4e86\u4e0b\u9762\u6c42\u6307\u6570\u65b9\u4fbf\n        while (left) {  // \u6c42\u5de6\u5b50\u6811\u6df1\u5ea6\n            left = left-&gt;left;\n            leftDepth++;\n        }\n        while (right) { // \u6c42\u53f3\u5b50\u6811\u6df1\u5ea6\n            right = right-&gt;right;\n            rightDepth++;\n        }\n        if (leftDepth == rightDepth) {\n            return (2 &lt;&lt; leftDepth) - 1; // \u6ce8\u610f(2&lt;&lt;1) \u76f8\u5f53\u4e8e2^2\uff0c\u6240\u4ee5leftDepth\u521d\u59cb\u4e3a0\n        }\n        return countNodes(root-&gt;left) + countNodes(root-&gt;right) + 1;\n    }\n};\n</code></pre> <ul> <li>\u5229\u7528\u5b8c\u5168\u4e8c\u53c9\u6811\u7279\u6027, \u5c06\u6811\u5206\u4e3a\u82e5\u5e72\u6ee1\u4e8c\u53c9\u6811\u4e0e\u5176\u4ed6\u8282\u70b9</li> <li>\u529b\u6263\u5b98\u65b9\u9898\u89e3\u4e3a\u4e8c\u5206</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no110","title":"\u529b\u6263 no.110","text":"<p>\u5e73\u8861\u4e8c\u53c9\u6811</p> <pre><code>class Solution {\npublic:\n    // \u8fd4\u56de\u4ee5\u8be5\u8282\u70b9\u4e3a\u6839\u8282\u70b9\u7684\u4e8c\u53c9\u6811\u7684\u9ad8\u5ea6\uff0c\u5982\u679c\u4e0d\u662f\u5e73\u8861\u4e8c\u53c9\u6811\u4e86\u5219\u8fd4\u56de-1\n    int getHeight(TreeNode* node) {\n        if (node == NULL) {\n            return 0;\n        }\n        int leftHeight = getHeight(node-&gt;left);\n        if (leftHeight == -1) return -1;\n        int rightHeight = getHeight(node-&gt;right);\n        if (rightHeight == -1) return -1;\n        return abs(leftHeight - rightHeight) &gt; 1 ? -1 : 1 + max(leftHeight, rightHeight);\n    }\n    bool isBalanced(TreeNode* root) {\n        return getHeight(root) == -1 ? false : true;\n    }\n};\n</code></pre> <ul> <li>\u7528 <code>-1</code> \u8868\u793a\u5df2\u7ecf\u4e0d\u662f\u5e73\u8861\u4e8c\u53c9\u6811</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no257","title":"\u529b\u6263 no.257","text":"<p>\u4e8c\u53c9\u6811\u7684\u6240\u6709\u8def\u5f84</p> <pre><code>class Solution {\nprivate:\n\n    void traversal(TreeNode* cur, string path, vector&lt;string&gt;&amp; result) {\n        path += to_string(cur-&gt;val); // \u4e2d\n        if (cur-&gt;left == NULL &amp;&amp; cur-&gt;right == NULL) {\n            result.push_back(path);\n            return;\n        }\n        if (cur-&gt;left) traversal(cur-&gt;left, path + \"-&gt;\", result); // \u5de6\n        if (cur-&gt;right) traversal(cur-&gt;right, path + \"-&gt;\", result); // \u53f3\n    }\n\npublic:\n    vector&lt;string&gt; binaryTreePaths(TreeNode* root) {\n        vector&lt;string&gt; result;\n        string path;\n        if (root == NULL) return result;\n        traversal(root, path, result);\n        return result;\n\n    }\n};\n</code></pre> <ul> <li>easy</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no404","title":"\u529b\u6263 no.404","text":"<p>\u5de6\u53f6\u5b50\u4e4b\u548c</p> <pre><code>class Solution {\npublic:\n    int sumOfLeftLeaves(TreeNode* root) {\n        if (root == NULL) return 0;\n        int leftValue = sumOfLeftLeaves(root-&gt;left);    // \u5de6\n        int rightValue = sumOfLeftLeaves(root-&gt;right);  // \u53f3\n        int midValue = 0;\n        if (root-&gt;left &amp;&amp; !root-&gt;left-&gt;left &amp;&amp; !root-&gt;left-&gt;right) {\n            midValue = root-&gt;left-&gt;val;\n        }\n        int sum = midValue + leftValue + rightValue;\n        return sum;\n    }\n};\n</code></pre> <ul> <li>easy</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no513","title":"\u529b\u6263 no.513","text":"<p>\u627e\u6811\u5de6\u4e0b\u89d2\u7684\u503c</p> <pre><code>class Solution {\npublic:\n    int findBottomLeftValue(TreeNode* root) {\n        int result = 0;\n        if (root == NULL) return result;\n        queue&lt;TreeNode*&gt; que;\n        que.push(root);\n        while (!que.empty()) {\n            int size = que.size();\n            for (int i = 0; i &lt; size; i++) {\n                TreeNode* node = que.front();\n                que.pop();\n                if (i == 0) result = node-&gt;val; // \u8bb0\u5f55\u6700\u540e\u4e00\u884c\u7b2c\u4e00\u4e2a\u5143\u7d20\n                if (node-&gt;left) que.push(node-&gt;left);\n                if (node-&gt;right) que.push(node-&gt;right);\n            }\n        }\n        return result;\n    }\n};\n</code></pre> <ul> <li>\u5c42\u5e8f\u904d\u5386\u79d2\u6740</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no112","title":"\u529b\u6263 no.112","text":"<p>\u8def\u5f84\u603b\u548c</p> <pre><code>class Solution {\npublic:\n    bool hasPathSum(TreeNode* root, int targetSum) {\n        if (root == NULL) return false;\n        if (root-&gt;left == NULL &amp;&amp; root-&gt;right == NULL) return targetSum == root-&gt;val;\n        return hasPathSum(root-&gt;left, targetSum - root-&gt;val) || hasPathSum(root-&gt;right, targetSum - root-&gt;val);\n    }\n};\n</code></pre> <ul> <li>easy</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no113","title":"\u529b\u6263 no.113","text":"<p>\u8def\u5f84\u603b\u548c II</p> <pre><code>class solution {\nprivate:\n    vector&lt;vector&lt;int&gt;&gt; result;\n    vector&lt;int&gt; path;\n    // \u9012\u5f52\u51fd\u6570\u4e0d\u9700\u8981\u8fd4\u56de\u503c\uff0c\u56e0\u4e3a\u6211\u4eec\u8981\u904d\u5386\u6574\u4e2a\u6811\n    void traversal(TreeNode* cur, int count) {\n        if (!cur-&gt;left &amp;&amp; !cur-&gt;right &amp;&amp; count == 0) { // \u9047\u5230\u4e86\u53f6\u5b50\u8282\u70b9\u4e14\u627e\u5230\u4e86\u548c\u4e3asum\u7684\u8def\u5f84\n            result.push_back(path);\n            return;\n        }\n\n        if (!cur-&gt;left &amp;&amp; !cur-&gt;right) return ; // \u9047\u5230\u53f6\u5b50\u8282\u70b9\u800c\u6ca1\u6709\u627e\u5230\u5408\u9002\u7684\u8fb9\uff0c\u76f4\u63a5\u8fd4\u56de\n\n        if (cur-&gt;left) { // \u5de6 \uff08\u7a7a\u8282\u70b9\u4e0d\u904d\u5386\uff09\n            path.push_back(cur-&gt;left-&gt;val);\n            count -= cur-&gt;left-&gt;val;\n            traversal(cur-&gt;left, count);    // \u9012\u5f52\n            count += cur-&gt;left-&gt;val;        // \u56de\u6eaf\n            path.pop_back();                // \u56de\u6eaf\n        }\n        if (cur-&gt;right) { // \u53f3 \uff08\u7a7a\u8282\u70b9\u4e0d\u904d\u5386\uff09\n            path.push_back(cur-&gt;right-&gt;val);\n            count -= cur-&gt;right-&gt;val;\n            traversal(cur-&gt;right, count);   // \u9012\u5f52\n            count += cur-&gt;right-&gt;val;       // \u56de\u6eaf\n            path.pop_back();                // \u56de\u6eaf\n        }\n        return ;\n    }\n\npublic:\n    vector&lt;vector&lt;int&gt;&gt; pathSum(TreeNode* root, int sum) {\n        result.clear();\n        path.clear();\n        if (root == NULL) return result;\n        path.push_back(root-&gt;val); // \u628a\u6839\u8282\u70b9\u653e\u8fdb\u8def\u5f84\n        traversal(root, sum - root-&gt;val);\n        return result;\n    }\n};\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no106","title":"\u529b\u6263 no.106","text":"<p>\u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811</p> <pre><code>class Solution {\nprivate:\n    TreeNode* traversal (vector&lt;int&gt;&amp; inorder, vector&lt;int&gt;&amp; postorder) {\n        if (postorder.size() == 0) return NULL;\n\n        // \u540e\u5e8f\u904d\u5386\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5c31\u662f\u5f53\u524d\u7684\u4e2d\u95f4\u8282\u70b9\n        int rootValue = postorder[postorder.size() - 1];\n        TreeNode* root = new TreeNode(rootValue);\n\n        // \u53f6\u5b50\u8282\u70b9\n        if (postorder.size() == 1) return root;\n\n        // \u627e\u5230\u4e2d\u5e8f\u904d\u5386\u7684\u5207\u5272\u70b9\n        int delimiterIndex;\n        for (delimiterIndex = 0; delimiterIndex &lt; inorder.size(); delimiterIndex++) {\n            if (inorder[delimiterIndex] == rootValue) break;\n        }\n\n        // \u5207\u5272\u4e2d\u5e8f\u6570\u7ec4\n        // \u5de6\u95ed\u53f3\u5f00\u533a\u95f4\uff1a[0, delimiterIndex)\n        vector&lt;int&gt; leftInorder(inorder.begin(), inorder.begin() + delimiterIndex);\n        // [delimiterIndex + 1, end)\n        vector&lt;int&gt; rightInorder(inorder.begin() + delimiterIndex + 1, inorder.end() );\n\n        // postorder \u820d\u5f03\u672b\u5c3e\u5143\u7d20\n        postorder.resize(postorder.size() - 1);\n\n        // \u5207\u5272\u540e\u5e8f\u6570\u7ec4\n        // \u4f9d\u7136\u5de6\u95ed\u53f3\u5f00\uff0c\u6ce8\u610f\u8fd9\u91cc\u4f7f\u7528\u4e86\u5de6\u4e2d\u5e8f\u6570\u7ec4\u5927\u5c0f\u4f5c\u4e3a\u5207\u5272\u70b9\n        // [0, leftInorder.size)\n        vector&lt;int&gt; leftPostorder(postorder.begin(), postorder.begin() + leftInorder.size());\n        // [leftInorder.size(), end)\n        vector&lt;int&gt; rightPostorder(postorder.begin() + leftInorder.size(), postorder.end());\n\n        root-&gt;left = traversal(leftInorder, leftPostorder);\n        root-&gt;right = traversal(rightInorder, rightPostorder);\n\n        return root;\n    }\npublic:\n    TreeNode* buildTree(vector&lt;int&gt;&amp; inorder, vector&lt;int&gt;&amp; postorder) {\n        if (inorder.size() == 0 || postorder.size() == 0) return NULL;\n        return traversal(inorder, postorder);\n    }\n};\n</code></pre> <ul> <li>\u4ee5\u540e\u5e8f\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e3a\u5207\u5272\u70b9, \u5148\u5207\u4e2d\u5e8f\u6570\u7ec4, \u6839\u636e\u4e2d\u5e8f\u6570\u7ec4, \u53cd\u8fc7\u6765\u518d\u5207\u540e\u5e8f\u6570\u7ec4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no105","title":"\u529b\u6263 no.105","text":"<p>\u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811</p> <pre><code>class Solution {\nprivate:\n        TreeNode* traversal (vector&lt;int&gt;&amp; inorder, int inorderBegin, int inorderEnd, vector&lt;int&gt;&amp; preorder, int preorderBegin, int preorderEnd) {\n        if (preorderBegin == preorderEnd) return NULL;\n\n        int rootValue = preorder[preorderBegin]; // \u6ce8\u610f\u7528preorderBegin \u4e0d\u8981\u75280\n        TreeNode* root = new TreeNode(rootValue);\n\n        if (preorderEnd - preorderBegin == 1) return root;\n\n        int delimiterIndex;\n        for (delimiterIndex = inorderBegin; delimiterIndex &lt; inorderEnd; delimiterIndex++) {\n            if (inorder[delimiterIndex] == rootValue) break;\n        }\n        // \u5207\u5272\u4e2d\u5e8f\u6570\u7ec4\n        // \u4e2d\u5e8f\u5de6\u533a\u95f4\uff0c\u5de6\u95ed\u53f3\u5f00[leftInorderBegin, leftInorderEnd)\n        int leftInorderBegin = inorderBegin;\n        int leftInorderEnd = delimiterIndex;\n        // \u4e2d\u5e8f\u53f3\u533a\u95f4\uff0c\u5de6\u95ed\u53f3\u5f00[rightInorderBegin, rightInorderEnd)\n        int rightInorderBegin = delimiterIndex + 1;\n        int rightInorderEnd = inorderEnd;\n\n        // \u5207\u5272\u524d\u5e8f\u6570\u7ec4\n        // \u524d\u5e8f\u5de6\u533a\u95f4\uff0c\u5de6\u95ed\u53f3\u5f00[leftPreorderBegin, leftPreorderEnd)\n        int leftPreorderBegin =  preorderBegin + 1;\n        int leftPreorderEnd = preorderBegin + 1 + delimiterIndex - inorderBegin; // \u7ec8\u6b62\u4f4d\u7f6e\u662f\u8d77\u59cb\u4f4d\u7f6e\u52a0\u4e0a\u4e2d\u5e8f\u5de6\u533a\u95f4\u7684\u5927\u5c0fsize\n        // \u524d\u5e8f\u53f3\u533a\u95f4, \u5de6\u95ed\u53f3\u5f00[rightPreorderBegin, rightPreorderEnd)\n        int rightPreorderBegin = preorderBegin + 1 + (delimiterIndex - inorderBegin);\n        int rightPreorderEnd = preorderEnd;\n\n        root-&gt;left = traversal(inorder, leftInorderBegin, leftInorderEnd,  preorder, leftPreorderBegin, leftPreorderEnd);\n        root-&gt;right = traversal(inorder, rightInorderBegin, rightInorderEnd, preorder, rightPreorderBegin, rightPreorderEnd);\n\n        return root;\n    }\n\npublic:\n    TreeNode* buildTree(vector&lt;int&gt;&amp; preorder, vector&lt;int&gt;&amp; inorder) {\n        if (inorder.size() == 0 || preorder.size() == 0) return NULL;\n\n        // \u53c2\u6570\u575a\u6301\u5de6\u95ed\u53f3\u5f00\u7684\u539f\u5219\n        return traversal(inorder, 0, inorder.size(), preorder, 0, preorder.size());\n    }\n};\n</code></pre> <ul> <li>\u4ee5\u524d\u5e8f\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\u5207\u5272\u70b9, \u5148\u5207\u4e2d\u5e8f\u6570\u7ec4, \u6839\u636e\u4e2d\u5e8f\u6570\u7ec4, \u53cd\u8fc7\u6765\u518d\u5207\u524d\u5e8f\u6570\u7ec4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no654","title":"\u529b\u6263 no.654","text":"<p>\u6700\u5927\u4e8c\u53c9\u6811</p> <pre><code>class Solution {\nprivate:\n    // \u5728\u5de6\u95ed\u53f3\u5f00\u533a\u95f4[left, right)\uff0c\u6784\u9020\u4e8c\u53c9\u6811\n    TreeNode* traversal(vector&lt;int&gt;&amp; nums, int left, int right) {\n        if (left &gt;= right) return nullptr;\n\n        // \u5206\u5272\u70b9\u4e0b\u6807\uff1amaxValueIndex\n        int maxValueIndex = left;\n        for (int i = left + 1; i &lt; right; ++i) {\n            if (nums[i] &gt; nums[maxValueIndex]) maxValueIndex = i;\n        }\n\n        TreeNode* root = new TreeNode(nums[maxValueIndex]);\n\n        // \u5de6\u95ed\u53f3\u5f00\uff1a[left, maxValueIndex)\n        root-&gt;left = traversal(nums, left, maxValueIndex);\n\n        // \u5de6\u95ed\u53f3\u5f00\uff1a[maxValueIndex + 1, right)\n        root-&gt;right = traversal(nums, maxValueIndex + 1, right);\n\n        return root;\n    }\npublic:\n    TreeNode* constructMaximumBinaryTree(vector&lt;int&gt;&amp; nums) {\n        return traversal(nums, 0, nums.size());\n    }\n};\n</code></pre> <ul> <li>easy</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no617","title":"\u529b\u6263 no.617","text":"<p>\u5408\u5e76\u4e8c\u53c9\u6811</p> <pre><code>class Solution {\npublic:\n    TreeNode* mergeTrees(TreeNode* t1, TreeNode* t2) {\n        if (t1 == NULL) return t2;\n        if (t2 == NULL) return t1;\n        queue&lt;TreeNode*&gt; que;\n        que.push(t1);\n        que.push(t2);\n        while(!que.empty()) {\n            TreeNode* node1 = que.front(); que.pop();\n            TreeNode* node2 = que.front(); que.pop();\n            // \u6b64\u65f6\u4e24\u4e2a\u8282\u70b9\u4e00\u5b9a\u4e0d\u4e3a\u7a7a\uff0cval\u76f8\u52a0\n            node1-&gt;val += node2-&gt;val;\n\n            // \u5982\u679c\u4e24\u68f5\u6811\u5de6\u8282\u70b9\u90fd\u4e0d\u4e3a\u7a7a\uff0c\u52a0\u5165\u961f\u5217\n            if (node1-&gt;left != NULL &amp;&amp; node2-&gt;left != NULL) {\n                que.push(node1-&gt;left);\n                que.push(node2-&gt;left);\n            }\n            // \u5982\u679c\u4e24\u68f5\u6811\u53f3\u8282\u70b9\u90fd\u4e0d\u4e3a\u7a7a\uff0c\u52a0\u5165\u961f\u5217\n            if (node1-&gt;right != NULL &amp;&amp; node2-&gt;right != NULL) {\n                que.push(node1-&gt;right);\n                que.push(node2-&gt;right);\n            }\n\n            // \u5f53t1\u7684\u5de6\u8282\u70b9 \u4e3a\u7a7a t2\u5de6\u8282\u70b9\u4e0d\u4e3a\u7a7a\uff0c\u5c31\u8d4b\u503c\u8fc7\u53bb\n            if (node1-&gt;left == NULL &amp;&amp; node2-&gt;left != NULL) {\n                node1-&gt;left = node2-&gt;left;\n            }\n            // \u5f53t1\u7684\u53f3\u8282\u70b9 \u4e3a\u7a7a t2\u53f3\u8282\u70b9\u4e0d\u4e3a\u7a7a\uff0c\u5c31\u8d4b\u503c\u8fc7\u53bb\n            if (node1-&gt;right == NULL &amp;&amp; node2-&gt;right != NULL) {\n                node1-&gt;right = node2-&gt;right;\n            }\n        }\n        return t1;\n    }\n};\n</code></pre> <ul> <li>\u5176\u5b9e\u7528\u6307\u9488\u8fed\u4ee3\u904d\u5386\u5c31\u884c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no700","title":"\u529b\u6263 no.700","text":"<p>\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u641c\u7d22</p> <pre><code>class Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        if (root == NULL || root-&gt;val == val) return root;\n        TreeNode* result = NULL;\n        if (root-&gt;val &gt; val) result = searchBST(root-&gt;left, val);\n        if (root-&gt;val &lt; val) result = searchBST(root-&gt;right, val);\n        return result;\n    }\n};\n</code></pre> <ul> <li>easy</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no98","title":"\u529b\u6263 no.98","text":"<p>\u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811</p> <pre><code>class Solution {\npublic:\n    TreeNode* pre = NULL; // \u7528\u6765\u8bb0\u5f55\u524d\u4e00\u4e2a\u8282\u70b9\n    bool isValidBST(TreeNode* root) {\n        if (root == NULL) return true;\n        bool left = isValidBST(root-&gt;left);\n\n        if (pre != NULL &amp;&amp; pre-&gt;val &gt;= root-&gt;val) return false;\n        pre = root; // \u8bb0\u5f55\u524d\u4e00\u4e2a\u8282\u70b9\n\n        bool right = isValidBST(root-&gt;right);\n        return left &amp;&amp; right;\n    }\n};\n</code></pre> <ul> <li>\u5c31\u662f\u4e2d\u5e8f\u904d\u5386\u6709\u5e8f\u6027</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no530","title":"\u529b\u6263 no.530","text":"<p>\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u5c0f\u7edd\u5bf9\u5dee</p> <pre><code>class Solution {\npublic:\n    int getMinimumDifference(TreeNode* root) {\n        stack&lt;TreeNode*&gt; st;\n        TreeNode* cur = root;\n        TreeNode* pre = NULL;\n        int result = INT_MAX;\n        while (cur != NULL || !st.empty()) {\n            if (cur != NULL) { // \u6307\u9488\u6765\u8bbf\u95ee\u8282\u70b9\uff0c\u8bbf\u95ee\u5230\u6700\u5e95\u5c42\n                st.push(cur); // \u5c06\u8bbf\u95ee\u7684\u8282\u70b9\u653e\u8fdb\u6808\n                cur = cur-&gt;left;                // \u5de6\n            } else {\n                cur = st.top();\n                st.pop();\n                if (pre != NULL) {              // \u4e2d\n                    result = min(result, cur-&gt;val - pre-&gt;val);\n                }\n                pre = cur;\n                cur = cur-&gt;right;               // \u53f3\n            }\n        }\n        return result;\n    }\n};\n</code></pre> <ul> <li>\u540c\u4e0a</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no501","title":"\u529b\u6263 no.501","text":"<p>\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u4f17\u6570</p> <pre><code>//\u7565\n</code></pre> <ul> <li>\u540c\u4e0a</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E4%BB%A3%E7%A0%81%E9%9A%8F%E6%83%B3%E5%BD%95/#no236","title":"\u529b\u6263 no.236","text":"<p>\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148</p> <pre><code>class Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if (root == q || root == p || root == NULL) return root; // \u9047\u5230\u7a7a\u8fd4\u56de\n        TreeNode* left = lowestCommonAncestor(root-&gt;left, p, q);\n        TreeNode* right = lowestCommonAncestor(root-&gt;right, p, q);\n        if (left != NULL &amp;&amp; right != NULL) return root; // \u5de6\u53f3\u90fd\u4e0d\u4e3a\u7a7a\uff0c\u8bf4\u660e\u6839\u8282\u70b9\u5c31\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148\n        else if (left == NULL &amp;&amp; right != NULL) return right; // \u5de6\u7a7a\u53f3\u6709\uff0c\u8fd4\u56de\u53f3\n        else if (left != NULL &amp;&amp; right == NULL) return left; // \u5de6\u6709\u53f3\u7a7a\uff0c\u8fd4\u56de\u5de6\n        else  { // (left == NULL &amp;&amp; right == NULL)\n            return NULL;\n        }\n    }\n};\n</code></pre> <ul> <li>\u540e\u5e8f\u904d\u5386</li> <li>\u5de6\u53f3\u5404\u6709\u4e00\u4e2a\u8282\u70b9\uff0c\u8bf4\u660e\u6839\u8282\u70b9\u5c31\u662f\u6700\u8fd1\u516c\u5171\u7956\u5148</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%89%91%E6%8C%87Offer/","title":"\u5251\u6307 Offer","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%8A%9B%E6%89%A3%E9%A2%98%E8%A7%A3/","title":"\u529b\u6263\u9898\u89e3","text":"<ul> <li>\u529b\u6263</li> </ul> <p>\u529b\u6263 no.88\\ \u7ed9\u4f60\u4e24\u4e2a\u6309\u975e\u9012\u51cf\u987a\u5e8f\u6392\u5217\u7684\u6574\u6570\u6570\u7ec4 nums1 \u548c nums2, \u53e6\u6709\u4e24\u4e2a\u6574\u6570 m \u548c n , \u5206\u522b\u8868\u793a nums1 \u548c nums2 \u4e2d\u7684\u5143\u7d20\u6570\u76ee\\ \u8bf7\u4f60\u5408\u5e76 nums2 \u5230 nums1 \u4e2d, \u4f7f\u5408\u5e76\u540e\u7684\u6570\u7ec4\u540c\u6837\u6309\u975e\u9012\u51cf\u987a\u5e8f\u6392\u5217</p> <pre><code>class Solution {\npublic:\n    void merge(vector&lt;int&gt;&amp; nums1, int m, vector&lt;int&gt;&amp; nums2, int n) {\n        int m1(0), n1(0);\n        int num[m+n];\n        for(int i=0;i&lt;m+n;){\n        if(m1==m){\n            while(i&lt;m+n) num[i++]=nums2[n1++];\n            break;\n        }\n        if(n1==n){\n            while(i&lt;m+n) num[i++]=nums1[m1++];\n            break;\n        }\n        if(nums1[m1]&lt;=nums2[n1]) num[i++]=nums1[m1++];\n        else num[i++]=nums2[n1++];\n        }\n        for(int i=0;i&lt;m+n;i++) nums1[i]=num[i];\n    }\n};\n</code></pre> <p>\u975e\u5e38\u7b80\u5355, \u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4\u5f52\u5e76 \u4f46\u662f\u6211\u6ca1\u6709\u4ece\u540e\u5f52\u6d6a\u8d39\u4e86\u7a7a\u95f4</p> <p>\u529b\u6263 no.27\\ \u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u503c val, \u4f60\u9700\u8981\u539f\u5730\u79fb\u9664\u6240\u6709\u6570\u503c\u7b49\u4e8e val \u7684\u5143\u7d20 \u5143\u7d20\u7684\u987a\u5e8f\u53ef\u80fd\u53d1\u751f\u6539\u53d8 \u7136\u540e\u8fd4\u56de nums \u4e2d\u4e0e val \u4e0d\u540c\u7684\u5143\u7d20\u7684\u6570\u91cf</p> <pre><code>class Solution {\npublic:\n    int removeElement(vector&lt;int&gt;&amp; nums, int val) {\n        int r=nums.size(), l(0);\n        for(l;l&lt;r;l++){\n            if(nums[l]==val){\n                while(r--){\n                    if(r==l) return l;\n                    if(nums[r]!=val) break;\n                }\n                nums[l]=nums[r];\n            }\n        }\n        return l;\n    }\n};\n</code></pre> <p>\u53cc\u6307\u9488\u53bb\u9664\u6570 \u8c03\u4e86\u597d\u4e45, \u601d\u8def\u662f\u5bf9\u7684</p> <p>\u529b\u6263 no.26\\ \u7ed9\u4f60\u4e00\u4e2a \u975e\u4e25\u683c\u9012\u589e\u6392\u5217 \u7684\u6570\u7ec4 nums , \u8bf7\u4f60\u539f\u5730\u5220\u9664\u91cd\u590d\u51fa\u73b0\u7684\u5143\u7d20, \u4f7f\u6bcf\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21, \u8fd4\u56de\u5220\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u5143\u7d20\u7684\u76f8\u5bf9\u987a\u5e8f, \u5e94\u8be5\u4fdd\u6301\u4e00\u81f4, \u7136\u540e\u8fd4\u56de nums \u4e2d\u552f\u4e00\u5143\u7d20\u7684\u4e2a\u6570</p> <pre><code>class Solution {\npublic:\n    int removeDuplicates(vector&lt;int&gt;&amp; nums) {\n        int s(1), mn=nums.size();\n        for(int q=1;q&lt;mn;q++){\n            if(nums[q]==nums[q-1]) continue;\n            else nums[s++]=nums[q];\n        }\n        return s;\n    }\n};\n</code></pre> <p>\u53bb\u9664\u91cd\u590d\u6570, \u53cc\u6307\u9488\u4e00\u6837\u7b80\u5355</p> <p>\u529b\u6263 no.80\\ \u7ed9\u4f60\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4 nums, \u8bf7\u4f60\u539f\u5730\u5220\u9664\u91cd\u590d\u51fa\u73b0\u7684\u5143\u7d20, \u4f7f\u5f97\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e24\u6b21\u7684\u5143\u7d20\u53ea\u51fa\u73b0\u4e24\u6b21, \u8fd4\u56de\u5220\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\\ \u4e0d\u8981\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4, \u4f60\u5fc5\u987b\u5728\u539f\u5730\u4fee\u6539\u8f93\u5165\u6570\u7ec4 \u5e76\u5728\u4f7f\u7528 \\(O(1)\\) \u989d\u5916\u7a7a\u95f4\u7684\u6761\u4ef6\u4e0b\u5b8c\u6210</p> <pre><code>class Solution {\npublic:\n    int removeDuplicates(vector&lt;int&gt;&amp; nums) {\n        int i(1), j(1), cnt(0);\n        for(j;j&lt;nums.size();j++){\n            if(nums[j]==nums[j-1]) cnt++;\n            else cnt=0;\n            if(cnt&lt;2) nums[i++]=nums[j];\n        }\n        return i;\n    }\n};\n</code></pre> <p>\u4e00\u6837\u7684\u7b80\u5355\u53cc\u6307\u9488</p> <p>\u529b\u6263 no.169\\ \u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3a n \u7684\u6570\u7ec4 nums , \u8fd4\u56de\u5176\u4e2d\u7684\u591a\u6570\u5143\u7d20 \u591a\u6570\u5143\u7d20\u662f\u6307\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570 \u5927\u4e8e \\(\u230an/2\u230b\\) \u7684\u5143\u7d20\\ \u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u662f\u975e\u7a7a\u7684, \u5e76\u4e14\u7ed9\u5b9a\u7684\u6570\u7ec4\u603b\u662f\u5b58\u5728\u591a\u6570\u5143\u7d20\\ \u53ea\u60f3\u5230\u4e00\u4e2a\u54c8\u5e0c\u8868 \u592a\u5dee\u4e86, \u9644\u4e00\u4e2a\u5b98\u65b9\u6b63\u89e3</p> <pre><code>class Solution {\npublic:\n    int majorityElement(vector&lt;int&gt;&amp; nums) {\n        int candidate = -1;\n        int count = 0;\n        for (int num : nums) {\n            if (num == candidate)\n                ++count;\n            else if (--count &lt; 0) {\n                candidate = num;\n                count = 1;\n            }\n        }\n        return candidate;\n    }\n};\n</code></pre> <p>\u6392\u5e8f\u6cd5 (n\\2), \u5206\u6cbb (\u6c42\u4f17\u6570) \u968f\u673a\u5316 \u6469\u5c14\u6295\u7968 (\u8d85\u534a\u6570\u53ef\u7528, \u53bb\u9664\u4e0d\u540c\u6570\u5bf9)</p> <p>\u529b\u6263 no.189\\ \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums, \u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5411\u53f3\u8f6e\u8f6c k \u4e2a\u4f4d\u7f6e, \u5176\u4e2d k \u662f\u975e\u8d1f\u6570\\ \u53ea\u60f3\u5230\u4e86\u989d\u5916\u7a7a\u95f4</p> <pre><code>class Solution {\npublic:\n    void rotate(vector&lt;int&gt;&amp; nums, int k) {\n        k=k%nums.size();\n        if(!k) return;\n        int a[k];\n        for(int i=nums.size()-k, j=0;i&lt;nums.size();i++) a[j++]=nums[i];\n        for(int i=nums.size()-1;i&gt;=k;i--) nums[i]=nums[i-k];\n        for(int i=0;i&lt;k;i++) nums[i]=a[i];\n    }\n};\n</code></pre> <p>\u770b\u4e86\u9898\u89e3, \u4e4b\u524d\u4ee5\u4e3a\u591a\u7384\u5999\\ \u7ffb\u8f6c\u5c31\u662f\u7b80\u5355\u7684\u4e09\u6b21\u7ffb\u8f6c \u8fd8\u6709\u4e00\u4e2a\u73af\u72b6\u66ff\u6362, \u90fd\u662f \\(O(1)\\) \u7a7a\u95f4</p> <p>\u529b\u6263 no.121\\ \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 prices , \u5b83\u7684\u7b2c i \u4e2a\u5143\u7d20 <code>prices[i]</code> \u8868\u793a\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2c i \u5929\u7684\u4ef7\u683c\\ \u4f60\u53ea\u80fd\u9009\u62e9 \u67d0\u4e00\u5929 \u4e70\u5165\u8fd9\u53ea\u80a1\u7968, \u5e76\u9009\u62e9\u5728 \u672a\u6765\u7684\u67d0\u4e00\u4e2a\u4e0d\u540c\u7684\u65e5\u5b50 \u5356\u51fa\u8be5\u80a1\u7968 \u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\\ \u8fd4\u56de\u4f60\u53ef\u4ee5\u4ece\u8fd9\u7b14\u4ea4\u6613\u4e2d\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6 \u5982\u679c\u4f60\u4e0d\u80fd\u83b7\u53d6\u4efb\u4f55\u5229\u6da6, \u8fd4\u56de 0\\ \u7ef4\u62a4\u6b64\u524d\u6700\u5c0f\u503c</p> <pre><code>class Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; prices) {\n        int min(0), max(0);\n        for(int i=1;i&lt;prices.size();i++){\n            if(prices[i]-prices[min]&gt;max) max=prices[i]-prices[min];\n            if(prices[i]&lt;prices[min]) min=i;\n        }\n        return max;\n    }\n};\n</code></pre> <p>\u6b63\u89e3</p> <p>\u529b\u6263 no.122\\ \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 prices , \u5176\u4e2d <code>prices[i]</code> \u8868\u793a\u67d0\u652f\u80a1\u7968\u7b2c i \u5929\u7684\u4ef7\u683c\\ \u5728\u6bcf\u4e00\u5929, \u4f60\u53ef\u4ee5\u51b3\u5b9a\u662f\u5426\u8d2d\u4e70\u548c\u51fa\u552e\u80a1\u7968 \u4f60\u5728\u4efb\u4f55\u65f6\u5019 \u6700\u591a \u53ea\u80fd\u6301\u6709 \u4e00\u80a1 \u80a1\u7968 \u4f60\u4e5f\u53ef\u4ee5\u5148\u8d2d\u4e70, \u7136\u540e\u5728 \u540c\u4e00\u5929 \u51fa\u552e\\ \u8fd4\u56de \u4f60\u80fd\u83b7\u5f97\u7684 \u6700\u5927 \u5229\u6da6\\ \u9012\u589e\u7d2f\u52a0, \u9012\u51cf\u4e0d\u8ba1 \u79d2\u6740</p> <pre><code>class Solution {\npublic:\n    int maxProfit(vector&lt;int&gt;&amp; prices) {\n        int sum(0);\n        for(int i=1;i&lt;prices.size();i++)\n            if(prices[i]&gt;prices[i-1]) sum+=prices[i]-prices[i-1];\n        return sum;\n    }\n};\n</code></pre> <p>\u6b63\u89e3 \u52a8\u6001\u89c4\u5212\u4e5f\u53ef\u4ee5, \u7a7a\u95f4\u7a0d\u5fae\u591a\u70b9</p> <p>\u529b\u6263 no.55\\ \u7ed9\u4f60\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4 nums , \u4f60\u6700\u521d\u4f4d\u4e8e\u6570\u7ec4\u7684 \u7b2c\u4e00\u4e2a\u4e0b\u6807  \u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u4f60\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u5927\u957f\u5ea6 \u5224\u65ad\u4f60\u662f\u5426\u80fd\u591f\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807, \u5982\u679c\u53ef\u4ee5, \u8fd4\u56de <code>true</code> ; \u5426\u5219, \u8fd4\u56de <code>false</code></p> <pre><code>class Solution {\npublic:\n    bool canJump(vector&lt;int&gt;&amp; nums) {\n        int m(0);\n        for(int i=0;i&lt;nums.size();i++){\n            if(i&gt;m) return 0;\n            if(nums[i]+i&gt;m) m=nums[i]+i;\n        }\n        return 1;\n    }\n};\n</code></pre> <p>\u7ef4\u62a4\u53ef\u5230\u8fbe\u533a\u57df</p> <p>\u529b\u6263 no.45\\ \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684 0 \u7d22\u5f15\u6574\u6570\u6570\u7ec4 nums \u521d\u59cb\u4f4d\u7f6e\u4e3a <code>nums[0]</code>\\ \u6bcf\u4e2a\u5143\u7d20 <code>nums[i]</code> \u8868\u793a\u4ece\u7d22\u5f15 i \u5411\u524d\u8df3\u8f6c\u7684\u6700\u5927\u957f\u5ea6\\ \u8fd4\u56de\u5230\u8fbe <code>nums[n-1]</code> \u7684\u6700\u5c0f\u8df3\u8dc3\u6b21\u6570 \u751f\u6210\u7684\u6d4b\u8bd5\u7528\u4f8b\u53ef\u4ee5\u5230\u8fbe <code>nums[n-1]</code></p> <pre><code>class Solution {\npublic:\n    int jump(vector&lt;int&gt;&amp; nums) {\n        int m=nums[0]+1, cnt(1);\n        if(nums.size()==1) return 0;\n        while(m&lt;nums.size()){\n            int j=m;\n            for(int i=0;i&lt;j;i++){\n                m=max(m, nums[i]+i+1);\n            }\n            cnt++;\n        }\n        return cnt;\n    }\n};\n</code></pre> <p>\u601d\u8def\u6ca1\u9519, \u560e\u560e\u8c03\u8bd5, \u5fd8\u8bb0\u4fdd\u5b58 m \u7684\u503c</p> <p>\u529b\u6263 no.274\\ \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 citations , \u5176\u4e2d <code>citations[i]</code> \u8868\u793a\u7814\u7a76\u8005\u7684\u7b2c i \u7bc7\u8bba\u6587\u88ab\u5f15\u7528\u7684\u6b21\u6570 \u8ba1\u7b97\u5e76\u8fd4\u56de\u8be5\u7814\u7a76\u8005\u7684 h \u6307\u6570\\ \u6839\u636e\u7ef4\u57fa\u767e\u79d1\u4e0a h \u6307\u6570\u7684\u5b9a\u4e49:h \u4ee3\u8868 \"\u9ad8\u5f15\u7528\u6b21\u6570\", \u4e00\u540d\u79d1\u7814\u4eba\u5458\u7684 h \u6307\u6570\u662f\u6307\u4ed6\u81f3\u5c11\u53d1\u8868\u4e86 h \u7bc7\u8bba\u6587, \u5e76\u4e14\u81f3\u5c11\u6709 h \u7bc7\u8bba\u6587\u88ab\u5f15\u7528\u6b21\u6570\u5927\u4e8e\u7b49\u4e8e h  \u5982\u679c h \u6709\u591a\u79cd\u53ef\u80fd\u7684\u503c, h \u6307\u6570\u662f\u5176\u4e2d\u6700\u5927\u7684\u90a3\u4e2a</p> <pre><code>class Solution {\npublic:\n    int hIndex(vector&lt;int&gt;&amp; citations) {\n        sort(citations.rbegin(), citations.rend());\n        for(int i=0;i&lt;citations.size();i++){\n            if(i+1&gt;citations[i]) return i;\n        }\n        return citations.size();\n    }\n};\n</code></pre> <p>\u6392\u5e8f\u79d2\u6740\\ \u7814\u7a76\u4e86\u4e00\u4e0b\u9898\u89e3, \u7531\u4e8e h \u5728 <code>[0, n]</code> \u4e2d\u5206\u5e03\u7684\u7279\u6027 \u5f15\u51fa\u4e8c\u5206, \u8ba1\u6570\u6392\u5e8f \\(O(n)\\), \u5dee\u5206, \u7b49\u65b9\u6cd5</p> <p>\u529b\u6263 no.380 \u5b9e\u73b0 RandomizedSet \u7c7b: <code>RandomizedSet()</code> \u521d\u59cb\u5316 RandomizedSet \u5bf9\u8c61 <code>bool insert (int val)</code> \u5f53\u5143\u7d20 val \u4e0d\u5b58\u5728\u65f6, \u5411\u96c6\u5408\u4e2d\u63d2\u5165\u8be5\u9879, \u5e76\u8fd4\u56de <code>true</code> ; \u5426\u5219, \u8fd4\u56de <code>false</code>\\ <code>bool remove (int val)</code> \u5f53\u5143\u7d20 val \u5b58\u5728\u65f6, \u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u8be5\u9879, \u5e76\u8fd4\u56de <code>true</code> ; \u5426\u5219, \u8fd4\u56de <code>false</code>\\ <code>int getRandom ()</code> \u968f\u673a\u8fd4\u56de\u73b0\u6709\u96c6\u5408\u4e2d\u7684\u4e00\u9879 (\u6d4b\u8bd5\u7528\u4f8b\u4fdd\u8bc1\u8c03\u7528\u6b64\u65b9\u6cd5\u65f6\u96c6\u5408\u4e2d\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u5143\u7d20) \u6bcf\u4e2a\u5143\u7d20\u5e94\u8be5\u6709 \u76f8\u540c\u7684\u6982\u7387 \u88ab\u8fd4\u56de \u4f60\u5fc5\u987b\u5b9e\u73b0\u7c7b\u7684\u6240\u6709\u51fd\u6570, \u5e76\u6ee1\u8db3\u6bcf\u4e2a\u51fd\u6570\u7684 \u5e73\u5747 \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(1)\\)</p> <pre><code>class RandomizedSet {\npublic:\n    RandomizedSet() {\n        srand((unsigned)time(NULL));\n    }\n\n    bool insert(int val) {\n        if (indices.count(val)) {\n            return false;\n        }\n        int index = nums.size();\n        nums.emplace_back(val);\n        indices[val] = index;\n        return true;\n    }\n\n    bool remove(int val) {\n        if (!indices.count(val)) {\n            return false;\n        }\n        int index = indices[val];\n        int last = nums.back();\n        nums[index] = last;\n        indices[last] = index;\n        nums.pop_back();\n        indices.erase(val);\n        return true;\n    }\n\n    int getRandom() {\n        int randomIndex = rand()%nums.size();\n        return nums[randomIndex];\n    }\n\nprivate:\n    vector&lt;int&gt; nums;\n    unordered_map&lt;int, int&gt; indices;\n};\n</code></pre> <p>\u6ca1\u505a\u51fa\u6765, \u9644\u4e00\u4e2a\u5b98\u65b9\u89e3 \u6211\u7528 bitset \u5b58\u5143\u7d20\u72b6\u6001, \u6570\u7ec4\u6765\u5b58\u6570\u4ee5\u968f\u673a \u4f46\u662f\u6837\u672c\u6709\u9488\u5bf9\u68c0\u9a8c\u7684, \u4f7f\u9000\u5316\u5230 \\(O(n)\\)</p> <p>\u529b\u6263 no.9 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570 x , \u5982\u679c x \u662f\u4e00\u4e2a\u56de\u6587\u6574\u6570, \u8fd4\u56de <code>true</code> ; \u5426\u5219, \u8fd4\u56de <code>false</code></p> <pre><code>class Solution {\npublic:\n    bool isPalindrome(int x) {\n        std::string s=to_string(x);\n        for(int i=0;i&lt;s.size()/2;i++){\n            if(s[i]==s[s.size()-1-i]);\n            else return 0;\n        }\n        return 1;\n    }\n};\n</code></pre> <p>\u88ab\u9898\u89e3\u7f9e\u8fb1\u4e86 \u53cd\u8f6c\u4e00\u534a\u6570\u5b57, \u76f4\u5230\u5269\u4e0b\u7684\u5c0f\u4e8e\u7b49\u4e8e\u53cd\u8f6c\u7684</p> <p>\u529b\u6263 no.13\\ \u7f57\u9a6c\u6570\u5b57\u8f6c\u6574\u6570</p> <pre><code>class Solution {\npublic:\n    int romanToInt(string s) {\n        int sum(0);\n        int cnt[s.size()];\n        for(int i=s.size()-1;i&gt;-1;i--){\n            switch(s[i]){\n                case 'I':cnt[i]=1;break;\n                case 'V':cnt[i]=5;break;\n                case 'X':cnt[i]=10;break;\n                case 'L':cnt[i]=50;break;\n                case 'C':cnt[i]=100;break;\n                case 'D':cnt[i]=500;break;\n                case 'M':cnt[i]=1000;\n            }\n            if((i==s.size()-1)||cnt[i]&gt;=cnt[i+1]) sum+=cnt[i];\n            else sum-=cnt[i];\n        }\n        return sum;\n    }\n};\n</code></pre> <p>\u7b80\u5355</p> <p>\u529b\u6263 no.14\\ \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\\ \u5982\u679c\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00, \u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 <code>\"\"</code></p> <pre><code>class Solution {\npublic:\n    string longestCommonPrefix(vector&lt;string&gt;&amp; strs) {\n        string s;\n        for(int i(0);strs[0][i];i++){\n            for(int j(1);j&lt;strs.size();j++){\n                if(strs[j][i]==strs[0][i]) continue;\n                else return s;\n            }\n            s+=strs[0][i];\n        }\n        return s;\n    }\n};\n</code></pre> <p>\u7528\u7684\u6a2a\u5411\u67e5\u627e \u53ef\u4ee5\u5206\u6cbb, \u4e8c\u5206\u641c\u7d22, \u7eb5\u5411</p> <p>\u529b\u6263 no.28 \u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32 haystack \u548c needle, \u8bf7\u4f60\u5728 haystack \u5b57\u7b26\u4e32\u4e2d\u627e\u51fa needle \u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7684\u4e0b\u6807 (\u4e0b\u6807\u4ece 0 \u5f00\u59cb) \u5982\u679c needle \u4e0d\u662f haystack \u7684\u4e00\u90e8\u5206, \u5219\u8fd4\u56de  -1</p> <pre><code>class Solution {\npublic:\n    int strStr(string haystack, string needle) {\n        for(int i(0);i&lt;haystack.size();i++){\n            if(haystack[i]==needle[0]){\n                int a(i), j(0);\n                for(j;j&lt;needle.size();j++) if(haystack[a++]!=needle[j]) goto a;\n                return i;\n            }\n            a:\n        }\n        return -1;\n    }\n};\n</code></pre> <p>\u987a\u624b\u5199\u4e00\u4e2a\u66b4\u529b \\(O(mn)\\) \u6b63\u89e3 KMP</p> <p>\u529b\u6263 no.58\\ \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s, \u7531\u82e5\u5e72\u5355\u8bcd\u7ec4\u6210, \u5355\u8bcd\u524d\u540e\u7528\u4e00\u4e9b\u7a7a\u683c\u5b57\u7b26\u9694\u5f00, \u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\\ \u5355\u8bcd\u662f\u6307\u4ec5\u7531\u5b57\u6bcd\u7ec4\u6210\u4e14\u4e0d\u5305\u542b\u4efb\u4f55\u7a7a\u683c\u5b57\u7b26\u7684\u6700\u5927\u5b50\u5b57\u7b26\u4e32</p> <pre><code>class Solution {\npublic:\n    int lengthOfLastWord(string s) {\n        int ans(0), i(s.size()-1);\n        for(i;s[i]==' ';i--);\n        for(i;i&gt;=0&amp;&amp;s[i]!=' ';i--) ans++;\n        return ans;\n    }\n};\n</code></pre> <p>\u4eca\u5929\u6253\u725b\u5ba2, \u6c34\u4e00\u9053\u7b80\u5355</p> <p>\u529b\u6263 no.125\\ \u5982\u679c\u5728\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u7b26 \u5e76\u79fb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u4e4b\u540e, \u77ed\u8bed\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837, \u5219\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u77ed\u8bed\u662f\u4e00\u4e2a\u56de\u6587\u4e32\\ \u5b57\u6bcd\u548c\u6570\u5b57\u90fd\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\\ \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s, \u5982\u679c\u5b83\u662f\u56de\u6587\u4e32 , \u8fd4\u56de <code>true</code> \u5426\u5219, \u8fd4\u56de <code>false</code></p> <pre><code>class Solution {\npublic:\n    bool isPalindrome(string s) {\n        int r(s.size()-1), l(0);\n        while(r&gt;l){\n            if(s[r]&lt;'0'||(s[r]&gt;'9'&amp;&amp;s[r]&lt;'A')||(s[r]&gt;'Z'&amp;&amp;s[r]&lt;'a')||s[r]&gt;'z'){\n                r--;continue;\n            }\n            if(s[l]&lt;'0'||(s[l]&gt;'9'&amp;&amp;s[l]&lt;'A')||(s[l]&gt;'Z'&amp;&amp;s[l]&lt;'a')||s[l]&gt;'z'){\n                l++;continue;\n            }\n            if(s[l]==s[r]||(s[r]&gt;='a'&amp;&amp;s[l]+32==s[r])||(s[l]&gt;='a'&amp;&amp;s[l]==s[r]+32)){\n                r--;l++;continue;\n            }\n            else return 0;\n        }\n        return 1;\n    }\n};\n</code></pre> <p>\u53cc\u6307\u9488\u79d2\u6740</p> <p>\u529b\u6263 no.392\\ \u7ed9\u5b9a\u5b57\u7b26\u4e32 s \u548c t , \u5224\u65ad s \u662f\u5426\u4e3a t \u7684\u5b50\u5e8f\u5217\\ \u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\u662f\u539f\u59cb\u5b57\u7b26\u4e32\u5220\u9664\u4e00\u4e9b (\u4e5f\u53ef\u4ee5\u4e0d\u5220\u9664) \u5b57\u7b26\u800c\u4e0d\u6539\u53d8\u5269\u4f59\u5b57\u7b26\u76f8\u5bf9\u4f4d\u7f6e\u5f62\u6210\u7684\u65b0\u5b57\u7b26\u4e32  (\u4f8b\u5982, \"ace\" \u662f \"abcde\" \u7684\u4e00\u4e2a\u5b50\u5e8f\u5217, \u800c \"aec\" \u4e0d\u662f)\\ \u5982\u679c\u6709\u5927\u91cf\u8f93\u5165\u7684 S, \u79f0\u4f5c S1, S2, ... , Sk \u5176\u4e2d k &gt;= 10 \u4ebf, \u4f60\u9700\u8981\u4f9d\u6b21\u68c0\u67e5\u5b83\u4eec\u662f\u5426\u4e3a T \u7684\u5b50\u5e8f\u5217</p> <pre><code>class Solution {\npublic:\n    bool isSubsequence(string s, string t) {\n        int m(0);\n        for(int i(0);i&lt;s.size();i++){\n            while(m&lt;=t.size()) if(t[m++]==s[i]) break;\n            if(m==t.size()+1) return 0;\n        }\n        return 1;\n    }\n};\n</code></pre> <p>\u53cc\u6307\u9488\\ \u52a8\u6001\u89c4\u5212</p> <pre><code>class Solution {\npublic:\n    bool isSubsequence(string s, string t) {\n        int n = s.size(), m = t.size();\n\n        vector&lt;vector&lt;int&gt; &gt; f(m + 1, vector&lt;int&gt;(26, 0));\n        for (int i = 0; i &lt; 26; i++) {\n            f[m][i] = m;\n        }\n\n        for (int i = m - 1; i &gt;= 0; i--) {\n            for (int j = 0; j &lt; 26; j++) {\n                if (t[i] == j + 'a')\n                    f[i][j] = i;\n                else\n                    f[i][j] = f[i + 1][j];\n            }\n        }\n        int add = 0;\n        for (int i = 0; i &lt; n; i++) {\n            if (f[add][s[i] - 'a'] == m) {\n                return false;\n            }\n            add = f[add][s[i] - 'a'] + 1;\n        }\n        return true;\n    }\n};\n</code></pre> <p>\u5bf9\u4e8e\u6bcf\u4e00\u5b57\u7b26, \u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406\u51fa\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4f4d\u7f6e, \u4e0b\u4e00\u4e2a\u51fa\u73b0\u67d0\u5b57\u7b26\u7684\u4f4d\u7f6e</p> <p>\u529b\u6263 no.383\\ \u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32: ransomNote \u548c magazine , \u5224\u65ad ransomNote \u80fd\u4e0d\u80fd\u7531 magazine \u91cc\u9762\u7684\u5b57\u7b26\u6784\u6210\\ \u5982\u679c\u53ef\u4ee5, \u8fd4\u56de <code>true</code> ; \u5426\u5219\u8fd4\u56de false\\ magazine \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u53ea\u80fd\u5728 ransomNote \u4e2d\u4f7f\u7528\u4e00\u6b21</p> <pre><code>class Solution {\npublic:\n    bool canConstruct(string ransomNote, string magazine) {\n        int a[256]={0};\n        for(int i(0);i&lt;magazine.size();i++) a[magazine[i]]++;\n        for(int i(0);i&lt;ransomNote.size();i++) if(--a[ransomNote[i]]==-1) return 0;\n        return 1; \n    }\n};\n</code></pre> <p>\u529b\u6263 no.205\\ \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t , \u5224\u65ad\u5b83\u4eec\u662f\u5426\u662f\u540c\u6784\u7684\\ \u5982\u679c s \u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u6309\u67d0\u79cd\u6620\u5c04\u5173\u7cfb\u66ff\u6362\u5f97\u5230 t , \u90a3\u4e48\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u540c\u6784\u7684\\ \u6bcf\u4e2a\u51fa\u73b0\u7684\u5b57\u7b26\u90fd\u5e94\u5f53\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26, \u540c\u65f6\u4e0d\u6539\u53d8\u5b57\u7b26\u7684\u987a\u5e8f, \u4e0d\u540c\u5b57\u7b26\u4e0d\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a, \u76f8\u540c\u5b57\u7b26\u53ea\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a, \u5b57\u7b26\u53ef\u4ee5\u6620\u5c04\u5230\u81ea\u5df1\u672c\u8eab</p> <pre><code>class Solution {\npublic:\n    bool isIsomorphic(string s, string t) {\n        int c1[256]={0}, c2[256]={0};\n        for(int i(0);i&lt;s.size();i++){\n            if(!c1[s[i]]&amp;&amp;!c2[t[i]]){\n                c1[s[i]]=t[i];\n                c2[t[i]]=s[i];\n            }\n            else if(c1[s[i]]!=t[i]||c2[t[i]]!=s[i]) return 0;\n        }\n        return 1;\n    }\n};\n</code></pre> <p>\u54c8\u5e0c\u53cc\u5c04</p> <p>\u529b\u6263 no.1\\ \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570\u76ee\u6807\u503c target, \u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa \u548c\u4e3a\u76ee\u6807\u503c target  \u7684\u90a3\u4e24\u4e2a\u6574\u6570, \u5e76\u8fd4\u56de\u5b83\u4eec\u7684\u6570\u7ec4\u4e0b\u6807</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; nums, int target) {\n        unordered_map&lt;int, int&gt; hashtable;\n        for (int i = 0; i &lt; nums.size(); ++i) {\n            auto it = hashtable.find(target - nums[i]);\n            if (it != hashtable.end()) {\n                return {it-&gt;second, i};\n            }\n            hashtable[nums[i]] = i;\n        }\n        return {};\n    }\n};\n</code></pre> <p>\u529b\u6263 no.202\\ \u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\u6765\u5224\u65ad\u4e00\u4e2a\u6570 n \u662f\u4e0d\u662f\u5feb\u4e50\u6570\\ \u5bf9\u4e8e\u4e00\u4e2a\u6b63\u6574\u6570, \u6bcf\u4e00\u6b21\u5c06\u8be5\u6570\u66ff\u6362\u4e3a\u5b83\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u5b57\u7684\u5e73\u65b9\u548c\\ \u7136\u540e\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u76f4\u5230\u8fd9\u4e2a\u6570\u53d8\u4e3a 1, \u4e5f\u53ef\u80fd\u662f \u65e0\u9650\u5faa\u73af \u4f46\u59cb\u7ec8\u53d8\u4e0d\u5230 1\\ \u5982\u679c\u8fd9\u4e2a\u8fc7\u7a0b\u7ed3\u679c\u4e3a 1, \u90a3\u4e48\u8fd9\u4e2a\u6570\u5c31\u662f\u5feb\u4e50\u6570\\ \u5982\u679c n \u662f\u5feb\u4e50\u6570 \u5c31\u8fd4\u56de <code>true</code> ; \u4e0d\u662f, \u5219\u8fd4\u56de <code>false</code></p> <pre><code>class Solution {\n    int happy(int n){\n        int sum;\n        for(sum=0;n&gt;0;n/=10) sum+=(n%10)*(n%10);\n        return sum;\n    }\npublic:\n    bool isHappy(int n) {\n        map&lt;int, bool&gt; m;\n        while(n!=1){\n            n=happy(n);\n            if(m[n]) return 0;\n            m[n]=1;\n        }\n        return 1;\n    }\n};\n</code></pre> <p>\u5feb\u6162\u6307\u9488\u5224\u65ad\u73af\u66f4\u597d!!!\\ \u6570\u5b66\u89d2\u5ea6, \u8fd9\u9053\u9898\u5176\u5b9e\u53ea\u80fd\u5b58\u5728\u4e00\u4e2a\u73af, \u627e\u5230\u90a3\u4e2a\u73af, \u7136\u540e\u53ea\u8981\u5230\u8fbe\u67d0\u4e00\u4e2a\u6570\u5b57\u5c31\u8fd4\u56de 0</p> <p>\u529b\u6263 no.238\\ \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums, \u8fd4\u56de\u6570\u7ec4 answer , \u5176\u4e2d <code>answer[i]</code> \u7b49\u4e8e nums \u4e2d\u9664 <code>nums[i]</code> \u4e4b\u5916\u5176\u4f59\u5404\u5143\u7d20\u7684\u4e58\u79ef\\ \u9898\u76ee\u6570\u636e\u4fdd\u8bc1\u6570\u7ec4 nums \u4e4b\u4e2d\u4efb\u610f\u5143\u7d20\u7684\u5168\u90e8\u524d\u7f00\u5143\u7d20\u548c\u540e\u7f00\u7684\u4e58\u79ef\u90fd\u5728 32 \u4f4d \u6574\u6570\u8303\u56f4\u5185\\ \u8bf7\u4e0d\u8981\u4f7f\u7528\u9664\u6cd5, \u4e14\u5728 \\(O(n)\\) \u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u6b64\u9898</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; productExceptSelf(vector&lt;int&gt;&amp; nums) {\n        int len=nums.size();\n        vector&lt;int&gt; l(len), r(len), v(len);\n        l[0]=r[len-1]=1;\n        for(int i(1);i&lt;len;i++) l[i]=l[i-1]*nums[i-1];\n        for(int i(len-2);i&gt;=0;i--) r[i]=r[i+1]*nums[i+1];\n        for(int i(0);i&lt;len;i++) v[i]=l[i]*r[i];\n        return v;\n    }\n};\n</code></pre> <p>\u524d\u7f00\u79ef\u4e0e\u540e\u7f00\u79ef\\ \u53ef\u4ee5\u7701\u53bb\u4e24\u4e2a\u6570\u7ec4, \u521d\u59cb\u5316\u4e00\u4e2a\u524d\u7f00\u6570\u7ec4\u5728\u52a8\u6001\u8ba1\u7b97\u540e\u7f00\u79ef\u7684\u540c\u65f6\u5c06\u524d\u6570\u7ec4\u6539\u53d8</p> <p>\u529b\u6263 no.167\\ \u7ed9\u4f60\u4e00\u4e2a\u4e0b\u6807\u4ece 1 \u5f00\u59cb\u7684\u6574\u6570\u6570\u7ec4 numbers , \u8be5\u6570\u7ec4\u5df2\u6309 \u975e\u9012\u51cf\u987a\u5e8f\u6392\u5217, \u8bf7\u4f60\u4ece\u6570\u7ec4\u4e2d\u627e\u51fa\u6ee1\u8db3\u76f8\u52a0\u4e4b\u548c\u7b49\u4e8e\u76ee\u6807\u6570 target \u7684\u4e24\u4e2a\u6570\\ \u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u4e2a\u8f93\u5165\u53ea\u5bf9\u5e94\u552f\u4e00\u7684\u7b54\u6848 , \u800c\u4e14\u4f60\u4e0d\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u76f8\u540c\u7684\u5143\u7d20\\ \u4f60\u6240\u8bbe\u8ba1\u7684\u89e3\u51b3\u65b9\u6848\u5fc5\u987b\u53ea\u4f7f\u7528\u5e38\u91cf\u7ea7\u7684\u989d\u5916\u7a7a\u95f4</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; twoSum(vector&lt;int&gt;&amp; numbers, int target) {\n        int len(numbers.size());\n        vector&lt;int&gt; ans(2);\n        ans[0]=0;ans[1]=len-1;\n        while(numbers[ans[0]]+numbers[ans[1]]!=target){\n            if(numbers[ans[0]]+numbers[ans[1]]&gt;target) ans[1]--;\n            if(numbers[ans[0]]+numbers[ans[1]]&lt;target) ans[0]++;\n        }\n        ans[0]++;\n        ans[1]++;\n        return ans;\n    }\n};\n</code></pre> <p>\u7b2c\u4e00\u6b21\u4e2d\u7b49\u9898\u4e00\u904d\u51fa\u6b63\u89e3</p> <p>\u529b\u6263 no.151 \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s , \u8bf7\u4f60\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d \u5355\u8bcd \u7684\u987a\u5e8f</p> <pre><code>class Solution {\npublic:\n    string reverseWords(string s) {\n        string ans;\n        int i(s.size()-1);\n        for(;i&gt;=0;i--) if(s[i]!=' ') break;\n        for(;i&gt;=0;i--){\n            if(s[i]==' '&amp;&amp;s[i+1]!=' '){\n                for(int k=i+1;k&lt;s.size()&amp;&amp;s[k]!=' ';k++) ans+=s[k];\n                ans+=' ';\n            }\n        }\n        if(s[0]!=' ')\n            for(int k=0;k&lt;s.size()&amp;&amp;s[k]!=' ';k++) ans+=s[k];\n            else ans.erase(ans.size()-1);\n        return ans;\n    }\n};\n</code></pre> <p>\u53cc\u7aef\u961f\u5217\u4e5f\u53ef\u4ee5</p> <p>\u529b\u6263 no.141 \u73af\u5f62\u94fe\u8868</p> <pre><code>class Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        if(!head||!head-&gt;next) return 0;\n        ListNode *q(head-&gt;next-&gt;next), *s(head-&gt;next);\n        for(;;q=q-&gt;next-&gt;next, s=s-&gt;next){\n            if(!q||!q-&gt;next||!s) return 0;\n            if(q==s) return 1;\n        }\n        return 0;\n    }\n};\n</code></pre> <p>\u5feb\u6162\u6307\u9488!</p> <p>\u529b\u6263 no.21 \u5c06\u4e24\u4e2a\u5347\u5e8f\u94fe\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u65b0\u7684\u5347\u5e8f\u94fe\u8868\u5e76\u8fd4\u56de \u65b0\u94fe\u8868\u662f\u901a\u8fc7\u62fc\u63a5\u7ed9\u5b9a\u7684\u4e24\u4e2a\u94fe\u8868\u7684\u6240\u6709\u8282\u70b9\u7ec4\u6210\u7684</p> <pre><code>class Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        ListNode a(0);\n        ListNode *ans=&amp;a;\n        while(list1&amp;&amp;list2){\n            if(list1-&gt;val&lt;=list2-&gt;val){\n                ans-&gt;next=list1;\n                list1=list1-&gt;next;\n            }\n            else{\n                ans-&gt;next=list2;\n                list2=list2-&gt;next;\n            }\n            ans=ans-&gt;next;\n        }\n        if(list1) ans-&gt;next=list1;\n        else ans-&gt;next=list2;\n        return a.next;\n    }\n};\n</code></pre> <p>\u7f8e\u4e3d\u7684\u9012\u5f52, \u4f55\u65f6\u6211\u80fd\u4e0e\u5979\u5fc3\u6709\u7075\u7280</p> <p>\u529b\u6263 no.12\\ \u6574\u6570\u8f6c\u7f57\u9a6c\u6570\u5b57</p> <pre><code>class Solution {\npublic:\n    string intToRoman(int num) {\n        string s;\n        for(num;num&gt;=1000;num-=1000) s+='M';\n        if(num&gt;=900){\n            num-=900;\n            s+=\"CM\";\n        }\n        if(num&gt;=500){\n            num-=500;\n            s+='D';\n        }\n        if(num&gt;=400){\n            num-=400;\n            s+=\"CD\";\n        }\n        for(num;num&gt;=100;num-=100) s+='C';\n        if(num&gt;=90){\n            num-=90;\n            s+=\"XC\";\n        }\n        if(num&gt;=50){\n            num-=50;\n            s+='L';\n        }\n        if(num&gt;=40){\n            num-=40;\n            s+=\"XL\";\n        }\n        for(num;num&gt;=10;num-=10) s+='X';\n        if(num&gt;=9){\n            num-=9;\n            s+=\"IX\";\n        }\n        if(num&gt;=5){\n            num-=5;\n            s+='V';\n        }\n        if(num&gt;=4){\n            num-=4;\n            s+=\"IV\";\n        }\n        for(num;num;num--) s+='I';\n        return s;\n    }\n};\n</code></pre> <p>\u6a21\u62df\u6216\u8005\u786c\u89e3\u7801</p> <p>\u660e\u663e\u786c\u89e3\u7801\u597d\u770b</p> <p>\u529b\u6263 no.2 \u94fe\u8868\u6a21\u62df\u52a0\u6cd5</p> <pre><code>class Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        int tmp(0);\n        ListNode* ans=l1;\n        while(l1-&gt;next&amp;&amp;l2-&gt;next){\n            if((l1-&gt;val=l1-&gt;val+l2-&gt;val+tmp)&gt;9){\n                l1-&gt;val-=10;tmp=1;\n            }\n            else tmp=0;\n            l1=l1-&gt;next;\n            l2=l2-&gt;next;\n        }\n        if((l1-&gt;val=l1-&gt;val+l2-&gt;val+tmp)&gt;9){\n            l1-&gt;val-=10;tmp=1;\n            }\n        else tmp=0;\n        if(!l1-&gt;next&amp;&amp;!l2-&gt;next);\n        else if(l1-&gt;next){\n            while(l1-&gt;next){\n                l1=l1-&gt;next;\n                if((l1-&gt;val+=tmp)&gt;9){\n                    l1-&gt;val-=10;tmp=1;\n                }\n                else tmp=0;\n            }\n        }\n        else \n            while(l2-&gt;next){\n                l1-&gt;next=new ListNode;\n                l1=l1-&gt;next;\n                l2=l2-&gt;next;\n                if((l1-&gt;val=l2-&gt;val+tmp)&gt;9){\n                    l1-&gt;val-=10;tmp=1;\n                }\n                else tmp=0;\n            }\n        if(tmp){\n            l1-&gt;next=new ListNode;\n            l1=l1-&gt;next;\n            l1-&gt;val=1;\n            l1-&gt;next=0;\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u529b\u6263 no.11 \u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6574\u6570\u6570\u7ec4 height \u6709 n \u6761\u5782\u7ebf, \u7b2c i \u6761\u7ebf\u7684\u4e24\u4e2a\u7aef\u70b9\u662f (i, 0) \u548c (i, <code>height[i]</code>)\\ \u627e\u51fa\u5176\u4e2d\u7684\u4e24\u6761\u7ebf, \u4f7f\u5f97\u5b83\u4eec\u4e0e x \u8f74\u5171\u540c\u6784\u6210\u7684\u5bb9\u5668\u53ef\u4ee5\u5bb9\u7eb3\u6700\u591a\u7684\u6c34\\ \u8fd4\u56de\u5bb9\u5668\u53ef\u4ee5\u50a8\u5b58\u7684\u6700\u5927\u6c34\u91cf</p> <pre><code>class Solution {\npublic:\n    int maxArea(vector&lt;int&gt;&amp; h) {\n        int l(0), r(h.size()-1);\n        int ans(0);\n        while(l&lt;r){\n            ans=ans&gt;min(h[l], h[r])*(r-l)?ans:min(h[l], h[r])*(r-l);\n            if(h[l]&lt;=h[r]) l++;\n            else r--;\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u8c01\u5c0f\u6362\u8c01\\ \u975e\u5e38\u7b80\u5355, \u91cd\u70b9\u5728\u7b97\u6cd5\u53ef\u884c\u6027</p> <p>\u529b\u6263 no.70 \u5047\u8bbe\u4f60\u6b63\u5728\u722c\u697c\u68af \u9700\u8981 n \u9636\u4f60\u624d\u80fd\u5230\u8fbe\u697c\u9876\\ \u6bcf\u6b21\u4f60\u53ef\u4ee5\u722c 1 \u6216 2 \u4e2a\u53f0\u9636 \u4f60\u6709\u591a\u5c11\u79cd\u4e0d\u540c\u7684\u65b9\u6cd5\u53ef\u4ee5\u722c\u5230\u697c\u9876\u5462</p> <pre><code>class Solution {\npublic:\n    int climbStairs(int n) {\n        vector&lt;int&gt; ans(n+1);\n        ans[0]=1;ans[1]=1;\n        for(int i=2;i&lt;n+1;i++) ans[i]=ans[i-2]+ans[i-1];\n        return ans[n];\n    }\n};\n</code></pre> <p>\u52a8\u6001\u89c4\u5212\u79d2\u4e86, \u4e0d\u77e5\u9053\u53ef\u4ee5\u7b97\u901a\u9879\u6211\u8fd8\u7f8e\u5462\\ \u6b63\u89e3\u77e9\u9635\u5feb\u901f\u5e42........</p> <p>\u529b\u6263 no.35\\ \u7ed9\u5b9a\u4e00\u4e2a\u6392\u5e8f\u6570\u7ec4\u548c\u4e00\u4e2a\u76ee\u6807\u503c, \u5728\u6570\u7ec4\u4e2d\u627e\u5230\u76ee\u6807\u503c, \u5e76\u8fd4\u56de\u5176\u7d22\u5f15\u5982\u679c\u76ee\u6807\u503c\u4e0d\u5b58\u5728\u4e8e\u6570\u7ec4\u4e2d, \u8fd4\u56de\u5b83\u5c06\u4f1a\u88ab\u6309\u987a\u5e8f\u63d2\u5165\u7684\u4f4d\u7f6e</p> <pre><code>class Solution {\npublic:\n    int searchInsert(vector&lt;int&gt;&amp; nums, int target) {\n        int left=0, right=nums.size()-1;\n        while(left&lt;=right){\n            mid=(left+right)/2;\n            if(nums[mid]&lt;target){\n                left=mid+1;\n            }\n            else{\n                right=mid-1;\n            }\n        }\n        return left;\n    }\n};\n</code></pre> <p>\u4e8c\u5206\u67e5\u627e</p> <p>\u529b\u6263 no.191\\ \u7f16\u5199\u4e00\u4e2a\u51fd\u6570, \u8f93\u5165\u662f\u4e00\u4e2a\u65e0\u7b26\u53f7\u6574\u6570 (\u4ee5\u4e8c\u8fdb\u5236\u4e32\u7684\u5f62\u5f0f), \u8fd4\u56de\u5176\u4e8c\u8fdb\u5236\u8868\u8fbe\u5f0f\u4e2d\u6570\u5b57\u4f4d\u6570\u4e3a '1' \u7684\u4e2a\u6570 (\u4e5f\u88ab\u79f0\u4e3a\u6c49\u660e\u91cd\u91cf)</p> <pre><code>\u57fa\u4e8e n&amp;(n-1)\u6070\u4e3a\u628a n \u7684\u4e8c\u8fdb\u5236\u4f4d\u4e2d\u7684\u6700\u4f4e\u4f4d\u7684 1 \u53d8\u4e3a 0\nclass Solution {\npublic:\n    int hammingWeight(uint32_t n) {\n        int ret = 0;\n        while (n) {\n            n &amp;= n - 1;\n            ret++;\n        }\n        return ret;\n    }\n};\n\nSWAP \u7b97\u6cd5, $O(1)$, \u5206\u6cbb\u601d\u60f3\npublic class Solution {\n    public int hammingWeight(int n) {\n        n = n - ((n &gt;&gt;&gt; 1) &amp; 0x55555555);\n        n = (n &amp; 0x33333333) + ((n &gt;&gt;&gt; 2) &amp; 0x33333333);\n        n = (n + (n &gt;&gt;&gt; 4)) &amp; 0x0f0f0f0f;\n        n = n + (n &gt;&gt;&gt; 8);\n        n = n + (n &gt;&gt;&gt; 16);\n        return n &amp; 0x3f;\n    }\n}\n</code></pre> <p>\u529b\u6263 no.136 \u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u6574\u6570\u6570\u7ec4, \u9664\u4e86\u67d0\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21\u4ee5\u5916, \u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u5747\u51fa\u73b0\u4e24\u6b21 \u627e\u51fa\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u5143\u7d20</p> <pre><code>class Solution {\npublic:\n    int singleNumber(vector&lt;int&gt;&amp; nums) {\n        int ans(0);\n        for(int i(0);i&lt;nums.size();i++) ans^=nums[i];\n        return ans;\n    }\n};\n</code></pre> <p>\u5f02\u6216\u79d2\u6740</p> <p>\u529b\u6263 no.134\\ \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 gas , \u5176\u4e2d <code>gas[i]</code> \u8868\u793a\u5728\u7b2c i \u4e2a\u52a0\u6cb9\u7ad9\u6709\u591a\u5c11\u6c7d\u6cb9\\ \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 cost , \u5176\u4e2d <code>cost[i]</code> \u8868\u793a\u4ece\u7b2c i \u4e2a\u52a0\u6cb9\u7ad9\u5f00\u5f80\u7b2c i+1 \u4e2a\u52a0\u6cb9\u7ad9\u9700\u8981\u6d88\u8017\u7684\u6c7d\u6cb9\\ \u5982\u679c\u4f60\u53ef\u4ee5\u6309\u987a\u5e8f\u7ed5\u73af\u8def\u884c\u9a76\u4e00\u5468, \u5219\u8fd4\u56de\u51fa\u53d1\u65f6\u52a0\u6cb9\u7ad9\u7684\u7f16\u53f7, \u5426\u5219\u8fd4\u56de -1</p> <pre><code>class Solution {\npublic:\n    int canCompleteCircuit(vector&lt;int&gt;&amp; gas, vector&lt;int&gt;&amp; cost) {\n        int l(gas.size()), a[gas.size()];\n        for(int i(0);i&lt;l;i++) a[i]=gas[i]-cost[i];\n        int e(-1), f(l), sum(0);\n        while(1){\n            if(sum&gt;=0){\n                if(e+1&lt;l) e++;\n                else return 0;\n                sum+=a[e];\n                if(e==f) break;\n            }\n            else{\n                sum+=a[--f];\n                if(f==e) return -1;\n            }\n        }\n        return f;\n    }\n};\n</code></pre> <p>\u987a\u5e8f\u904d\u5386\u5373\u53ef, \u6211\u53cc\u6307\u9488\u590d\u6742\u4e86</p> <p>\u529b\u6263 no.42\\ \u7ed9\u5b9a n \u4e2a\u975e\u8d1f\u6574\u6570\u8868\u793a\u6bcf\u4e2a\u5bbd\u5ea6\u4e3a 1 \u7684\u67f1\u5b50\u7684\u9ad8\u5ea6\u56fe, \u8ba1\u7b97\u6309\u6b64\u6392\u5217\u7684\u67f1\u5b50, \u4e0b\u96e8\u4e4b\u540e\u80fd\u63a5\u591a\u5c11\u96e8\u6c34</p> <pre><code>class Solution {\npublic:\n    int trap(vector&lt;int&gt;&amp; height) {\n        int l(0), r(height.size()-1), m(0), ans(0);\n        while(l&lt;r){\n            m=max(m, min(height[l], height[r]));\n            if(height[l]&lt;m) ans+=m-height[l];\n            if(height[r]&lt;m) ans+=m-height[r];\n            if(height[l]&lt;=height[r]) l++;\n            else r--;\n        }\n        return ans;\n    }\n};\n</code></pre> <p>hard \u51fa\u6b63\u89e3, \u597d!</p> <p>\u529b\u6263 no.754\\ \u5728\u4e00\u6839\u65e0\u9650\u957f\u7684\u6570\u8f74\u4e0a, \u4f60\u7ad9\u5728 0 \u7684\u4f4d\u7f6e \u7ec8\u70b9\u5728 target \u7684\u4f4d\u7f6e\\ \u6bcf\u6b21\u4f60\u53ef\u4ee5\u9009\u62e9\u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\u7b2c n \u6b21\u79fb\u52a8 (\u4ece 1 \u5f00\u59cb), \u53ef\u4ee5\u8d70 n \u6b65\\ \u8fd4\u56de\u5230\u8fbe\u7ec8\u70b9\u9700\u8981\u7684\u6700\u5c0f\u79fb\u52a8\u6b21\u6570</p> <pre><code>class Solution {\npublic:\n    int reachNumber(int target) {\n        target = abs(target);\n        int n = (-1 + sqrt(1 + 8.0 * target)) / 2;\n        int d = target - n * (n + 1) / 2;\n        if (!d) return n;\n        d -= ++n;\n        return (d &amp; 1 ? n + 1 + n % 2 : n);\n    }   \n};\n</code></pre> <p>\u6570\u5b66 + \u8d2a\u5fc3 \\(O(1)\\) \u79d2\u6740, <code>sqrt</code> \u73b0\u4ee3 CPU \u6709\u6307\u4ee4</p> <p>\u529b\u6263 no.20\\ \u7ed9\u5b9a\u4e00\u4e2a\u53ea\u5305\u62ec <code>'(' ')' '{' '}' '[' ']'</code> \u7684\u5b57\u7b26\u4e32 s , \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u6709\u6548</p> <pre><code>class Solution {\npublic:\n    bool isValid(string s) {\n      stack&lt;int&gt; st;\n      for (int i = 0; i &lt; s.size(); i++) {\n        if (s[i] == '(' || s[i] == '[' || s[i] == '{') st.push(i);\n        else {\n          if (st.empty()) return false;\n          if (s[i] == ')' &amp;&amp; s[st.top()] != '(') return false;\n          if (s[i] == '}' &amp;&amp; s[st.top()] != '{') return false;\n          if (s[i] == ']' &amp;&amp; s[st.top()] != '[') return false;\n          st.pop();\n        }\n      }\n      return st.empty();\n    }\n};\n</code></pre> <p>\u5806\u6808\u79d2\u6740</p> <p>\u529b\u6263 no.190\\ \u98a0\u5012\u7ed9\u5b9a\u7684 32 \u4f4d\u65e0\u7b26\u53f7\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u4f4d</p> <pre><code>uint32_t reverseBits(uint32_t n) {\n    uint32_t result = 0;\n    for (int i = 0; i &lt; 32; ++i) {\n        result &lt;&lt;= 1;\n        result |= (n &amp; 1);\n        n &gt;&gt;= 1;\n    }\n    return result;\n}\n</code></pre> <p>\u6b63\u89e3\u662f\u5206\u6cbb</p> <p>\u529b\u6263 no.66\\ \u7ed9\u5b9a\u4e00\u4e2a\u7531\u6574\u6570\u7ec4\u6210\u7684\u975e\u7a7a\u6570\u7ec4\u6240\u8868\u793a\u7684\u975e\u8d1f\u6574\u6570, \u5728\u8be5\u6570\u7684\u57fa\u7840\u4e0a\u52a0\u4e00\\ \u6700\u9ad8\u4f4d\u6570\u5b57\u5b58\u653e\u5728\u6570\u7ec4\u7684\u9996\u4f4d, \u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u53ea\u5b58\u50a8\u5355\u4e2a\u6570\u5b57</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; plusOne(vector&lt;int&gt;&amp; digits) {\n        int l(digits.size());\n        while(l--){\n            if(digits[l]==9){\n                digits[l]=0;\n                continue;\n            }\n            else{\n                digits[l]++;\n                return digits;\n            }\n        }\n        vector&lt;int&gt; ans(digits.size()+1);\n        ans[0]=1;\n        return ans;\n    }\n};\n</code></pre> <p>\u8003\u8651\u6700\u957f 9 \u540e\u7f00</p> <p>\u529b\u6263 no.69\\ \u5b9e\u73b0 <code>int sqrt(int x)</code> \u51fd\u6570</p> <pre><code>class Solution {\npublic:\n    int mySqrt(int x) {\n        int l = 0, r = x, ans = -1;\n        while (l &lt;= r) {\n            int mid = l + (r - l) / 2;\n            if ((long long)mid * mid &lt;= x) {\n                ans = mid;\n                l = mid + 1;\n            } else {\n                r = mid - 1;\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u9644\u4e00\u4e2a\u4e8c\u5206\u6cd5\\ \u8fd8\u6709\u8896\u73cd\u8ba1\u7b97\u5668\u6cd5\u548c\u725b\u987f\u8fed\u4ee3\u6cd5</p> <p>\u529b\u6263 no.50\\ \u5b9e\u73b0 <code>pow(x, n)</code> \u51fd\u6570</p> <pre><code>class Solution {\npublic:\n    double myPow(double x, int n) {\n        if (x == 0) return 0; // \u5982\u679c\u5e95\u6570 x \u4e3a 0, \u5219\u7ed3\u679c\u4e3a 0\n        if (x == 1 || n == 0) return 1; // \u5982\u679c\u5e95\u6570 x \u4e3a 1 \u6216\u8005\u6307\u6570 n \u4e3a 0, \u5219\u7ed3\u679c\u4e3a 1\n        if (x == -1) return n % 2 == 1 ? -1 : 1; // \u5982\u679c\u5e95\u6570 x \u4e3a-1, \u6307\u6570 n \u4e3a\u5947\u6570\u65f6\u7ed3\u679c\u4e3a-1, \u4e3a\u5076\u6570\u65f6\u7ed3\u679c\u4e3a 1\n        if (n &lt; 0) { // \u5982\u679c\u6307\u6570 n \u4e3a\u8d1f\u6570\n            if (n == INT_MIN) { // \u5982\u679c n \u4e3a INT_MIN, \u76f4\u63a5\u53d6\u76f8\u53cd\u6570\u4f1a\u6709\u6ea2\u51fa\u98ce\u9669\n                // \u9700\u8981\u7279\u6b8a\u5904\u7406, \u5148\u8ba1\u7b97 x \u7684 INT_MAX \u6b21\u5e42, \u518d\u4e58\u4ee5 x\n                return 1 / (myPow(x, static_cast&lt;int&gt;(INT_MAX)) * x);\n            }\n            // \u5bf9\u4e8e\u5176\u4ed6\u8d1f\u6307\u6570\u60c5\u51b5, \u8ba1\u7b97\u5176\u5012\u6570\u7684\u6b63\u6307\u6570\u6b21\u5e42\n            return 1 / myPow(x, -n);\n        }\n        // \u5bf9\u4e8e\u6b63\u6307\u6570\u60c5\u51b5, \u8c03\u7528\u9012\u5f52\u51fd\u6570\u8ba1\u7b97 x \u7684 n \u6b21\u5e42\n        return pow_(x, n);\n    }\n\nprivate:\n    double pow_(double x, int n) {\n            double result = 1.0;\n        double current_product = x;\n        while (n &gt; 0) {\n            if (n % 2 == 1) {\n                result *= current_product;\n            }\n            current_product *= current_product;\n            n /= 2;\n        }\n        return result;\n    }\n};\n</code></pre> <p>\u9644\u4e00\u4e2a\u6b63\u89e3\\ \u8fd8\u6709\u9012\u5f52</p> <p>\u529b\u6263 no.172\\ \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570 n, \u8fd4\u56de \\(n!\\) \u7ed3\u679c\u5c3e\u6570\u4e2d\u96f6\u7684\u6570\u91cf</p> <pre><code>class Solution {\npublic:\n    int trailingZeroes(int n) {\n        int ans(0);\n        int a[6]={1, 5, 25, 125, 625, 3125};\n        for(int i(1);i&lt;6;i++){\n            ans+=n/a[i];\n        }\n        return ans;\n    }\n};\n\n//\u6b63\u89e3\nclass Solution {\npublic:\n    int trailingZeroes(int n) {\n        int ans = 0;\n        while (n) {\n            n /= 5;\n            ans += n;\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u6211\u662f\u5c0f\u4e11</p> <p>\u529b\u6263 no.198\\ \u4f60\u662f\u4e00\u4e2a\u4e13\u4e1a\u7684\u5c0f\u5077, \u8ba1\u5212\u5077\u7a83\u6cbf\u8857\u7684\u623f\u5c4b\u6bcf\u95f4\u623f\u5185\u90fd\u85cf\u6709\u4e00\u5b9a\u7684\u73b0\u91d1, \u5f71\u54cd\u4f60\u5077\u7a83\u7684\u552f\u4e00\u5236\u7ea6\u56e0\u7d20\u5c31\u662f\u76f8\u90bb\u7684\u623f\u5c4b\u88c5\u6709\u76f8\u4e92\u8fde\u901a\u7684\u9632\u76d7\u7cfb\u7edf, \u5982\u679c\u4e24\u95f4\u76f8\u90bb\u7684\u623f\u5c4b\u5728\u540c\u4e00\u665a\u4e0a\u88ab\u5c0f\u5077\u95ef\u5165, \u7cfb\u7edf\u4f1a\u81ea\u52a8\u62a5\u8b66\\ \u7ed9\u5b9a\u4e00\u4e2a\u4ee3\u8868\u6bcf\u4e2a\u623f\u5c4b\u5b58\u653e\u91d1\u989d\u7684\u975e\u8d1f\u6574\u6570\u6570\u7ec4, \u8ba1\u7b97\u4f60 \u4e0d\u89e6\u52a8\u8b66\u62a5\u88c5\u7f6e\u7684\u60c5\u51b5\u4e0b, \u4e00\u591c\u4e4b\u5185\u80fd\u591f\u5077\u7a83\u5230\u7684\u6700\u9ad8\u91d1\u989d</p> <pre><code>class Solution {\npublic:\n    int rob(vector&lt;int&gt;&amp; nums) {\n        vector&lt;int&gt; m(nums.size()+1);\n        m[1]=nums[0]; //\u624b\u52a8\u8fdb\u884c\u524d\u4e24\u6b65, \u5c31\u4e0d\u7528\u9884\u7559 m[0], \u4e5f\u4e0d\u7528 size+1\n        for(int i(2);i&lt;nums.size()+1;i++) m[i]=max(m[i-1], m[i-2]+nums[i-1]);\n        return m[nums.size()];\n    }\n};\n</code></pre> <p>\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4, \u5b58\u524d\u4e24\u4f4d, \\(O(1)\\) \u7a7a\u95f4</p> <p>\u529b\u6263 no.162\\ \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums, \u627e\u5230\u5cf0\u503c\u5143\u7d20\u5e76\u8fd4\u56de\u5176\u7d22\u5f15, \u6570\u7ec4\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u5cf0\u503c, \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b, \u8fd4\u56de\u4efb\u4f55\u4e00\u4e2a\u5cf0\u503c\u6240\u5728\u4f4d\u7f6e\u5373\u53ef</p> <pre><code>class Solution {\npublic:\n    int findPeakElement(vector&lt;int&gt;&amp; nums) {\n        if(nums.size()==1) return 0;\n        if(nums.size()==2) return nums[0]&lt;nums[1];\n        int i(nums.size()/2);\n        while(i&gt;0&amp;&amp;i&lt;nums.size()-1){\n            if(nums[i]&gt;nums[i+1]){\n                if(nums[i]&gt;nums[i-1]) return i;\n                else i--;\n            }\n            else i++;\n        }\n        if(!i) return 0;\n        return nums.size()-1;\n    }\n};\n//\u5199\u6210\u4e00\u5768\nclass Solution {\npublic:\n    int findPeakElement(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n\n        // \u8f85\u52a9\u51fd\u6570, \u8f93\u5165\u4e0b\u6807 i, \u8fd4\u56de\u4e00\u4e2a\u4e8c\u5143\u7ec4 (0/1, nums[i])\n        // \u65b9\u4fbf\u5904\u7406 nums[-1] \u4ee5\u53ca nums[n] \u7684\u8fb9\u754c\u60c5\u51b5\n        auto get = [&amp;](int i) -&gt; pair&lt;int, int&gt; {\n            if (i == -1 || i == n) {\n                return {0, 0};\n            }\n            return {1, nums[i]};\n        };\n\n        int left = 0, right = n - 1, ans = -1;\n        while (left &lt;= right) {\n            int mid = (left + right) / 2;\n            if (get(mid - 1) &lt; get(mid) &amp;&amp; get(mid) &gt; get(mid + 1)) {\n                ans = mid;\n                break;\n            }\n            if (get(mid) &lt; get(mid + 1)) {\n                left = mid + 1;\n            }\n            else {\n                right = mid - 1;\n            }\n        }\n        return ans;\n    }\n};\n//\u6b63\u89e3\n</code></pre> <p>\u4e8c\u5206\u67e5\u627e \\(O(logn)\\)</p> <p>\u529b\u6263 no.64\\ \u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u975e\u8d1f\u6574\u6570\u7684 \\(m*n\\) \u7f51\u683c grid, \u8bf7\u627e\u51fa\u4e00\u6761\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7684\u8def\u5f84, \u4f7f\u5f97\u8def\u5f84\u4e0a\u7684\u6570\u5b57\u603b\u548c\u4e3a\u6700\u5c0f</p> <pre><code>class Solution {\npublic:\n    int minPathSum(vector&lt;vector&lt;int&gt;&gt;&amp; grid) {\n        int m(grid.size()), n(grid[0].size());\n        for(int i(1);i&lt;m;i++) grid[i][0]+=grid[i-1][0];\n        for(int i(1);i&lt;n;i++) grid[0][i]+=grid[0][i-1];\n        for(int i(1);i&lt;m;i++)\n            for(int j(1);j&lt;n;j++) grid[i][j]+=min(grid[i-1][j], grid[i][j-1]);\n        return grid[m-1][n-1];\n    }\n};\n</code></pre> <p>\u7b80\u7b80\u5355\u5355\u4e8c\u7ef4\u52a8\u6001\u89c4\u5212</p> <p>\u529b\u6263 no.82\\ \u7ed9\u5b9a\u4e00\u4e2a\u5df2\u6392\u5e8f\u7684\u94fe\u8868\u7684\u5934 head , \u5220\u9664\u6240\u6709\u91cd\u590d\u7684\u5143\u7d20, \u4f7f\u6bcf\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21  \u8fd4\u56de\u5df2\u6392\u5e8f\u7684\u94fe\u8868</p> <pre><code>class Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if(!head||!head-&gt;next) return head;\n        int tmp(0);\n        while(head-&gt;next-&gt;val==head-&gt;val){\n                tmp=head-&gt;val;\n                while(head-&gt;val==tmp) \n                    if(head-&gt;next)head=head-&gt;next;\n                    else return 0;\n                if(!head-&gt;next) return head;\n            }\n        ListNode *h(head), *l(head);\n        while(l-&gt;next){\n            l=l-&gt;next;\n            if(!l-&gt;next) break;\n            while(l-&gt;next-&gt;val==l-&gt;val){\n                tmp=l-&gt;val;\n                while(l-&gt;val==tmp)\n                    if(l-&gt;next) l=l-&gt;next;\n                    else{\n                        h-&gt;next=0;\n                        goto ans;\n                    }\n                h-&gt;next=l;\n                if(!l-&gt;next) break;\n            }\n            h=l;\n        }\n    ans:\n        return head;\n    }\n};\n</code></pre> <p>\u6211\u5199\u7684\u592a\u4e11\u964b\u4e86\\ \u94fe\u8868\u95ee\u9898 head \u4f1a\u6539\u53d8\u8003\u8651\u521b\u5efa\u54d1\u8282\u70b9</p> <p>\u529b\u6263 no.104\\ \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811, \u627e\u51fa\u5176\u6700\u5927\u6df1\u5ea6</p> <pre><code>class Solution {\n    int d(TreeNode* root){\n        if(!root-&gt;left&amp;&amp;!root-&gt;right) return 1;\n        int l(1), r(1);\n        if(root-&gt;left) l+=d(root-&gt;left);\n        if(root-&gt;right) r+=d(root-&gt;right);\n        return max(l, r);\n    }\npublic:\n    int maxDepth(TreeNode* root) {\n        if(!root) return 0;\n        return d(root);\n    }\n};\n//\u6492\u5b50\u8fd9\u4e48\u5199\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        if (root == nullptr) return 0;\n        return max(maxDepth(root-&gt;left), maxDepth(root-&gt;right)) + 1;\n    }\n};\n//\u6b63\u89e3\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        if (root == nullptr) return 0;\n        queue&lt;TreeNode*&gt; Q;\n        Q.push(root);\n        int ans = 0;\n        while (!Q.empty()) {\n            int sz = Q.size();\n            while (sz &gt; 0) {\n                TreeNode* node = Q.front();Q.pop();\n                if (node-&gt;left) Q.push(node-&gt;left);\n                if (node-&gt;right) Q.push(node-&gt;right);\n                sz -= 1;\n            }\n            ans += 1;\n        } \n        return ans;\n    }\n};\n\u5e7f\u5ea6\u4f18\u5148\n</code></pre> <p>\u529b\u6263 no.34\\ \u7ed9\u5b9a\u4e00\u4e2a\u6309\u7167\u5347\u5e8f\u6392\u5217\u7684\u6574\u6570\u6570\u7ec4 nums, \u548c\u4e00\u4e2a\u76ee\u6807\u503c target \u627e\u51fa\u7ed9\u5b9a\u76ee\u6807\u503c\u5728\u6570\u7ec4\u4e2d\u7684\u5f00\u59cb\u4f4d\u7f6e\u548c\u7ed3\u675f\u4f4d\u7f6e, \u5982\u679c\u6570\u7ec4\u4e2d\u4e0d\u5b58\u5728\u76ee\u6807\u503c target, \u8fd4\u56de <code>[1, -1]</code></p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; searchRange(vector&lt;int&gt;&amp; nums, int target) {\n        if(!nums.size()) return (vector&lt;int&gt;){-1, -1};\n        int l(0), r(nums.size()), m(nums.size()/2);\n        vector&lt;int&gt; ans(2);\n        while(nums[m]!=target){\n            if(r-l&lt;=1) return (vector&lt;int&gt;){-1, -1};\n            if(nums[m]&gt;target) r=m;\n            else l=m;\n            m=l+(r-l)/2;\n        }\n        l=r=m;\n        while(l&gt;-1&amp;&amp;nums[l]==target) l--;\n        while(r&lt;nums.size()&amp;&amp;nums[r]==target) r++;\n        ans[0]=l+1;ans[1]=r-1;\n        return ans;\n    }\n};\n</code></pre> <p>\u7b80\u5355\u4e8c\u5206</p> <p>\u529b\u6263 no.19\\ \u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868, \u5220\u9664\u94fe\u8868\u7684\u5012\u6570\u7b2c n \u4e2a\u7ed3\u70b9, \u5e76\u4e14\u8fd4\u56de\u94fe\u8868\u7684\u5934\u7ed3\u70b9</p> <pre><code>class Solution {\npublic:\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        head=new ListNode(0, head);\n        ListNode *s(head), *q(head);\n        for(;n&gt;-1;n--) q=q-&gt;next;\n        while(q){\n            q=q-&gt;next;\n            s=s-&gt;next;\n        }\n        s-&gt;next=s-&gt;next-&gt;next;\n        return head-&gt;next;\n    }\n};\n</code></pre> <p>\u53cc\u6307\u9488\u52a0\u54d1\u8282\u70b9</p> <p>\u529b\u6263 no.92\\ \u7ed9\u4f60\u5355\u94fe\u8868\u7684\u5934\u6307\u9488 head \u548c\u4e24\u4e2a\u6574\u6570 left \u548c right , \u5176\u4e2d <code>left &lt;= right</code>, \u8bf7\u4f60\u53cd\u8f6c\u4ece\u4f4d\u7f6e left \u5230\u4f4d\u7f6e right \u7684\u94fe\u8868\u8282\u70b9, \u8fd4\u56de\u53cd\u8f6c\u540e\u7684\u94fe\u8868</p> <pre><code>class Solution {\npublic:\n    ListNode* reverseBetween(ListNode* h, int l, int r) {\n        if(l==r) return h;\n        r=r-l+1;\n        ListNode* y=new ListNode(0, h);\n        stack&lt;ListNode*&gt; s;\n        ListNode *p(y);\n        while(--l) p=p-&gt;next;\n        h=p;\n        while(r--){\n            p=p-&gt;next;\n            s.push(p);\n        }\n        p=p-&gt;next;\n        while(!s.empty()){\n            h-&gt;next=s.top();\n            s.pop();\n            h=h-&gt;next;\n        }\n        h-&gt;next=p;\n        return y-&gt;next;\n    }\n};\n//\u8111\u5b50\u62bd\u4e86\n//\u6b63\u5e38\u53cd\u8f6c\u5c31\u884c\n</code></pre> <p>\u529b\u6263 no.83\\ \u7ed9\u5b9a\u4e00\u4e2a\u5df2\u6392\u5e8f\u7684\u94fe\u8868\u7684\u5934 head , \u5220\u9664\u6240\u6709\u91cd\u590d\u7684\u5143\u7d20, \u4f7f\u6bcf\u4e2a\u5143\u7d20\u53ea\u51fa\u73b0\u4e00\u6b21, \u8fd4\u56de\u5df2\u6392\u5e8f\u7684\u94fe\u8868</p> <pre><code>class Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if(!head) return head;\n        ListNode* d=new ListNode(0, head);\n        ListNode* y(head);\n        while(y){\n            if(y-&gt;val!=head-&gt;val){\n                head-&gt;next=y;\n                head=y;\n            }\n            y=y-&gt;next;\n        }\n        head-&gt;next=0;\n        return d-&gt;next;\n    }\n};\n</code></pre> <p>\u8d85\u7ea7\u7b80\u5355, \u61d2\u4e00\u5929</p> <p>\u529b\u6263 no.67\\ \u7ed9\u5b9a\u4e24\u4e2a\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 a \u548c b, \u8fd4\u56de\u5b83\u4eec\u7684\u548c (\u7528\u4e8c\u8fdb\u5236\u8868\u793a)</p> <pre><code>class Solution {\npublic:\n    string addBinary(string a, string b) {\n        int l1(a.size()), l2(b.size()), t(0);\n        if(l1&gt;l2) b.insert(0, l1-l2, '0');\n        else a.insert(0, l2-l1, '0');\n        int l(a.size());\n        while(l--){\n            t=a[l]-'0'+b[l]-'0'+t;\n            if(t&gt;1){\n                t-=2;\n                a[l]='0'+t;\n                t=1;\n            }\n            else{\n                a[l]='0'+t;\n                t=0;\n            }\n        }\n        if(t) return a.insert(0, 1, '1');\n        return a;\n    }\n};\n//\u8003\u8651\u7528\u4f4d\u8fd0\u7b97\u4f18\u5316\nclass Solution:\n    def addBinary(self, a, b) -&gt; str:\n        x, y = int(a, 2), int(b, 2)\n        while y:\n            answer = x ^ y\n            carry = (x &amp; y) &lt;&lt; 1\n            x, y = answer, carry\n        return bin(x)[2:]\n</code></pre> <p>\u529b\u6263 no.138\\ \u7ed9\u4f60\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u94fe\u8868, \u6bcf\u4e2a\u8282\u70b9\u5305\u542b\u4e00\u4e2a\u989d\u5916\u589e\u52a0\u7684\u968f\u673a\u6307\u9488 random , \u8be5\u6307\u9488\u53ef\u4ee5\u6307\u5411\u94fe\u8868\u4e2d\u7684\u4efb\u4f55\u8282\u70b9\u6216\u7a7a\u8282\u70b9\\ \u6784\u9020\u8fd9\u4e2a\u94fe\u8868\u7684\u6df1\u62f7\u8d1d</p> <pre><code>class Solution {\npublic:\n    Node* copyRandomList(Node* head) {\n        if(!head) return 0;\n        unordered_map&lt;Node*, Node*&gt; m;\n        Node* h(head);\n        Node* s=new Node(h-&gt;val);\n        m[h]=s;\n        h=h-&gt;next;\n        while(h){\n            Node* q=new Node(h-&gt;val);\n            m[h]=q;\n            s-&gt;next=q;\n            s=q;\n            h=h-&gt;next;\n        }\n        h=head;\n        while(h){\n            if(h-&gt;random)\n                m[h]-&gt;random=m[h-&gt;random];\n            else m[h]-&gt;random=0;\n            h=h-&gt;next;\n        }\n        return m[head];\n    }\n};\n</code></pre> <p>\u672c\u65b9\u6cd5\u53ef\u4ee5\u5728\u7b2c\u4e8c\u4e2a\u5faa\u73af\u4e2d\u94fe\u63a5\u94fe\u8868, \u66f4\u7b80\u6d01\\ \u53ef\u4ee5\u540c\u65f6\u5efa\u7acb\u540e\u7ee7\u4e0e\u968f\u673a, \u54c8\u5e0c\u8bb0\u5f55, \u590d\u6742\u5ea6\u4e00\u6837\\ \u6b63\u89e3\u5efa\u7acb\u65b0\u8282\u70b9\u63d2\u5728\u539f\u94fe\u8868\u8282\u70b9\u540e\u9762 (\u54c8\u5e0c\u5173\u7cfb\u5c31\u662f\u540e\u7ee7), \u518d\u62c6\u5206</p> <p>\u529b\u6263 no.290\\ \u7ed9\u5b9a\u4e00\u79cd\u89c4\u5f8b pattern \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32 s , \u5224\u65ad s \u662f\u5426\u9075\u5faa\u76f8\u540c\u7684\u89c4\u5f8b\\ \u8fd9\u91cc\u7684\u9075\u5faa\u6307\u5b8c\u5168\u5339\u914d, \u4f8b\u5982, pattern \u91cc\u7684\u6bcf\u4e2a\u5b57\u6bcd\u548c\u5b57\u7b26\u4e32 s \u4e2d\u7684\u6bcf\u4e2a\u975e\u7a7a\u5355\u8bcd\u4e4b\u95f4\u5b58\u5728\u7740\u53cc\u5411\u8fde\u63a5\u7684\u5bf9\u5e94\u89c4\u5f8b</p> <pre><code>class Solution {\npublic:\n    bool wordPattern(string pattern, string s) {\n        unordered_map&lt;char, string&gt; p2s;    // pattern \u4e2d\u7684\u5b57\u7b26\u5230 s \u4e2d\u7684\u5b57\u7b26\u5b50\u4e32\u7684\u6620\u5c04\u8868\n        unordered_map&lt;string, char&gt; s2p;    // s \u4e2d\u7684\u5b57\u7b26\u5b57\u4e32\u5230 pattern \u4e2d\u7684\u5b57\u7b26\u7684\u6620\u5c04\u8868\n        int n = pattern.size();\n        int m = s.size();\n        int wordStart = 0;  // \u5355\u8bcd\u7684\u8d77\u70b9\u7d22\u5f15\n        int wordEnd = 0;    // \u5355\u8bcd\u7684\u7ec8\u70b9\u7d22\u5f15(\u8fb9\u754c\u6216\u6307\u5411\u7a7a\u683c), \u4e0d\u5305\u542b\n        char ch;            \n        string word;\n        for(int i = 0; i &lt; n; i++){\n            if(wordStart &gt;= m)return false;     // \u5355\u8bcd\u8d77\u70b9\u5df2\u7ecf\u5230\u8fbe\u8fb9\u754c, \u8bf4\u660e s \u4e2d\u7684\u5355\u8bcd\u904d\u5386\u5b8c\u4e86;\u800c pattern \u7684\u5b57\u7b26\u8fd8\u6709, \u5b57\u7b26\u6570\u91cf\u591a\u4f59\u5355\u8bcd\u6570, \u4e0d\u5339\u914d\n            while(wordEnd &lt; m &amp;&amp; s[wordEnd] != ' ')wordEnd++;   // wordEnd \u53f3\u79fb\u76f4\u5230\u5230\u8fbe s \u8fb9\u754c\u6216\u8005\u5206\u5272\u7684\u7a7a\u683c\n            word = s.substr(wordStart, wordEnd - wordStart);    // \u622a\u53d6\u5355\u8bcd\n            ch = pattern[i];    // \u83b7\u53d6\u5f53\u524d\u5b57\u7b26\n            if((p2s.count(ch) &amp;&amp; p2s[ch] != word) || (s2p.count(word) &amp;&amp; s2p[word] != ch)){\n                // \u5b57\u7b26\u4e0e\u5355\u8bcd\u6ca1\u6709\u4e00\u4e00\u6620\u5c04:\u5373\u5b57\u7b26\u8bb0\u5f55\u7684\u6620\u5c04\u4e0d\u662f\u5f53\u524d\u5355\u8bcd\u6216\u5355\u8bcd\u8bb0\u5f55\u7684\u6620\u5c04\u4e0d\u662f\u5f53\u524d\u5b57\u7b26\n                return false;\n            }\n            // \u66f4\u65b0\u6620\u5c04, \u5df2\u5b58\u5728\u7684\u6620\u5c04\u66f4\u65b0\u540e\u4ecd\u7136\u662f\u4e0d\u53d8\u7684;\u4e0d\u5b58\u5728\u7684\u6620\u5c04\u5c06\u88ab\u52a0\u5165\n            p2s[ch] = word; \n            s2p[word] = ch;\n            // \u66f4\u65b0\u5355\u8bcd\u533a\u95f4, \u8d77\u70b9\u4e3a\u5f53\u524d\u7ec8\u70b9\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e;\u7ec8\u70b9\u521d\u59cb\u4e0e\u8d77\u70b9\u76f8\u540c\n            wordStart = wordEnd + 1;\n            wordEnd = wordStart; \n        }\n        // \u5982\u679c pattern \u904d\u5386\u7ed3\u675f\u540e, \u5b57\u7b26\u4e32 s \u4e5f\u904d\u5386\u7ed3\u675f(\u5373\u5355\u8bcd\u8d77\u70b9\u5230\u8fbe\u4e86\u8fb9\u754c), \u5219\u4e8c\u8005\u5339\u914d;\n        // \u5426\u5219 s \u8fd8\u6709\u5355\u8bcd\u6ca1\u6709\u5339\u914d, \u5b57\u7b26\u6570\u4e0e\u5355\u8bcd\u6570\u4e0d\u5339\u914d\n        return wordStart == m + 1;  \n    }\n};\n</code></pre> <p>\u5c31\u662f\u53cc\u5c04\\ \u5bf9 stl \u4e0d\u719f\u592a\u96be\u53d7\u4e86, \u5982 substr, count \u8fd9\u4e9b\u65b9\u6cd5</p> <p>\u529b\u6263 no.242\\ \u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t , \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad t \u662f\u5426\u662f s \u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd</p> <pre><code>class Solution {\npublic:\n    bool isAnagram(string s, string t) {\n        int m[26]={0}, l(0);\n        if(s.size()==t.size()) l=s.size();\n        else return 0;\n        for(int i(0);i&lt;l;i++){\n            m[s[i]-'a']++;m[t[i]-'a']--;\n        }\n        for(int i(0);i&lt;26;i++){\n            if(m[i]) return 0;\n        }\n        return 1;\n    }\n};\n</code></pre> <p>unicode \u8003\u8651 hashmap</p> <p>\u529b\u6263 no.219\\ \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570 k, \u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u4e24\u4e2a \u4e0d\u540c\u7d22\u5f15 i \u548c j , \u6ee1\u8db3 <code>nums[i] == nums[j]</code> \u4e14 <code>abs (i - j) &lt;= k</code></p> <pre><code>class Solution {\npublic:\n    bool containsNearbyDuplicate(vector&lt;int&gt;&amp; nums, int k) {\n        unordered_map&lt;int, int&gt; m;\n        int l(nums.size());\n        int s(0), i(0);\n        for(;i&lt;l&amp;&amp;i&lt;k;i++){\n            if(m[nums[i]]) return 1;\n            else m[nums[i]]=1;\n        }\n        for(;i&lt;l;i++){\n            if(m[nums[i]]) return 1;\n            else m[nums[i]]=1;\n            m[nums[s++]]=0;\n        }\n        return 0;\n    }\n};\n</code></pre> <p>\u6ed1\u52a8\u7a97\u53e3</p> <p>\u529b\u6263 no.228\\ \u7ed9\u5b9a\u4e00\u4e2a\u65e0\u91cd\u590d\u5143\u7d20\u7684\u6709\u5e8f\u6574\u6570\u6570\u7ec4 nums\\ \u8fd4\u56de\u6070\u597d\u8986\u76d6\u6570\u7ec4\u4e2d\u6240\u6709\u6570\u5b57\u6700\u5c0f\u6709\u5e8f\u533a\u95f4\u8303\u56f4\u5217\u8868\\ nums \u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u6070\u597d\u88ab\u67d0\u4e2a\u533a\u95f4\u8303\u56f4\u6240\u8986\u76d6, \u5e76\u4e14\u4e0d\u5b58\u5728\u5c5e\u4e8e\u67d0\u4e2a\u8303\u56f4\u4f46\u4e0d\u5c5e\u4e8e nums \u7684\u6570\u5b57 x\\ \u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u533a\u95f4\u8303\u56f4 <code>[a, b]</code> \u5e94\u8be5\u6309\u5982\u4e0b\u683c\u5f0f\u8f93\u51fa:\\ \"a-&gt;b\" , \u5982\u679c a != b\\ \"a\" , \u5982\u679c a == b</p> <pre><code>class Solution {\npublic:\n    vector&lt;string&gt; summaryRanges(vector&lt;int&gt;&amp; nums) {\n        string s;\n        vector&lt;string&gt; v;\n        int l(nums.size());\n        for(int i(0);i&lt;l;i++){\n            int b(i);\n            for(int j(nums[i]);i&lt;l&amp;&amp;nums[i]==j;j++){\n                i++;\n                if(nums[i-1]==INT_MAX) break;\n            }\n            if(i-1!=b){\n                s+=to_string(nums[b]);\n                s+=\"-&gt;\";\n                s+=to_string(nums[i-1]);\n                v.push_back(s);\n            }\n            else v.push_back(to_string(nums[b]));\n            s.clear();\n            i--;\n        }\n        return v;\n    }\n};\n</code></pre> <p>\u5988\u7684, \u770b\u89c1\u9898\u89e3\u624d\u610f\u8bc6\u5230 <code>INT_MAX</code> \u4e00\u5b9a\u662f\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u5143\u7d20, \u6240\u4ee5\u4e0d\u7528\u7279\u5224, \u6539\u4e00\u4e0b\u903b\u8f91\u5c31\u597d</p> <p>\u529b\u6263 no.61\\ \u7ed9\u5b9a\u4e00\u4e2a\u94fe\u8868, \u65cb\u8f6c\u94fe\u8868, \u5c06\u94fe\u8868\u6bcf\u4e2a\u8282\u70b9\u5411\u53f3\u79fb\u52a8 k \u4e2a\u4f4d\u7f6e</p> <pre><code>class Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        if(!head) return 0;\n        int l(0);\n        ListNode *h(head), *e(head);\n        while(h){\n            l++;\n            h=h-&gt;next;\n        }\n        k%=l;\n        h=head;\n        while(k--) h=h-&gt;next;\n        while(h-&gt;next){\n            h=h-&gt;next;\n            e=e-&gt;next;\n        }\n        h-&gt;next=head;\n        head=e-&gt;next;\n        e-&gt;next=0;\n        return head;\n    }\n};\n</code></pre> <p>\u529b\u6263 no.15\\ \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums, \u5224\u65ad\u662f\u5426\u5b58\u5728\u4e09\u5143\u7ec4 <code>[nums[i], nums[j], nums[k]]</code> \u6ee1\u8db3 <code>i != j</code> <code>i != k</code> \u4e14 <code>j != k</code>, \u540c\u65f6\u8fd8\u6ee1\u8db3 <code>nums[i] + num[j] + nums[k] == 0</code> \u8bf7\u4f60\u8fd4\u56de\u6240\u6709\u548c\u4e3a 0 \u4e14\u4e0d\u91cd\u590d\u7684\u4e09\u5143\u7ec4</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; threeSum(vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        sort(nums.begin(), nums.end());\n        vector&lt;vector&lt;int&gt;&gt; ans;\n        // \u679a\u4e3e a\n        for (int first = 0; first &lt; n; ++first) {\n            // \u9700\u8981\u548c\u4e0a\u4e00\u6b21\u679a\u4e3e\u7684\u6570\u4e0d\u76f8\u540c\n            if (first &gt; 0 &amp;&amp; nums[first] == nums[first - 1]) {\n                continue;\n            }\n            // c \u5bf9\u5e94\u7684\u6307\u9488\u521d\u59cb\u6307\u5411\u6570\u7ec4\u7684\u6700\u53f3\u7aef\n            int third = n - 1;\n            int target = -nums[first];\n            // \u679a\u4e3e b\n            for (int second = first + 1; second &lt; n; ++second) {\n                // \u9700\u8981\u548c\u4e0a\u4e00\u6b21\u679a\u4e3e\u7684\u6570\u4e0d\u76f8\u540c\n                if (second &gt; first + 1 &amp;&amp; nums[second] == nums[second - 1]) {\n                    continue;\n                }\n                // \u9700\u8981\u4fdd\u8bc1 b \u7684\u6307\u9488\u5728 c \u7684\u6307\u9488\u7684\u5de6\u4fa7\n                while (second &lt; third &amp;&amp; nums[second] + nums[third] &gt; target) {\n                    --third;\n                }\n                // \u5982\u679c\u6307\u9488\u91cd\u5408, \u968f\u7740 b \u540e\u7eed\u7684\u589e\u52a0\n                // \u5c31\u4e0d\u4f1a\u6709\u6ee1\u8db3 a+b+c=0 \u5e76\u4e14 b&lt;c \u7684 c \u4e86, \u53ef\u4ee5\u9000\u51fa\u5faa\u73af\n                if (second == third) {\n                    break;\n                }\n                if (nums[second] + nums[third] == target) {\n                    ans.push_back({nums[first], nums[second], nums[third]});\n                }\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u6392\u5e8f\u52a0\u53cc\u6307\u9488</p> <p>\u529b\u6263 no.100 \u7ed9\u4f60\u4e24\u68f5\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 p \u548c q, \u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u68c0\u9a8c\u8fd9\u4e24\u68f5\u6811\u662f\u5426\u76f8\u540c</p> <pre><code>class Solution {\npublic:\n    bool isSameTree(TreeNode* p, TreeNode* q) {\n        if(!p||!q) return p==q;\n        return isSameTree(p-&gt;left, q-&gt;left)&amp;&amp;isSameTree(p-&gt;right, q-&gt;right)&amp;&amp;p-&gt;val==q-&gt;val;\n    }\n};\n</code></pre> <p>\u9012\u5f52\u5b9e\u73b0 DFS</p> <p>\u529b\u6263 no.226\\ \u7ed9\u4f60\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 root, \u7ffb\u8f6c\u8fd9\u68f5\u4e8c\u53c9\u6811, \u5e76\u8fd4\u56de\u5176\u6839\u8282\u70b9</p> <pre><code>class Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        if(!root) return root;\n        invertTree(root-&gt;left);\n        invertTree(root-&gt;right);\n        TreeNode *t=root-&gt;left;\n        root-&gt;left=root-&gt;right;\n        root-&gt;right=t;\n        return root;\n    }\n};\n</code></pre> <p>\u9012\u5f52\u5b9e\u73b0 DFS</p> <p>\u529b\u6263 no.112\\ \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u548c\u4e00\u4e2a\u76ee\u6807\u548c, \u5224\u65ad\u8be5\u6811\u4e2d\u662f\u5426\u5b58\u5728\u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84, \u8fd9\u6761\u8def\u5f84\u4e0a\u6240\u6709\u8282\u70b9\u503c\u76f8\u52a0\u7b49\u4e8e\u76ee\u6807\u548c</p> <pre><code>class Solution {\npublic:\n    bool hasPathSum(TreeNode* root, int targetSum) {\n        if(!root) return 0;\n        if(targetSum==root-&gt;val&amp;&amp;!root-&gt;left&amp;&amp;!root-&gt;right) return 1;\n        return hasPathSum(root-&gt;left, targetSum-root-&gt;val)||hasPathSum(root-&gt;right, targetSum-root-&gt;val);\n    }\n};\n</code></pre> <p>\u9012\u5f52\u5b9e\u73b0 DFS</p> <p>\u529b\u6263 no.101\\ \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811, \u68c0\u67e5\u5b83\u662f\u5426\u662f\u955c\u50cf\u5bf9\u79f0\u7684</p> <pre><code>class Solution {\npublic:\n    bool isSymmetric(TreeNode* l, TreeNode* r=(TreeNode*)6) {\n        if(r==(TreeNode*)6) return(isSymmetric(l-&gt;left, l-&gt;right));\n        if(!l&amp;&amp;!r) return 1;\n        else if(!l||!r) return 0;\n        else if(l-&gt;val!=r-&gt;val) return 0;\n        return isSymmetric(l-&gt;left, r-&gt;right)&amp;&amp;isSymmetric(l-&gt;right, r-&gt;left);\n    }\n};\n</code></pre> <p>\u9012\u5f52\u5b9e\u73b0 DFS</p> <p>\u529b\u6263 no.102\\ \u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811, \u8fd4\u56de\u5176\u6309\u5c42\u5e8f\u904d\u5386\u5f97\u5230\u7684\u8282\u70b9\u503c</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; levelOrder(TreeNode* root) {\n        vector&lt;vector&lt;int&gt;&gt; ans;\n        queue&lt;TreeNode*&gt; q;\n        q.push(root);\n        short i[2000]={0}, x(0);\n        i[0]++;\n        vector&lt;int&gt; t;\n        while(!q.empty()){\n            i[x]--;\n            TreeNode* r(q.front());q.pop();\n            if(!r) continue;\n            t.push_back(r-&gt;val);\n            if(r-&gt;left){\n                q.push(r-&gt;left);\n                i[x+1]++;\n            }\n            if(r-&gt;right){\n                q.push(r-&gt;right);\n                i[x+1]++;\n            }\n            if(!i[x]){\n                ans.push_back(t);\n                t.clear();\n                x++;\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u8fd9\u662f\u6211\u5199\u7684, \u4e0e\u6b63\u89e3\u7684\u5dee\u8ddd\u4e3b\u8981\u5728\u6211\u8003\u8651\u786e\u5b9a\u6bcf\u5c42\u8282\u70b9\u6570\u91cf\u7684\u65b9\u6cd5\u662f\u52a8\u6001\u8c03\u6574\u4e0d\u540c\u4f4d\u7f6e\u7684\u503c, \u4f46\u65e2\u7136\u4e0d\u540c\u5c42\u4e0d\u76f8\u5e72, \u5c31\u53ef\u4ee5\u5dee\u65f6\u7528\u540c\u4e00\u4e2a\u53d8\u91cf</p> <p>\u529b\u6263 no.637\\ \u7ed9\u5b9a\u4e00\u4e2a\u975e\u7a7a\u4e8c\u53c9\u6811, \u8fd4\u56de\u4e00\u4e2a\u7531\u6bcf\u5c42\u8282\u70b9\u5e73\u5747\u503c\u7ec4\u6210\u7684\u6570\u7ec4</p> <pre><code>class Solution {\npublic:\n    vector&lt;double&gt; averageOfLevels(TreeNode* root) {\n        vector&lt;double&gt; ans;\n        double a(0);\n        queue&lt;TreeNode*&gt; q;\n        q.push(root);\n        while(!q.empty()){\n            int t=q.size();\n            for(int i(t);i&gt;0;i--){\n                TreeNode* r(q.front());q.pop();\n                if(!r){\n                    t--;\n                    continue;\n                }\n                q.push(r-&gt;left);q.push(r-&gt;right);\n                a+=r-&gt;val;\n            }\n            ans.push_back(a/t);\n            a=0;\n            }\n        ans.pop_back();\n        return ans;\n    }\n};\n</code></pre> <p>\u6b64\u5373\u4e0a\u9898\u540c\u601d\u8def\u6b63\u89e3</p> <p>\u529b\u6263 no.6\\ \u5c06\u4e00\u4e2a\u7ed9\u5b9a\u5b57\u7b26\u4e32 s \u6839\u636e\u7ed9\u5b9a\u7684\u884c\u6570 numRows, \u4ee5\u4ece\u4e0a\u5f80\u4e0b\u4ece\u5de6\u5230\u53f3\u8fdb\u884c Z \u5b57\u5f62\u6392\u5217</p> <pre><code>class Solution {\npublic:\n    string convert(string s, int numRows) {\n        int n = s.length(), r = numRows;\n        if (r == 1 || r &gt;= n) {\n            return s;\n        }\n        string ans;\n        int t = r * 2 - 2;\n        for (int i = 0; i &lt; r; ++i) { // \u679a\u4e3e\u77e9\u9635\u7684\u884c\n            for (int j = 0; j + i &lt; n; j += t) { // \u679a\u4e3e\u6bcf\u4e2a\u5468\u671f\u7684\u8d77\u59cb\u4e0b\u6807\n                ans += s[j + i]; // \u5f53\u524d\u5468\u671f\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\n                if (0 &lt; i &amp;&amp; i &lt; r - 1 &amp;&amp; j + t - i &lt; n) {\n                    ans += s[j + t - i]; // \u5f53\u524d\u5468\u671f\u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26\n                }\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u8fd9\u4e48\u7b80\u5355\u90fd\u6ca1\u60f3\u51fa\u6765\\ \u76f4\u63a5\u6a21\u62df\u90fd\u884c\\ \u6b63\u89e3\u5c31\u662f\u627e\u5468\u671f\u89c4\u5f8b (\u5bf9\u4e8e\u6bcf\u884c\u8df3\u5468\u671f, \u52a0\u5468\u671f\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26, \u6709\u5468\u671f\u7684\u7b2c\u4e8c\u4e2a\u5b57\u7b26\u518d\u52a0)</p> <p>\u529b\u6263 no.135\\ n \u4e2a\u5b69\u5b50\u7ad9\u6210\u4e00\u6392 \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ratings \u8868\u793a\u6bcf\u4e2a\u5b69\u5b50\u7684\u8bc4\u5206\\ \u4f60\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u8981\u6c42, \u7ed9\u8fd9\u4e9b\u5b69\u5b50\u5206\u53d1\u7cd6\u679c:\\ \u6bcf\u4e2a\u5b69\u5b50\u81f3\u5c11\u5206\u914d\u5230 1 \u4e2a\u7cd6\u679c\\ \u76f8\u90bb\u4e24\u4e2a\u5b69\u5b50\u8bc4\u5206\u66f4\u9ad8\u7684\u5b69\u5b50\u4f1a\u83b7\u5f97\u66f4\u591a\u7684\u7cd6\u679c\\ \u8bf7\u4f60\u7ed9\u6bcf\u4e2a\u5b69\u5b50\u5206\u53d1\u7cd6\u679c, \u8ba1\u7b97\u5e76\u8fd4\u56de\u9700\u8981\u51c6\u5907\u7684\u6700\u5c11\u7cd6\u679c\u6570\u76ee</p> <pre><code>class Solution {\npublic:\n    int candy(vector&lt;int&gt;&amp; ratings) {\n        vector&lt;int&gt; a(ratings.size(), 1);\n        int l(ratings.size());\n        for(int i(1);i&lt;l;i++){\n            if(ratings[i]&gt;ratings[i-1]) a[i]=a[i-1]+1;\n        }\n        int ans=a[l-1];\n        for(int i(l-2);i&gt;=0;i--){\n            if(ratings[i]&gt;ratings[i+1]&amp;&amp;a[i]&lt;=a[i+1]) a[i]=a[i+1]+1;\n            ans+=a[i];\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u4e24\u6b21\u904d\u5386\u89e3\u51b3\\ \u4f46\u672c\u8d28\u65e0\u9700\u5efa\u7acb\u6570\u7ec4\u518d\u52a0\u548c, \u53ea\u8981\u8bb0\u5f55\u5f53\u524d\u4f4d\u7f6e\u6240\u5728\u7684\u6700\u957f\u5355\u8c03\u5e8f\u5217, \u5373\u53ef\u5728 \\(O(1)\\) \u7a7a\u95f4\u89e3\u51b3</p> <p>\u529b\u6263 no.68\\ \u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u6570\u7ec4 words \u548c\u4e00\u4e2a\u957f\u5ea6 maxWidth, \u91cd\u65b0\u6392\u7248\u5355\u8bcd, \u4f7f\u5176\u6210\u4e3a\u6bcf\u884c\u6070\u597d\u6709 maxWidth \u4e2a\u5b57\u7b26, \u4e14\u5de6\u53f3\u4e24\u7aef\u5bf9\u9f50\u7684\u6587\u672c\\ \u4f60\u5e94\u8be5\u4f7f\u7528\"\u8d2a\u5fc3\u7b97\u6cd5\"\u6765\u653e\u7f6e\u7ed9\u5b9a\u7684\u5355\u8bcd, \u4e5f\u5c31\u662f\u8bf4, \u5c3d\u53ef\u80fd\u591a\u5730\u5f80\u6bcf\u884c\u4e2d\u653e\u7f6e\u5355\u8bcd . \u5fc5\u8981\u65f6\u53ef\u7528\u7a7a\u683c <code>' '</code> \u586b\u5145, \u4f7f\u5f97\u6bcf\u884c\u6070\u597d\u6709 maxWidth \u4e2a\u5b57\u7b26\\ \u8981\u6c42\u5c3d\u53ef\u80fd\u5747\u5300\u5206\u914d\u5355\u8bcd\u95f4\u7684\u7a7a\u683c\u6570\u91cf, \u5982\u679c\u67d0\u4e00\u884c\u5355\u8bcd\u95f4\u7684\u7a7a\u683c\u4e0d\u80fd\u5747\u5300\u5206\u914d, \u5219\u5de6\u4fa7\u653e\u7f6e\u7684\u7a7a\u683c\u6570\u8981\u591a\u4e8e\u53f3\u4fa7\u7684\u7a7a\u683c\u6570\\ \u6587\u672c\u7684\u6700\u540e\u4e00\u884c\u5e94\u4e3a\u5de6\u5bf9\u9f50, \u4e14\u5355\u8bcd\u4e4b\u95f4\u4e0d\u63d2\u5165\u989d\u5916\u7684\u7a7a\u683c\\ \u6ce8\u610f:\\ \u5355\u8bcd\u662f\u6307\u7531\u975e\u7a7a\u683c\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u5e8f\u5217\\ \u6bcf\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u5927\u4e8e 0, \u5c0f\u4e8e\u7b49\u4e8e maxWidth\\ \u8f93\u5165\u5355\u8bcd\u6570\u7ec4 words \u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u5355\u8bcd</p> <pre><code>class Solution {\n    // blank \u8fd4\u56de\u957f\u5ea6\u4e3a n \u7684\u7531\u7a7a\u683c\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\n    string blank(int n) {\n        return string(n, ' ');\n    }\n\n    // join \u8fd4\u56de\u7528 sep \u62fc\u63a5 [left, right) \u8303\u56f4\u5185\u7684 words \u7ec4\u6210\u7684\u5b57\u7b26\u4e32\n    string join(vector&lt;string&gt; &amp;words, int left, int right, string sep) {\n        string s = words[left];\n        for (int i = left + 1; i &lt; right; ++i) {\n            s += sep + words[i];\n        }\n        return s;\n    }\n\npublic:\n    vector&lt;string&gt; fullJustify(vector&lt;string&gt; &amp;words, int maxWidth) {\n        vector&lt;string&gt; ans;\n        int right = 0, n = words.size();\n        while (true) {\n            int left = right; // \u5f53\u524d\u884c\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcd\u5728 words \u7684\u4f4d\u7f6e\n            int sumLen = 0; // \u7edf\u8ba1\u8fd9\u4e00\u884c\u5355\u8bcd\u957f\u5ea6\u4e4b\u548c\n            // \u5faa\u73af\u786e\u5b9a\u5f53\u524d\u884c\u53ef\u4ee5\u653e\u591a\u5c11\u5355\u8bcd, \u6ce8\u610f\u5355\u8bcd\u4e4b\u95f4\u5e94\u81f3\u5c11\u6709\u4e00\u4e2a\u7a7a\u683c\n            while (right &lt; n &amp;&amp; sumLen + words[right].length() + right - left &lt;= maxWidth) {\n                sumLen += words[right++].length();\n            }\n\n            // \u5f53\u524d\u884c\u662f\u6700\u540e\u4e00\u884c:\u5355\u8bcd\u5de6\u5bf9\u9f50, \u4e14\u5355\u8bcd\u4e4b\u95f4\u5e94\u53ea\u6709\u4e00\u4e2a\u7a7a\u683c, \u5728\u884c\u672b\u586b\u5145\u5269\u4f59\u7a7a\u683c\n            if (right == n) {\n                string s = join(words, left, n, \" \");\n                ans.emplace_back(s + blank(maxWidth - s.length()));\n                return ans;\n            }\n\n            int numWords = right - left;\n            int numSpaces = maxWidth - sumLen;\n\n            // \u5f53\u524d\u884c\u53ea\u6709\u4e00\u4e2a\u5355\u8bcd:\u8be5\u5355\u8bcd\u5de6\u5bf9\u9f50, \u5728\u884c\u672b\u586b\u5145\u5269\u4f59\u7a7a\u683c\n            if (numWords == 1) {\n                ans.emplace_back(words[left] + blank(numSpaces));\n                continue;\n            }\n\n            // \u5f53\u524d\u884c\u4e0d\u53ea\u4e00\u4e2a\u5355\u8bcd\n            int avgSpaces = numSpaces / (numWords - 1);\n            int extraSpaces = numSpaces % (numWords - 1);\n            string s1 = join(words, left, left + extraSpaces + 1, blank(avgSpaces + 1)); // \u62fc\u63a5\u989d\u5916\u52a0\u4e00\u4e2a\u7a7a\u683c\u7684\u5355\u8bcd\n            string s2 = join(words, left + extraSpaces + 1, right, blank(avgSpaces)); // \u62fc\u63a5\u5176\u4f59\u5355\u8bcd\n            ans.emplace_back(s1 + blank(avgSpaces) + s2);\n        }\n    }\n};\n</code></pre> <p>\u6392\u7248\u9898, \u7eaf\u6a21\u62df, \u771f\u7684\u70e6\u4eba</p> <p>\u529b\u6263 no.222 \u7ed9\u5b9a\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 root , \u6c42\u51fa\u8be5\u6811\u7684\u8282\u70b9\u4e2a\u6570</p> <pre><code>class Solution {\npublic:\n    int countNodes(TreeNode* root) {\n        if (root == nullptr) {\n            return 0;\n        }\n        int level = 0;\n        TreeNode* node = root;\n        while (node-&gt;left != nullptr) {\n            level++;\n            node = node-&gt;left;\n        }\n        int low = 1 &lt;&lt; level, high = (1 &lt;&lt; (level + 1)) - 1;\n        while (low &lt; high) {\n            int mid = (high - low + 1) / 2 + low;\n            if (exists(root, level, mid)) {\n                low = mid;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return low;\n    }\n\n    bool exists(TreeNode* root, int level, int k) {\n        int bits = 1 &lt;&lt; (level - 1);\n        TreeNode* node = root;\n        while (node != nullptr &amp;&amp; bits &gt; 0) {\n            if (!(bits &amp; k)) {\n                node = node-&gt;left;\n            } else {\n                node = node-&gt;right;\n            }\n            bits &gt;&gt;= 1;\n        }\n        return node != nullptr;\n    }\n};\n</code></pre> <p>\u4f60\u770b\u6211\u591f\u4e0d\u591f 2\\ \u5148\u5411\u5de6\u5230\u5e95\u7b97\u5c42\u6570, \u7136\u540e\u4e8c\u5206\u67e5\u627e\u5c31\u4e00\u4e2a\u8282\u70b9 / \u6ee1\u8282\u70b9 (\u6700\u540e\u4e00\u5c42), \u7528\u4e8c\u8fdb\u5236\u9a8c\u8bc1 (\u5bf9\u4e8e 12 (1100), \u7b2c\u4e00\u4e2a 1 \u4e3a root, \u7136\u540e rll (\u53f3\u5de6\u5de6))</p> <p>\u529b\u6263 no.3\\ \u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 s, \u8bf7\u4f60\u627e\u51fa\u5176\u4e2d\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32\u7684\u957f\u5ea6</p> <pre><code>class Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        if(!s.size()) return 0;\n        int len(s.size()), l(0), r(1), ans(1);\n        bool h[128]={0};\n        h[s[l]]=true;\n        while(r&lt;len){\n            if(!h[s[r]]){\n                ans=max(ans, r-l+1);\n            }\n            else{\n                while(s[l]!=s[r]){\n                    h[s[l]]=false;\n                    l++;\n                }\n                l++;\n            }\n            h[s[r]]=true;r++;\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u6ed1\u52a8\u7a97\u53e3, \u54c8\u5e0c\u8868</p> <p>\u529b\u6263 no.209\\ \u7ed9\u5b9a\u4e00\u4e2a\u542b\u6709 n \u4e2a\u6b63\u6574\u6570\u7684\u6570\u7ec4\u548c\u4e00\u4e2a\u6b63\u6574\u6570 target\\ \u627e\u51fa\u8be5\u6570\u7ec4\u4e2d\u6ee1\u8db3\u5176\u603b\u548c\u5927\u4e8e\u7b49\u4e8e target \u7684\u957f\u5ea6\u6700\u5c0f\u7684 \u5b50\u6570\u7ec4\u5e76\u8fd4\u56de\u5176\u957f\u5ea6\\ \u5982\u679c\u4e0d\u5b58\u5728\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u6570\u7ec4, \u8fd4\u56de 0</p> <pre><code>class Solution {\npublic:\n    int minSubArrayLen(int s, vector&lt;int&gt;&amp; nums) {\n        int n = nums.size();\n        if (n == 0) {\n            return 0;\n        }\n        int ans = INT_MAX;\n        int start = 0, end = 0;\n        int sum = 0;\n        while (end &lt; n) {\n            sum += nums[end];\n            while (sum &gt;= s) {\n                ans = min(ans, end - start + 1);\n                sum -= nums[start];\n                start++;\n            }\n            end++;\n        }\n        return ans == INT_MAX ? 0 : ans;\n    }\n};\n</code></pre> <p>\u6ed1\u52a8\u7a97\u53e3</p> <p>\u529b\u6263 no.128\\ \u7ed9\u5b9a\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6574\u6570\u6570\u7ec4 nums, \u627e\u51fa\u6570\u5b57\u8fde\u7eed\u7684\u6700\u957f\u5e8f\u5217 (\u4e0d\u8981\u6c42\u5e8f\u5217\u5143\u7d20\u5728\u539f\u6570\u7ec4\u4e2d\u8fde\u7eed) \u7684\u957f\u5ea6</p> <pre><code>class Solution {\npublic:\n    int longestConsecutive(vector&lt;int&gt;&amp; nums) {\n        int n(0), t(0), ans(0), l(nums.size());\n        map&lt;int, bool&gt; m;\n        for(int i(0);i&lt;l;i++){\n            m[nums[i]]=1;\n        }\n        for(int i(0);i&lt;l;i++){\n            if(m[nums[i]]&amp;&amp;!m[nums[i]-1]){\n                int at=nums[i];\n                while(m[t++]){\n                    m[t-1]=0;\n                    n++;\n                }\n                ans=max(ans, n);\n                n=0;\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u68c0\u67e5 <code>nums[i-1]</code> \u4ee5\u786e\u5b9a\u662f\u5426\u4e3a\u5408\u6cd5\u8d77\u70b9, \u907f\u514d\u91cd\u590d\u68c0\u67e5\\ \u6ce8\u610f\u8fb9\u68c0\u67e5\u8fb9\u5220\u9664\u66f4\u5feb, \u6211\u7528\u602a\u65b9\u6cd5 map, \u5b98\u65b9\u7528\u7684\u662f <code>unordered_set</code> \u66f4\u597d\\ \u8349, \u624d\u77e5\u9053 map \u7684\u5b9e\u73b0\u662f\u7ea2\u9ed1\u6811, \u6bd4 <code>unordered_set</code> \u6162\u5f88\u591a</p> <p>\u529b\u6263 no.300\\ \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums , \u627e\u5230\u5176\u4e2d\u6700\u957f\u4e25\u683c\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6</p> <pre><code>class Solution {\npublic:\n    int lengthOfLIS(vector&lt;int&gt;&amp; nums) {\n        int l(nums.size()), ans(1);\n        vector&lt;int&gt; dp(l);\n        dp[0]=1;\n        for(int i(1);i&lt;l;i++){\n                int t(1);\n                for(int j(0);j&lt;i;j++){\n                    if(nums[i]&gt;nums[j]) t=max(dp[j]+1, t);\n                }\n                dp[i]=t;\n                ans=max(ans, t);\n                t=1;\n            }\n        return ans;\n    }\n};\n</code></pre> <p>\u7b80\u5355 dp</p> <p>\u529b\u6263 no.36\\ \u8bf7\u4f60\u5224\u65ad\u4e00\u4e2a 9 x 9 \u7684\u6570\u72ec\u662f\u5426\u6709\u6548\\ \u9a8c\u8bc1\u5df2\u7ecf\u586b\u5165\u7684\u6570\u5b57\u662f\u5426\u6709\u6548\u5373\u53ef</p> <pre><code>class Solution {\npublic:\n    bool isValidSudoku(vector&lt;vector&lt;char&gt;&gt;&amp; board) {\n        int v1[9][10]={0}, v2[9][10]={0}, v3[9][10]={0};\n        for(int i(0);i&lt;9;i++)\n            for(int j(0);j&lt;9;j++){\n                if(board[i][j]=='.') continue;\n                int t=board[i][j]-'0';\n                if(v1[i][t]) return 0;\n                else v1[i][t]=1;\n                if(v2[j][t]) return 0;\n                else v2[j][t]=1;\n                if(v3[i/3*3+j/3][t]) return 0;\n                else v3[i/3*3+j/3][t]=1;\n            }\n            return 1;\n    }\n};\n</code></pre> <p>\u54c8\u5e0c\u8868</p> <p>\u529b\u6263 no.54\\ \u7ed9\u4f60\u4e00\u4e2a m \u884c n \u5217\u7684\u77e9\u9635 matrix , \u8bf7\u6309\u7167\u987a\u65f6\u9488\u87ba\u65cb\u987a\u5e8f, \u8fd4\u56de\u77e9\u9635\u4e2d\u7684\u6240\u6709\u5143\u7d20</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; spiralOrder(vector&lt;vector&lt;int&gt;&gt;&amp; matrix) {\n        if (matrix.size() == 0 || matrix[0].size() == 0) {\n            return {};\n        }\n\n        int rows = matrix.size(), columns = matrix[0].size();\n        vector&lt;int&gt; order;\n        int left = 0, right = columns - 1, top = 0, bottom = rows - 1;\n        while (left &lt;= right &amp;&amp; top &lt;= bottom) {\n            for (int column = left; column &lt;= right; column++) {\n                order.push_back(matrix[top][column]);\n            }\n            for (int row = top + 1; row &lt;= bottom; row++) {\n                order.push_back(matrix[row][right]);\n            }\n            if (left &lt; right &amp;&amp; top &lt; bottom) {\n                for (int column = right - 1; column &gt; left; column--) {\n                    order.push_back(matrix[bottom][column]);\n                }\n                for (int row = bottom; row &gt; top; row--) {\n                    order.push_back(matrix[row][left]);\n                }\n            }\n            left++;\n            right--;\n            top++;\n            bottom--;\n        }\n        return order;\n    }\n};\n</code></pre> <p>\u6a21\u62df\u53ef\u4ee5, \u4f46\u662f\u7528\u54c8\u5e0c\u8868\u5360\u7a7a\u95f4\\ \u5173\u4e8e\u65b9\u5411\u7684\u6539\u53d8, \u7528\u65b9\u5411\u7d22\u5f15\u6570\u7ec4 (\u4e0d\u540c\u65b9\u5411\u5c31\u662f ij \u52a0\u7684\u503c\u4e0d\u540c) \u5373\u53ef, \u6211\u662f\u50bb\u5b50, \u7528\u72b6\u6001\u673a\\ \u6700\u4f18\u662f\u6309\u5c42 (\u5185\u5916) \u904d\u5386, \u6709\u5206\u6cbb\u9012\u5f52\u7684\u610f\u601d</p> <p>\u529b\u6263 no.139\\ \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868 wordDict \u4f5c\u4e3a\u5b57\u5178\\ \u8bf7\u4f60\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5229\u7528\u5b57\u5178\u4e2d\u51fa\u73b0\u7684\u5355\u8bcd\u62fc\u63a5\u51fa s</p> <pre><code>class Solution {\npublic:\n    bool wordBreak(string s, vector&lt;string&gt;&amp; wordDict) {\n        auto wordDictSet = unordered_set &lt;string&gt; ();\n        for (auto word: wordDict) {\n            wordDictSet.insert(word);\n        }\n\n        auto dp = vector &lt;bool&gt; (s.size() + 1);\n        dp[0] = true;\n        for (int i = 1; i &lt;= s.size(); ++i) {\n            for (int j = 0; j &lt; i; ++j) {\n                if (dp[j] &amp;&amp; wordDictSet.find(s.substr(j, i - j)) != wordDictSet.end()) {\n                    dp[i] = true;\n                    break;\n                }\n            }\n        }\n\n        return dp[s.size()];\n    }\n};\n</code></pre> <p>\u52a8\u6001\u89c4\u5212, \u7528 <code>dp[i]</code> \u8868\u793a s \u7684\u524d i \u4e2a\u5b57\u7b26\u80fd\u5426\u88ab wordDict \u4e2d\u7684\u5355\u8bcd\u8868\u793a\\ \u8f6c\u79fb\u65b9\u7a0b:<code>dp[i]=dp[j]&amp;&amp;check(s[j+1, i])</code>\\ <code>check(s[j+1, i])</code> \u8868\u793a <code>s[j+1, i]</code> \u662f\u5426\u51fa\u73b0\u5728\u5b57\u5178\u4e2d</p> <p>\u529b\u6263 no.322\\ \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 coins, \u8868\u793a\u4e0d\u540c\u9762\u989d\u7684\u786c\u5e01, \u4ee5\u53ca\u4e00\u4e2a\u6574\u6570 amount , \u8868\u793a\u603b\u91d1\u989d\\ \u8ba1\u7b97\u5e76\u8fd4\u56de\u53ef\u4ee5\u51d1\u6210\u603b\u91d1\u989d\u6240\u9700\u7684, \u6700\u5c11\u7684\u786c\u5e01\u4e2a\u6570\\ \u5982\u679c\u6ca1\u6709\u4efb\u4f55\u4e00\u79cd\u786c\u5e01\u7ec4\u5408\u80fd\u7ec4\u6210\u603b\u91d1\u989d, \u8fd4\u56de -1</p> <pre><code>class Solution {\n    vector&lt;int&gt;count;\n    int dp(vector&lt;int&gt;&amp; coins, int rem) {\n        if (rem &lt; 0) return -1;\n        if (rem == 0) return 0;\n        if (count[rem - 1] != 0) return count[rem - 1];\n        int Min = INT_MAX;\n        for (int coin:coins) {\n            int res = dp(coins, rem - coin);\n            if (res &gt;= 0 &amp;&amp; res &lt; Min) {\n                Min = res + 1;\n            }\n        }\n        count[rem - 1] = Min == INT_MAX ? -1 : Min;\n        return count[rem - 1];\n    }\npublic:\n    int coinChange(vector&lt;int&gt;&amp; coins, int amount) {\n        if (amount &lt; 1) return 0;\n        count.resize(amount);\n        return dp(coins, amount);\n    }\n};\n// \u7b2c\u4e00\u79cd\u65b9\u6cd5, \u9012\u5f52\u641c\u7d22\u6240\u6709\u53ef\u80fd, \u5229\u7528\u6570\u7ec4\u8bb0\u5fc6\u6700\u4f18\u89e3\u4f18\u5316\u65f6\u95f4\n\nclass Solution {\npublic:\n    int coinChange(vector&lt;int&gt;&amp; coins, int amount) {\n        int Max = amount + 1;\n        vector&lt;int&gt; dp(amount + 1, Max);\n        dp[0] = 0;\n        for (int i = 1; i &lt;= amount; ++i) {\n            for (int j = 0; j &lt; (int)coins.size(); ++j) {\n                if (coins[j] &lt;= i) {\n                    dp[i] = min(dp[i], dp[i - coins[j]] + 1);\n                }\n            }\n        }\n        return dp[amount] &gt; amount ? -1 : dp[amount];\n    }\n};\n// \u7b2c\u4e8c\u79cd\u65b9\u6cd5, \u52a8\u6001\u89c4\u5212, \u8f6c\u79fb\u65b9\u7a0b for coins dp[i]=min(dp[i], dp[i-coin]+1)\n</code></pre> <p>\u529b\u6263 no.49\\ \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4, \u8bf7\u4f60\u5c06\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u7ec4\u5408\u5728\u4e00\u8d77, \u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7ed3\u679c\u5217\u8868\\ \u5b57\u6bcd\u5f02\u4f4d\u8bcd\u662f\u7531\u91cd\u65b0\u6392\u5217\u6e90\u5355\u8bcd\u7684\u6240\u6709\u5b57\u6bcd\u5f97\u5230\u7684\u4e00\u4e2a\u65b0\u5355\u8bcd</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;string&gt;&gt; groupAnagrams(vector&lt;string&gt;&amp; strs) {\n        unordered_map&lt;string, vector&lt;string&gt;&gt; mp;\n        for (string&amp; str: strs) {\n            string key = str;\n            sort(key.begin(), key.end());\n            mp[key].emplace_back(str);\n        }\n        vector&lt;vector&lt;string&gt;&gt; ans;\n        for (auto it = mp.begin(); it != mp.end(); ++it) {\n            ans.emplace_back(it-&gt;second);\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u7b80\u5355\u7684\u54c8\u5e0c\u8868, \u5173\u952e\u5728\u4e8e\u952e\u7684\u5f62\u5f0f\\ \u4f7f\u7528\u5355\u8bcd\u7684\u6392\u5e8f\u4f5c\u4e3a\u952e, \u53ef\u4ee5\u4fdd\u8bc1\u5f02\u4f4d\u8bcd\u7684\u952e\u76f8\u540c\\ \u4e5f\u53ef\u4ee5\u7528\u6570\u7ec4\u4f5c\u4e3a\u952e, \u56e0\u4e3a\u53ea\u6709 26 \u4e2a\u5b57\u6bcd (\u5c0f\u54c8\u5e0c\u8868)</p> <p>\u529b\u6263 no.48\\ \u7ed9\u4f60\u4e00\u4e2a n x n \u7684\u4e8c\u7ef4\u77e9\u9635 matrix \u8868\u793a\u4e00\u4e2a\u56fe\u50cf, \u8bf7\u4f60\u5c06\u56fe\u50cf\u987a\u65f6\u9488\u65cb\u8f6c 90 \u5ea6</p> <pre><code>class Solution {\npublic:\n    void rotate(vector&lt;vector&lt;int&gt;&gt;&amp; matrix) {\n        int l(matrix.size());\n        for(int i(0);i&lt;l;i++){\n            reverse(matrix[i].begin(), matrix[i].end());\n        }\n        for(int i(0);i&lt;l;i++)\n            for(int j(0);j&lt;l-i-1;j++){\n                int t=matrix[i][j];\n                int d=l-1-i-j;\n                matrix[i][j]=matrix[i+d][j+d];\n                matrix[i+d][j+d]=t;\n            }\n        return;\n    }\n};\n</code></pre> <p>\u5148\u53cd\u8f6c, \u518d\u5bf9\u89d2\u7ebf\u4ea4\u6362, \u6b63\u89e3\\ \u8fd8\u53ef\u4ee5\u6a21\u62df\u65cb\u8f6c\u4fdd\u5b58 tmp (\u6bcf\u56db\u4e2a\u4e00\u7ec4, \u679a\u4e3e\u6bcf\u7ec4)</p> <p>\u529b\u6263 no.289\\ \u751f\u547d\u6e38\u620f</p> <pre><code>class Solution {\npublic:\n    void gameOfLife(vector&lt;vector&lt;int&gt;&gt;&amp; board) {\n        int neighbors[3] = {0, 1, -1};\n\n        int rows = board.size();\n        int cols = board[0].size();\n\n        // \u904d\u5386\u9762\u677f\u6bcf\u4e00\u4e2a\u683c\u5b50\u91cc\u7684\u7ec6\u80de\n        for (int row = 0; row &lt; rows; row++) {\n            for (int col = 0; col &lt; cols; col++) {\n\n                // \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7ec6\u80de\u7edf\u8ba1\u5176\u516b\u4e2a\u76f8\u90bb\u4f4d\u7f6e\u91cc\u7684\u6d3b\u7ec6\u80de\u6570\u91cf\n                int liveNeighbors = 0;\n\n                for (int i = 0; i &lt; 3; i++) {\n                    for (int j = 0; j &lt; 3; j++) {\n\n                        if (!(neighbors[i] == 0 &amp;&amp; neighbors[j] == 0)) {\n                            // \u76f8\u90bb\u4f4d\u7f6e\u7684\u5750\u6807\n                            int r = (row + neighbors[i]);\n                            int c = (col + neighbors[j]);\n\n                            // \u67e5\u770b\u76f8\u90bb\u7684\u7ec6\u80de\u662f\u5426\u662f\u6d3b\u7ec6\u80de\n                            if ((r &lt; rows &amp;&amp; r &gt;= 0) &amp;&amp; (c &lt; cols &amp;&amp; c &gt;= 0) &amp;&amp; (abs(board[r][c]) == 1)) {\n                                liveNeighbors += 1;\n                            }\n                        }\n                    }\n                }\n\n                // \u89c4\u5219 1 \u6216\u89c4\u5219 3 \n                if ((board[row][col] == 1) &amp;&amp; (liveNeighbors &lt; 2 || liveNeighbors &gt; 3)) {\n                    // -1 \u4ee3\u8868\u8fd9\u4e2a\u7ec6\u80de\u8fc7\u53bb\u662f\u6d3b\u7684\u73b0\u5728\u6b7b\u4e86\n                    board[row][col] = -1;\n                }\n                // \u89c4\u5219 4\n                if (board[row][col] == 0 &amp;&amp; liveNeighbors == 3) {\n                    // 2 \u4ee3\u8868\u8fd9\u4e2a\u7ec6\u80de\u8fc7\u53bb\u662f\u6b7b\u7684\u73b0\u5728\u6d3b\u4e86\n                    board[row][col] = 2;\n                }\n            }\n        }\n\n        // \u904d\u5386 board \u5f97\u5230\u4e00\u6b21\u66f4\u65b0\u540e\u7684\u72b6\u6001\n        for (int row = 0; row &lt; rows; row++) {\n            for (int col = 0; col &lt; cols; col++) {\n                if (board[row][col] &gt; 0) {\n                    board[row][col] = 1;\n                } else {\n                    board[row][col] = 0;\n                }\n            }\n        }\n    }\n};\n</code></pre> <p>\u6a21\u62df\u5c31\u4e0d\u591a\u8bf4\u4e86\\ \u91cd\u70b9\u662f\u5bf9\u4e8e int \u6570\u7ec4\u53ef\u4ee5\u7528\u5176\u5b83\u503c\u6807\u8bb0\u590d\u5408\u72b6\u6001\u5b9e\u73b0 \\(O(1)\\) \u7a7a\u95f4</p> <p>\u529b\u6263 no.73\\ \u7ed9\u5b9a\u4e00\u4e2a m x n \u7684\u77e9\u9635, \u5982\u679c\u4e00\u4e2a\u5143\u7d20\u4e3a 0 , \u5219\u5c06\u5176\u6240\u5728\u884c\u548c\u5217\u7684\u6240\u6709\u5143\u7d20\u90fd\u8bbe\u4e3a 0, \u8bf7\u4f7f\u7528 \u539f\u5730 \u7b97\u6cd5</p> <pre><code>class Solution {\npublic:\n    void setZeroes(vector&lt;vector&lt;int&gt;&gt;&amp; matrix) {\n        int m = matrix.size();\n        int n = matrix[0].size();\n        int flag_col0 = false;\n        for (int i = 0; i &lt; m; i++) {\n            if (!matrix[i][0]) {\n                flag_col0 = true;\n            }\n            for (int j = 1; j &lt; n; j++) {\n                if (!matrix[i][j]) {\n                    matrix[i][0] = matrix[0][j] = 0;\n                }\n            }\n        }\n        for (int i = m - 1; i &gt;= 0; i--) {\n            for (int j = 1; j &lt; n; j++) {\n                if (!matrix[i][0] || !matrix[0][j]) {\n                    matrix[i][j] = 0;\n                }\n            }\n            if (flag_col0) {\n                matrix[i][0] = 0;\n            }\n        }\n    }\n};\n</code></pre> <p>\u6807\u8bb0\u7b2c\u4e00\u5217\u662f\u5426\u6709 0, \u7136\u540e\u7528\u7b2c\u4e00\u5217\u6807\u8bb0\u5176\u4ed6\u884c\u5217\u662f\u5426\u6709 0 (\u6ce8\u610f\u5012\u7f6e\u5904\u7406\u77e9\u9635)</p> <p>\u529b\u6263 no.86\\ \u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9 head \u548c\u4e00\u4e2a\u7279\u5b9a\u503c x , \u8bf7\u4f60\u5bf9\u94fe\u8868\u8fdb\u884c\u5206\u9694, \u4f7f\u5f97\u6240\u6709 \u5c0f\u4e8e x \u7684\u8282\u70b9\u90fd\u51fa\u73b0\u5728\u5927\u4e8e\u6216\u7b49\u4e8e x \u7684\u8282\u70b9\u4e4b\u524d\\ \u4f60\u5e94\u5f53\u4fdd\u7559\u4e24\u4e2a\u5206\u533a\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684\u521d\u59cb\u76f8\u5bf9\u4f4d\u7f6e</p> <pre><code>class Solution {\npublic:\n    ListNode* partition(ListNode* head, int x) {\n        ListNode* small = new ListNode(0);\n        ListNode* smallHead = small;\n        ListNode* large = new ListNode(0);\n        ListNode* largeHead = large;\n        while (head != nullptr) {\n            if (head-&gt;val &lt; x) {\n                small-&gt;next = head;\n                small = small-&gt;next;\n            } else {\n                large-&gt;next = head;\n                large = large-&gt;next;\n            }\n            head = head-&gt;next;\n        }\n        large-&gt;next = nullptr;\n        small-&gt;next = largeHead-&gt;next;\n        return smallHead-&gt;next;\n    }\n};\n</code></pre> <p>\u7b80\u5355\u7684\u94fe\u8868\u9898, \u7528\u4e24\u4e2a\u94fe\u8868\u5206\u522b\u5b58\u50a8\u5c0f\u4e8e x \u548c\u5927\u4e8e\u7b49\u4e8e x \u7684\u8282\u70b9, \u6700\u540e\u5408\u5e76</p> <p>\u529b\u6263 no.146\\ \u5b9e\u73b0 LUR \u7f13\u5b58</p> <pre><code>struct DLinkedNode {\n    int key, value;\n    DLinkedNode* prev;\n    DLinkedNode* next;\n    DLinkedNode(): key(0), value(0), prev(nullptr), next(nullptr) {}\n    DLinkedNode(int _key, int _value): key(_key), value(_value), prev(nullptr), next(nullptr) {}\n};\n\nclass LRUCache {\nprivate:\n    unordered_map&lt;int, DLinkedNode*&gt; cache;\n    DLinkedNode* head;\n    DLinkedNode* tail;\n    int size;\n    int capacity;\n\npublic:\n    LRUCache(int _capacity): capacity(_capacity), size(0) {\n        // \u4f7f\u7528\u4f2a\u5934\u90e8\u548c\u4f2a\u5c3e\u90e8\u8282\u70b9\n        head = new DLinkedNode();\n        tail = new DLinkedNode();\n        head-&gt;next = tail;\n        tail-&gt;prev = head;\n    }\n\n    int get(int key) {\n        if (!cache.count(key)) {\n            return -1;\n        }\n        // \u5982\u679c key \u5b58\u5728, \u5148\u901a\u8fc7\u54c8\u5e0c\u8868\u5b9a\u4f4d, \u518d\u79fb\u5230\u5934\u90e8\n        DLinkedNode* node = cache[key];\n        moveToHead(node);\n        return node-&gt;value;\n    }\n\n    void put(int key, int value) {\n        if (!cache.count(key)) {\n            // \u5982\u679c key \u4e0d\u5b58\u5728, \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8282\u70b9\n            DLinkedNode* node = new DLinkedNode(key, value);\n            // \u6dfb\u52a0\u8fdb\u54c8\u5e0c\u8868\n            cache[key] = node;\n            // \u6dfb\u52a0\u81f3\u53cc\u5411\u94fe\u8868\u7684\u5934\u90e8\n            addToHead(node);\n            ++size;\n            if (size &gt; capacity) {\n                // \u5982\u679c\u8d85\u51fa\u5bb9\u91cf, \u5220\u9664\u53cc\u5411\u94fe\u8868\u7684\u5c3e\u90e8\u8282\u70b9\n                DLinkedNode* removed = removeTail();\n                // \u5220\u9664\u54c8\u5e0c\u8868\u4e2d\u5bf9\u5e94\u7684\u9879\n                cache.erase(removed-&gt;key);\n                // \u9632\u6b62\u5185\u5b58\u6cc4\u6f0f\n                delete removed;\n                --size;\n            }\n        }\n        else {\n            // \u5982\u679c key \u5b58\u5728, \u5148\u901a\u8fc7\u54c8\u5e0c\u8868\u5b9a\u4f4d, \u518d\u4fee\u6539 value, \u5e76\u79fb\u5230\u5934\u90e8\n            DLinkedNode* node = cache[key];\n            node-&gt;value = value;\n            moveToHead(node);\n        }\n    }\n\n    void addToHead(DLinkedNode* node) {\n        node-&gt;prev = head;\n        node-&gt;next = head-&gt;next;\n        head-&gt;next-&gt;prev = node;\n        head-&gt;next = node;\n    }\n\n    void removeNode(DLinkedNode* node) {\n        node-&gt;prev-&gt;next = node-&gt;next;\n        node-&gt;next-&gt;prev = node-&gt;prev;\n    }\n\n    void moveToHead(DLinkedNode* node) {\n        removeNode(node);\n        addToHead(node);\n    }\n\n    DLinkedNode* removeTail() {\n        DLinkedNode* node = tail-&gt;prev;\n        removeNode(node);\n        return node;\n    }\n};\n</code></pre> <p>\u5229\u7528\u54c8\u5e0c\u8868 + \u53cc\u5411\u94fe\u8868\u5b9e\u73b0 \\(O(1)\\) \u7684\u67e5\u627e\u548c\u4fee\u6539\\ \u5efa\u7acb key \u4e0e\u8282\u70b9\u7684\u54c8\u5e0c\u8868, \u7528\u53cc\u5411\u94fe\u8868\u7ef4\u62a4\u8282\u70b9\u7684\u987a\u5e8f\u5b9e\u73b0\u7f13\u5b58</p> <p>\u529b\u6263 no.56\\ \u4ee5\u6570\u7ec4 intervals \u8868\u793a\u82e5\u5e72\u4e2a\u533a\u95f4\u7684\u96c6\u5408, \u5176\u4e2d\u5355\u4e2a\u533a\u95f4\u4e3a <code>intervals[i] == [starti, endi]</code> \u8bf7\u4f60\u5408\u5e76\u6240\u6709\u91cd\u53e0\u7684\u533a\u95f4, \u5e76\u8fd4\u56de\u4e00\u4e2a\u4e0d\u91cd\u53e0\u7684\u533a\u95f4\u6570\u7ec4, \u8be5\u6570\u7ec4\u9700\u6070\u597d\u8986\u76d6\u8f93\u5165\u4e2d\u7684\u6240\u6709\u533a\u95f4</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; merge(vector&lt;vector&lt;int&gt;&gt;&amp; intervals) {\n        if (intervals.size() == 0) {\n            return {};\n        }\n        sort(intervals.begin(), intervals.end());\n        vector&lt;vector&lt;int&gt;&gt; merged;\n        for (int i = 0; i &lt; intervals.size(); ++i) {\n            int L = intervals[i][0], R = intervals[i][1];\n            if (!merged.size() || merged.back()[1] &lt; L) {\n                merged.push_back({L, R});\n            }\n            else {\n                merged.back()[1] = max(merged.back()[1], R);\n            }\n        }\n        return merged;\n    }\n};\n</code></pre> <p>\u6392\u5e8f\u540e\u5408\u5e76\u5373\u53ef</p> <p>\u529b\u6263 no.57\\ \u7ed9\u4f60\u4e00\u4e2a\u65e0\u91cd\u53e0\u7684, \u6309\u7167\u533a\u95f4\u8d77\u59cb\u7aef\u70b9\u6392\u5e8f\u7684\u533a\u95f4\u5217\u8868 intervals, \u5176\u4e2d <code>intervals[i] == [starti, endi]</code> \u8868\u793a\u7b2c i \u4e2a\u533a\u95f4\u7684\u5f00\u59cb\u548c\u7ed3\u675f, \u5e76\u4e14 intervals \u6309\u7167 starti \u5347\u5e8f\u6392\u5217, \u540c\u6837\u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4 <code>newInterval = [start, end]</code> \u8868\u793a\u53e6\u4e00\u4e2a\u533a\u95f4\u7684\u5f00\u59cb\u548c\u7ed3\u675f\\ \u5728 intervals \u4e2d\u63d2\u5165\u533a\u95f4 newInterval, \u4f7f\u5f97 intervals \u4f9d\u7136\u6309\u7167 starti \u5347\u5e8f\u6392\u5217, \u4e14\u533a\u95f4\u4e4b\u95f4\u4e0d\u91cd\u53e0 (\u5982\u679c\u6709\u5fc5\u8981\u7684\u8bdd, \u53ef\u4ee5\u5408\u5e76\u533a\u95f4)\\ \u8fd4\u56de\u63d2\u5165\u4e4b\u540e\u7684 intervals\\ \u6ce8\u610f \u4f60\u4e0d\u9700\u8981\u539f\u5730\u4fee\u6539 intervals, \u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u6570\u7ec4\u7136\u540e\u8fd4\u56de\u5b83</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; insert(vector&lt;vector&lt;int&gt;&gt;&amp; intervals, vector&lt;int&gt;&amp; newInterval) {\n        int left = newInterval[0];\n        int right = newInterval[1];\n        bool placed = false;\n        vector&lt;vector&lt;int&gt;&gt; ans;\n        for (const auto&amp; interval: intervals) {\n            if (interval[0] &gt; right) {\n                // \u5728\u63d2\u5165\u533a\u95f4\u7684\u53f3\u4fa7\u4e14\u65e0\u4ea4\u96c6\n                if (!placed) {\n                    ans.push_back({left, right});\n                    placed = true;                    \n                }\n                ans.push_back(interval);\n            }\n            else if (interval[1] &lt; left) {\n                // \u5728\u63d2\u5165\u533a\u95f4\u7684\u5de6\u4fa7\u4e14\u65e0\u4ea4\u96c6\n                ans.push_back(interval);\n            }\n            else {\n                // \u4e0e\u63d2\u5165\u533a\u95f4\u6709\u4ea4\u96c6, \u8ba1\u7b97\u5b83\u4eec\u7684\u5e76\u96c6\n                left = min(left, interval[0]);\n                right = max(right, interval[1]);\n            }\n        }\n        if (!placed) {\n            ans.push_back({left, right});\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u533a\u95f4\u9898\u57fa\u7840</p> <p>\u529b\u6263 no.452\\ \u6709\u4e00\u4e9b\u7403\u5f62\u6c14\u7403\u8d34\u5728\u4e00\u5835\u7528 XY \u5e73\u9762\u8868\u793a\u7684\u5899\u9762\u4e0a, \u5899\u9762\u4e0a\u7684\u6c14\u7403\u8bb0\u5f55\u5728\u6574\u6570\u6570\u7ec4 points , \u5176\u4e2d <code>points[i] = [xstart, xend]</code> \u8868\u793a\u6c34\u5e73\u76f4\u5f84\u5728 xstart \u548c xend \u4e4b\u95f4\u7684\u6c14\u7403\\ \u4e00\u652f\u5f13\u7bad\u53ef\u4ee5\u6cbf\u7740 x \u8f74\u4ece\u4e0d\u540c\u70b9\u5b8c\u5168\u5782\u76f4\u5730\u5c04\u51fa, \u5728\u5750\u6807 x \u5904\u5c04\u51fa\u4e00\u652f\u7bad, \u82e5\u6709\u4e00\u4e2a\u6c14\u7403\u7684\u76f4\u5f84\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u5750\u6807\u4e3a xstart, xend, \u4e14\u6ee1\u8db3  <code>xstart \u2264 x \u2264 xend</code>, \u5219\u8be5\u6c14\u7403\u4f1a\u88ab\u5f15\u7206, \u53ef\u4ee5\u5c04\u51fa\u7684\u5f13\u7bad\u7684\u6570\u91cf\u6ca1\u6709\u9650\u5236, \u5f13\u7bad\u4e00\u65e6\u88ab\u5c04\u51fa\u4e4b\u540e, \u53ef\u4ee5\u65e0\u9650\u5730\u524d\u8fdb</p> <pre><code>class Solution {\npublic:\n    int findMinArrowShots(vector&lt;vector&lt;int&gt;&gt;&amp; points) {\n        if (points.empty()) {\n            return 0;\n        }\n        sort(points.begin(), points.end(), [](const vector&lt;int&gt;&amp; u, const vector&lt;int&gt;&amp; v) {\n            return u[1] &lt; v[1];\n        });\n        int pos = points[0][1];\n        int ans = 1;\n        for (const vector&lt;int&gt;&amp; balloon: points) {\n            if (balloon[0] &gt; pos) {\n                pos = balloon[1];\n                ++ans;\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f, \u6bcf\u6b21\u53d6\u6700\u5de6\u53f3\u7aef\u70b9, \u7136\u540e\u53bb\u6389\u4e0e\u5b83\u76f8\u4ea4\u7684\u533a\u95f4\\ \u6211\u4e00\u5f00\u59cb, \u662f\u60f3\u7528\u5de6\u8fb9\u754c\u6392\u5e8f, \u7136\u540e\u53d6\u5230\u7b2c\u4e00\u4e2a\u53f3\u8fb9\u754c, \u7136\u540e\u53bb\u6389\u4e0e\u5b83\u76f8\u4ea4\u7684\u533a\u95f4, \u4f46\u662f\u53d1\u73b0\u5b8c\u5168\u6ca1\u5fc5\u8981</p> <p>\u529b\u6263 no.150\\ \u9006\u6ce2\u5170\u8868\u8fbe\u5f0f</p> <pre><code>class Solution {\npublic:\n    int evalRPN(vector&lt;string&gt;&amp; tokens) {\n        stack&lt;int&gt; stk;\n        int n = tokens.size();\n        for (int i = 0; i &lt; n; i++) {\n            string&amp; token = tokens[i];\n            if (isNumber(token)) {\n                stk.push(atoi(token.c_str()));\n            } else {\n                int num2 = stk.top();\n                stk.pop();\n                int num1 = stk.top();\n                stk.pop();\n                switch (token[0]) {\n                    case '+':\n                        stk.push(num1 + num2);\n                        break;\n                    case '-':\n                        stk.push(num1 - num2);\n                        break;\n                    case '*':\n                        stk.push(num1 * num2);\n                        break;\n                    case '/':\n                        stk.push(num1 / num2);\n                        break;\n                }\n            }\n        }\n        return stk.top();\n    }\n\n    bool isNumber(string&amp; token) {\n        return !(token == \"+\" || token == \"-\" || token == \"*\" || token == \"/\");\n    }\n};\n</code></pre> <p>\u7b80\u7b80\u5355\u5355\u6808, \u8fd0\u7b97\u89c4\u5219\u4e0e C \u4e00\u6837, \u6808\u7684\u4f34\u751f\u5e94\u7528\u4e86\u53ef\u4ee5\u8bf4</p> <p>\u529b\u6263 no.155\\ \u8bbe\u8ba1\u4e00\u4e2a\u652f\u6301 push , pop , top \u64cd\u4f5c, \u5e76\u80fd\u5728\u5e38\u6570\u65f6\u95f4\u5185\u68c0\u7d22\u5230\u6700\u5c0f\u5143\u7d20\u7684\u6808</p> <pre><code>class MinStack {\n    stack&lt;int&gt; x_stack;\n    stack&lt;int&gt; min_stack;\npublic:\n    MinStack() {\n        min_stack.push(INT_MAX); //\u4e00\u5f00\u59cb\u6ca1\u60f3\u5230\n    }\n\n    void push(int x) {\n        x_stack.push(x);\n        min_stack.push(min(min_stack.top(), x));\n    }\n\n    void pop() {\n        x_stack.pop();\n        min_stack.pop();\n    }\n\n    int top() {\n        return x_stack.top();\n    }\n\n    int getMin() {\n        return min_stack.top();\n    }\n};\n</code></pre> <p>\u7ef4\u62a4\u4e24\u4e2a\u6808, \u4e00\u4e2a\u6808\u7ef4\u62a4\u6700\u5c0f\u503c, \u4e00\u4e2a\u6808\u6b63\u5e38</p> <p>\u529b\u6263 no.71\\ \u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 path, \u8868\u793a\u6307\u5411\u67d0\u4e00\u6587\u4ef6\u6216\u76ee\u5f55\u7684 Unix \u98ce\u683c\u7edd\u5bf9\u8def\u5f84 (\u4ee5 '/' \u5f00\u5934), \u8bf7\u4f60\u5c06\u5176\u8f6c\u5316\u4e3a\u66f4\u52a0\u7b80\u6d01\u7684\u89c4\u8303\u8def\u5f84</p> <pre><code>class Solution {\npublic:\n    string simplifyPath(string path) {\n        auto split = [](const string&amp; s, char delim) -&gt; vector&lt;string&gt; {\n            vector&lt;string&gt; ans;\n            string cur;\n            for (char ch: s) {\n                if (ch == delim) {\n                    ans.push_back(move(cur));\n                    cur.clear();\n                }\n                else {\n                    cur += ch;\n                }\n            }\n            ans.push_back(move(cur));\n            return ans;\n        };\n\n        vector&lt;string&gt; names = split(path, '/');\n        vector&lt;string&gt; stack;\n        for (string&amp; name: names) {\n            if (name == \"..\") {\n                if (!stack.empty()) {\n                    stack.pop_back();\n                }\n            }\n            else if (!name.empty() &amp;&amp; name != \".\") {\n                stack.push_back(move(name));\n            }\n        }\n        string ans;\n        if (stack.empty()) {\n            ans = \"/\";\n        }\n        else {\n            for (string&amp; name: stack) {\n                ans += \"/\" + move(name);\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>\u7b80\u5355\u7684\u6808</p> <p>\u529b\u6263 no.114\\ \u7ed9\u4f60\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9 root , \u8bf7\u4f60\u5c06\u5b83\u5c55\u5f00\u4e3a\u4e00\u4e2a\u5355\u94fe\u8868\\ \u5c55\u5f00\u540e\u7684\u5355\u94fe\u8868\u5e94\u8be5\u540c\u6837\u4f7f\u7528 TreeNode , \u5176\u4e2d right \u5b50\u6307\u9488\u6307\u5411\u94fe\u8868\u4e2d\u4e0b\u4e00\u4e2a\u7ed3\u70b9, \u800c\u5de6\u5b50\u6307\u9488\u59cb\u7ec8\u4e3a null\\ \u5c55\u5f00\u540e\u7684\u5355\u94fe\u8868\u5e94\u8be5\u4e0e\u4e8c\u53c9\u6811\u5148\u5e8f\u904d\u5386\u987a\u5e8f\u76f8\u540c</p> <pre><code>class Solution {\npublic:\n    void flatten(TreeNode* root) {\n        if(!root||(!root-&gt;left&amp;&amp;!root-&gt;right)) return;\n        TreeNode* r=root;\n        auto s=stack&lt;TreeNode*&gt;();\n        s.push(nullptr);\n        while(r!=nullptr){\n            if(r-&gt;right) s.push(r-&gt;right);\n            if(r-&gt;left){\n                r-&gt;right=r-&gt;left;\n                r-&gt;left=nullptr;\n                r=r-&gt;right;\n            }\n            else{\n                r-&gt;right=s.top();\n                r=s.top();\n                s.pop();\n            }\n        }\n        return;\n    }\n};\n// \u524d\u5e8f\u904d\u5386\u7528\u6808\u5b58, \u76f8\u8f83\u6700\u7b28\u7684\u65b9\u6cd5\u6ca1\u6709\u9636\u7684\u65f6\u7a7a\u4f18\u52bf\n\nclass Solution {\npublic:\n    void flatten(TreeNode* root) {\n        TreeNode *curr = root;\n        while (curr != nullptr) {\n            if (curr-&gt;left != nullptr) {\n                auto next = curr-&gt;left;\n                auto predecessor = next;\n                while (predecessor-&gt;right != nullptr) {\n                    predecessor = predecessor-&gt;right;\n                }\n                predecessor-&gt;right = curr-&gt;right;\n                curr-&gt;left = nullptr;\n                curr-&gt;right = next;\n            }\n            curr = curr-&gt;right;\n        }\n    }\n};\n// \u5b98\u65b9\u6b63\u89e3, O(1)\u7a7a\u95f4\n// \u5c06\u53f3\u5b50\u6811\u653e\u5230\u5de6\u5b50\u6811\u7684\u6700\u53f3\u8fb9\n</code></pre> <p>\u529b\u6263 no.137\\ \u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums , \u9664\u67d0\u4e2a\u5143\u7d20\u4ec5\u51fa\u73b0\u4e00\u6b21\u5916, \u5176\u4f59\u6bcf\u4e2a\u5143\u7d20\u90fd\u6070\u51fa\u73b0\u4e09\u6b21, \u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de\u90a3\u4e2a\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u5143\u7d20\\ \u4f60\u5fc5\u987b\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u7ebf\u6027\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7b97\u6cd5\u4e14\u4f7f\u7528\u5e38\u6570\u7ea7\u7a7a\u95f4\u6765\u89e3\u51b3\u6b64\u95ee\u9898</p> <pre><code>class Solution {\npublic:\n    int singleNumber(vector&lt;int&gt;&amp; nums) {\n        int ans = 0;\n        for (int i = 0; i &lt; 32; ++i) {\n            int total = 0;\n            for (int num: nums) {\n                total += ((num &gt;&gt; i) &amp; 1);\n            }\n            if (total % 3) {\n                ans |= (1 &lt;&lt; i);\n            }\n        }\n        return ans;\n    }\n};\n// \u5bf9\u4e8e\u6bcf\u4f4d\u975e ans \u6811\u7684\u5f71\u54cd\u4e3a 0/3, \u6545\u7edf\u8ba1\u6bcf\u4e00\u4f4d\u7684\u548c%3\n\nclass Solution {\npublic:\n    int singleNumber(vector&lt;int&gt;&amp; nums) {\n        int a = 0, b = 0;\n        for (int num: nums) {\n            b = ~a &amp; (b ^ num);\n            a = ~b &amp; (a ^ num);\n        }\n        return b;\n    }\n};\n// \u6b63\u89e3, \u7528\u4e24\u4e2a\u6570\u6765\u6a21\u62df 4 \u8fdb\u5236                         \n</code></pre> <p>\u5b98\u65b9\u6b63\u89e3\u7684\u8bb2\u89e3\u6709\u70b9\u96be\u5d29, \u7528\u7535\u8def\u8bb2....\\ \u76f4\u63a5\u8bf4\u6570\u7406\u903b\u8f91\u4e0d\u597d\u5417, \u662f\u4e0d\u4f1a\u8fd8\u60f3\u88c5\u5417</p> <p>\u529b\u6263 no.94\\ \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386</p> <pre><code>class Solution {\npublic:\n    void inorder(TreeNode* root, vector&lt;int&gt;&amp; res) {\n        if (!root) {\n            return;\n        }\n        inorder(root-&gt;left, res);\n        res.push_back(root-&gt;val);\n        inorder(root-&gt;right, res);\n    }\n    vector&lt;int&gt; inorderTraversal(TreeNode* root) {\n        vector&lt;int&gt; res;\n        inorder(root, res);\n        return res;\n    }\n};\n// \u9012\u5f52\u79d2\u6740\nclass Solution {\npublic:\n    vector&lt;int&gt; inorderTraversal(TreeNode* root) {\n        vector&lt;int&gt; res;\n        TreeNode *predecessor = nullptr;\n\n        while (root != nullptr) {\n            if (root-&gt;left != nullptr) {\n                // predecessor \u8282\u70b9\u5c31\u662f\u5f53\u524d root \u8282\u70b9\u5411\u5de6\u8d70\u4e00\u6b65, \u7136\u540e\u4e00\u76f4\u5411\u53f3\u8d70\u81f3\u65e0\u6cd5\u8d70\u4e3a\u6b62\n                predecessor = root-&gt;left;\n                while (predecessor-&gt;right != nullptr &amp;&amp; predecessor-&gt;right != root) {\n                    predecessor = predecessor-&gt;right;\n                }\n\n                // \u8ba9 predecessor \u7684\u53f3\u6307\u9488\u6307\u5411 root, \u7ee7\u7eed\u904d\u5386\u5de6\u5b50\u6811\n                if (predecessor-&gt;right == nullptr) {\n                    predecessor-&gt;right = root;\n                    root = root-&gt;left;\n                }\n                // \u8bf4\u660e\u5de6\u5b50\u6811\u5df2\u7ecf\u8bbf\u95ee\u5b8c\u4e86, \u6211\u4eec\u9700\u8981\u65ad\u5f00\u94fe\u63a5\n                else {\n                    res.push_back(root-&gt;val);\n                    predecessor-&gt;right = nullptr;\n                    root = root-&gt;right;\n                }\n            }\n            // \u5982\u679c\u6ca1\u6709\u5de6\u5b69\u5b50, \u5219\u76f4\u63a5\u8bbf\u95ee\u53f3\u5b69\u5b50\n            else {\n                res.push_back(root-&gt;val);\n                root = root-&gt;right;\n            }\n        }\n        return res;\n    }\n};\n// morris \u4e2d\u5e8f\u904d\u5386\u4e8c\u53c9\u6811 O(1)\u7a7a\u95f4\u590d\u6742\u5ea6\n// \u5c06 x \u7684\u5de6\u5b50\u6811\u4e2d\u6700\u53f3\u8fb9\u7684\u8282\u70b9\u7684\u53f3\u5b69\u5b50\u6307\u5411 x(\u4e14\u80fd\u77e5\u6653\u5df2\u7ecf\u904d\u5386\u5b8c\u6210\u5de6\u5b50\u6811)\n</code></pre> <p>\u529b\u6263 no.118\\ \u6768\u8f89\u4e09\u89d2</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; generate(int numRows) {\n        vector&lt;vector&lt;int&gt;&gt; ret(numRows);\n        for (int i = 0; i &lt; numRows; ++i) {\n            ret[i].resize(i + 1);\n            ret[i][0] = ret[i][i] = 1;\n            for (int j = 1; j &lt; i; ++j) {\n                ret[i][j] = ret[i - 1][j] + ret[i - 1][j - 1];\n            }\n        }\n        return ret;\n    }\n};\n// \u7b80\u5355\u9012\u63a8, \u751f\u6210 n \u884c\u5373\u53ef\n</code></pre> <p>\u529b\u6263 no.119\\ \u6768\u8f89\u4e09\u89d2 2 (\u53ea\u8fd4\u56de\u7b2c n \u884c)</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; getRow(int rowIndex) {\n        vector&lt;int&gt; row(rowIndex + 1);\n        row[0] = 1;\n        for (int i = 1; i &lt;= rowIndex; ++i) {\n            row[i] = 1LL * row[i - 1] * (rowIndex - i + 1) / i;\n        }\n        return row;\n    }\n};\n// \u5373(a+b)\u7684 n \u6b21\u65b9\u5404\u9879\u7cfb\u6570\n</code></pre> <p>\u6ce8\u610f, \u5982\u679c\u4f7f\u7528\u4e0a\u4e00\u9053\u9898\u7684\u65b9\u6cd5, \u53ef\u4ee5\u7528\u4e00\u7ef4\u6570\u7ec4, \u6bcf\u6b21\u8fed\u4ee3\u4ece\u540e\u5411\u524d\u8ba1\u7b97, \u9632\u6b62\u8986\u76d6</p> <p>\u529b\u6263 no.144\\ \u4e8c\u53c9\u6811\u524d\u5e8f\u904d\u5386</p> <pre><code>class Solution {\npublic:\n    vector&lt;int&gt; preorderTraversal(TreeNode *root) {\n        vector&lt;int&gt; res;\n        if (root == nullptr) {\n            return res;\n        }\n\n        TreeNode *p1 = root, *p2 = nullptr;\n\n        while (p1 != nullptr) {\n            p2 = p1-&gt;left;\n            if (p2 != nullptr) {\n                while (p2-&gt;right != nullptr &amp;&amp; p2-&gt;right != p1) {\n                    p2 = p2-&gt;right;\n                }\n                if (p2-&gt;right == nullptr) {\n                    res.emplace_back(p1-&gt;val);\n                    p2-&gt;right = p1;\n                    p1 = p1-&gt;left;\n                    continue;\n                } else {\n                    p2-&gt;right = nullptr;\n                }\n            } else {\n                res.emplace_back(p1-&gt;val);\n            }\n            p1 = p1-&gt;right;\n        }\n        return res;\n    }\n};\n// morris \u524d\u5e8f\u904d\u5386\u4e8c\u53c9\u6811 O(1)\u7a7a\u95f4\u590d\u6742\u5ea6\n</code></pre> <p>\u529b\u6263 no.145\\ \u4e8c\u53c9\u6811\u540e\u5e8f\u904d\u5386</p> <pre><code>class Solution {\npublic:\n    void addPath(vector&lt;int&gt; &amp;vec, TreeNode *node) {\n        int count = 0;\n        while (node != nullptr) {\n            ++count;\n            vec.emplace_back(node-&gt;val);\n            node = node-&gt;right;\n        }\n        reverse(vec.end() - count, vec.end());\n    }\n\n    vector&lt;int&gt; postorderTraversal(TreeNode *root) {\n        vector&lt;int&gt; res;\n        if (root == nullptr) {\n            return res;\n        }\n\n        TreeNode *p1 = root, *p2 = nullptr;\n\n        while (p1 != nullptr) {\n            p2 = p1-&gt;left;\n            if (p2 != nullptr) {\n                while (p2-&gt;right != nullptr &amp;&amp; p2-&gt;right != p1) {\n                    p2 = p2-&gt;right;\n                }\n                if (p2-&gt;right == nullptr) {\n                    p2-&gt;right = p1;\n                    p1 = p1-&gt;left;\n                    continue;\n                } else {\n                    p2-&gt;right = nullptr;\n                    addPath(res, p1-&gt;left);\n                }\n            }\n            p1 = p1-&gt;right;\n        }\n        addPath(res, root);\n        return res;\n    }\n};\n// morris \u540e\u5e8f\u904d\u5386\u4e8c\u53c9\u6811 O(1)\u7a7a\u95f4\u590d\u6742\u5ea6\n</code></pre> <p>\u8fd9\u4e24\u9898\u7684\u9012\u5f52 / \u8fed\u4ee3\u89e3\u6cd5\u90fd\u5f88\u7b80\u5355, \u4e0d\u5199\u4e86\\ Morris \u7b97\u6cd5\u672c\u8d28\u5c31\u662f\u5229\u7528\u7a7a\u95f2\u6307\u9488</p> <p>\u529b\u6263 no.160\\ \u5224\u65ad\u4e24\u4e2a\u94fe\u8868\u76f8\u4ea4\u70b9</p> <pre><code>public class Solution {\n    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {\n        if (headA == null || headB == null) {\n            return null;\n        }\n        ListNode pA = headA, pB = headB;\n        while (pA != pB) {\n            pA = pA == null ? headB : pA.next;\n            pB = pB == null ? headA : pB.next;\n        }\n        return pA;\n    }\n}\n// \u53cc\u6307\u9488\u6b63\u89e3\u771f\u7684\u5de7\u5999, \u6307\u9488\u8d70\u5b8c\u540e\u4ea4\u6362\u5230\u53e6\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9\n// \u628a\u4e09\u6bb5\u8ddd\u79bb\u8bbe\u4e3a abc, \u4e00\u4e2a\u8d70\u5b8c\u662f a+c, \u53e6\u4e00\u4e2a b+c, \u4ea4\u6362\u94fe\u8868, \u8d70\u540c\u6837\u8ddd\u79bb\u521a\u597d\u662f a+b+c, \u521a\u597d\u5728\u4ea4\u70b9\u5904\n</code></pre> <p>\u7528\u54c8\u5e0c / \u5bf9\u9f50\u592a\u7b80\u5355, \u4e0d\u8bf4\u4e86</p> <p>\u529b\u6263 no.108\\ \u5c06\u6709\u5e8f\u6570\u7ec4\u8f6c\u6362\u4e3a\u4e8c\u53c9\u641c\u7d22\u6811</p> <pre><code>class Solution {\npublic:\n    TreeNode* sortedArrayToBST(vector&lt;int&gt;&amp; nums) {\n        return helper(nums, 0, nums.size() - 1);\n    }\n\n    TreeNode* helper(vector&lt;int&gt;&amp; nums, int left, int right) {\n        if (left &gt; right) {\n            return nullptr;\n        }\n\n        // \u9009\u62e9\u4efb\u610f\u4e00\u4e2a\u4e2d\u95f4\u4f4d\u7f6e\u6570\u5b57\u4f5c\u4e3a\u6839\u8282\u70b9\n        int mid = (left + right + rand() % 2) / 2;\n\n        TreeNode* root = new TreeNode(nums[mid]);\n        root-&gt;left = helper(nums, left, mid - 1);\n        root-&gt;right = helper(nums, mid + 1, right);\n        return root;\n    }\n};\n</code></pre> <p>\u677f\u5b50\u9898</p> <p>\u529b\u6263 no.110\\ \u5224\u65ad\u5e73\u8861\u4e8c\u53c9\u6811</p> <pre><code>class Solution {\npublic:\n    int height(TreeNode* root) {\n        if (root == NULL) {\n            return 0;\n        }\n        int leftHeight = height(root-&gt;left);\n        int rightHeight = height(root-&gt;right);\n        if (leftHeight == -1 || rightHeight == -1 || abs(leftHeight - rightHeight) &gt; 1) {\n            return -1;\n        } else {\n            return max(leftHeight, rightHeight) + 1;\n        }\n    }\n\n    bool isBalanced(TreeNode* root) {\n        return height(root) &gt;= 0;\n    }\n};\n</code></pre> <p>\u677f\u5b50\u9898</p> <p>\u529b\u6263 no.111 \u4e8c\u53c9\u6811\u6700\u5c0f\u6df1\u5ea6</p> <pre><code>class Solution {\npublic:\n    int minDepth(TreeNode *root) {\n        if (root == nullptr) {\n            return 0;\n        }\n\n        if (root-&gt;left == nullptr &amp;&amp; root-&gt;right == nullptr) {\n            return 1;\n        }\n\n        int min_depth = INT_MAX;\n        if (root-&gt;left != nullptr) {\n            min_depth = min(minDepth(root-&gt;left), min_depth);\n        }\n        if (root-&gt;right != nullptr) {\n            min_depth = min(minDepth(root-&gt;right), min_depth);\n        }\n\n        return min_depth + 1;\n    }\n};\n</code></pre> <p>DFS/BFS \u677f\u5b50\u9898</p> <p>\u529b\u6263 no.168\\ Excel \u8868\u5217\u540d\u79f0</p> <pre><code>class Solution {\npublic:\n    string convertToTitle(int columnNumber) {\n        string ans;\n        while (columnNumber &gt; 0) {\n            --columnNumber;\n            ans += columnNumber % 26 + 'A';\n            columnNumber /= 26;\n        }\n        reverse(ans.begin(), ans.end());\n        return ans;\n    }\n};\n</code></pre> <p>26 \u8fdb\u5236\u8f6c\u6362, \u4f46 A0 \u4e0e 0Z \u76f8\u7b49 (\u5b9e\u9645\u6ca1 0)</p> <p>\u529b\u6263 no.171</p> <pre><code>class Solution {\npublic:\n    int titleToNumber(string columnTitle) {\n        int ans(0), l=columnTitle.size();\n        for(int i=l-1;i&gt;=0;i--){\n            ans+=(columnTitle[i]-'A'+1)*pow(26, l-i-1);\n        }\n        return ans;\n    }\n};\n</code></pre> <p>26 \u8fdb\u5236\u8f6c\u6362, \u4ece\u540e\u5f80\u524d, \u7b80\u5355\\ \u4ece\u524d\u5f80\u540e\u4ea6\u53ef, <code>ans*=26</code></p> <p>\u529b\u6263 no.203\\ \u79fb\u9664\u94fe\u8868\u5143\u7d20</p> <pre><code>class Solution {\npublic:\n    ListNode* removeElements(ListNode* head, int val) {\n        ListNode dumbnode;\n        dumbnode.next=head;\n        ListNode* m=&amp;dumbnode;\n        for(ListNode* h=head;h;h=h-&gt;next){\n            if(h-&gt;val==val){\n                m-&gt;next=h-&gt;next;\n                continue;\n            }\n            m=m-&gt;next;\n        }\n        return dumbnode.next;\n    }\n};\n</code></pre> <p>\u7b80\u5355, \u9012\u5f52\u4ea6\u53ef</p> <p>\u529b\u6263 no.129\\ \u6c42\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u6570\u5b57\u4e4b\u548c</p> <pre><code>class Solution {\npublic:\n    int sumNumbers(TreeNode* root) {\n        if(!root) return 0;\n        int ans(0);\n        queue&lt;TreeNode*&gt; q;q.push(root);\n        while(!q.empty()){\n            TreeNode* p=q.front();q.pop();\n            if(p-&gt;left){\n                q.push(p-&gt;left);\n                p-&gt;left-&gt;val+=p-&gt;val*10;\n                if(!p-&gt;left-&gt;left&amp;&amp;!p-&gt;left-&gt;right) ans+=p-&gt;left-&gt;val;\n            }\n            if(p-&gt;right){\n                q.push(p-&gt;right);\n                p-&gt;right-&gt;val+=p-&gt;val*10;\n                if(!p-&gt;right-&gt;left&amp;&amp;!p-&gt;right-&gt;right) ans+=p-&gt;right-&gt;val;\n            }\n        }\n        return ans?ans:root-&gt;val;\n    }\n};\n</code></pre> <p>DFS/BFS, \u4f46\u6211\u5c0f\u4fee\u6539, \u4f18\u5316\u65f6\u95f4\u5e38\u7cfb\u6570</p> <p>\u529b\u6263 no.236\\ \u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148</p> <pre><code>class Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        if (root == nullptr || root == p || root == q) return root;\n        TreeNode *left = lowestCommonAncestor(root-&gt;left, p, q);\n        TreeNode *right = lowestCommonAncestor(root-&gt;right, p, q);\n        if (left == nullptr) return right;\n        if (right == nullptr) return left;\n        return root;\n    }\n};\n// \u9012\u5f52\nclass Solution {\npublic:\n    unordered_map&lt;int, TreeNode*&gt; fa;\n    unordered_map&lt;int, bool&gt; vis;\n    void dfs(TreeNode* root){\n        if (root-&gt;left != nullptr) {\n            fa[root-&gt;left-&gt;val] = root;\n            dfs(root-&gt;left);\n        }\n        if (root-&gt;right != nullptr) {\n            fa[root-&gt;right-&gt;val] = root;\n            dfs(root-&gt;right);\n        }\n    }\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        fa[root-&gt;val] = nullptr;\n        dfs(root);\n        while (p != nullptr) {\n            vis[p-&gt;val] = true;\n            p = fa[p-&gt;val];\n        }\n        while (q != nullptr) {\n            if (vis[q-&gt;val]) return q;\n            q = fa[q-&gt;val];\n        }\n        return nullptr;\n    }\n};\n// \u54c8\u5e0c\u8868\n</code></pre> <p>\u529b\u6263 no.117\\ \u586b\u5145\u6bcf\u4e2a\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u53f3\u4fa7\u8282\u70b9\u6307\u9488 (node \u4e2d\u589e\u52a0 next \u6307\u9488\u57df, \u7f13\u5b58\u5c42\u5e8f\u904d\u5386)</p> <pre><code>class Solution {\npublic:\n    Node* connect(Node* root) {\n        if (!root) {\n            return nullptr;\n        }\n        queue&lt;Node*&gt; q;\n        q.push(root);\n        while (!q.empty()) {\n            int n = q.size();\n            Node *last = nullptr;\n            for (int i = 1; i &lt;= n; ++i) {\n                Node *f = q.front();\n                q.pop();\n                if (f-&gt;left) {\n                    q.push(f-&gt;left);\n                }\n                if (f-&gt;right) {\n                    q.push(f-&gt;right);\n                }\n                if (i != 1) {\n                    last-&gt;next = f;\n                }\n                last = f;\n            }\n        }\n        return root;\n    }\n};\n// \u5c42\u5e8f\u904d\u5386\u5373\u53ef\nclass Solution {\npublic:\n    Node* connect(Node* root) {\n        Node* cur = root;\n        while(cur)\n        {\n            Node* cengHead = new Node(0);\n            Node* p = cengHead;\n            while(cur)\n            {\n                if(cur-&gt;left)\n                {\n                    p-&gt;next = cur-&gt;left;\n                    p=p-&gt;next;\n                }\n                if(cur -&gt; right)\n                {\n                    p-&gt;next = cur-&gt;right;\n                    p = p-&gt;next;\n                }\n                 cur = cur-&gt;next;\n            }\n            cur = cengHead-&gt;next;\n        }\n        return root;\n    }\n};\n// \u5229\u7528\u5df2\u6709 next \u6307\u9488, O(1)\u7a7a\u95f4\n</code></pre> <p>\u529b\u6263 no.25\\ k \u4e2a\u4e00\u7ec4\u7ffb\u8f6c\u94fe\u8868</p> <pre><code>class Solution {\npublic:\n    // \u7ffb\u8f6c\u4e00\u4e2a\u5b50\u94fe\u8868, \u5e76\u4e14\u8fd4\u56de\u65b0\u7684\u5934\u4e0e\u5c3e\n    pair&lt;ListNode*, ListNode*&gt; myReverse(ListNode* head, ListNode* tail) {\n        ListNode* prev = tail-&gt;next;\n        ListNode* p = head;\n        while (prev != tail) {\n            ListNode* nex = p-&gt;next;\n            p-&gt;next = prev;\n            prev = p;\n            p = nex;\n        }\n        return {tail, head};\n    }\n\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        ListNode* hair = new ListNode(0);\n        hair-&gt;next = head;\n        ListNode* pre = hair;\n\n        while (head) {\n            ListNode* tail = pre;\n            // \u67e5\u770b\u5269\u4f59\u90e8\u5206\u957f\u5ea6\u662f\u5426\u5927\u4e8e\u7b49\u4e8e k\n            for (int i = 0; i &lt; k; ++i) {\n                tail = tail-&gt;next;\n                if (!tail) {\n                    return hair-&gt;next;\n                }\n            }\n            ListNode* nex = tail-&gt;next;\n            // \u8fd9\u91cc\u662f C++17 \u7684\u5199\u6cd5, \u4e5f\u53ef\u4ee5\u5199\u6210\n            // pair&lt;ListNode*, ListNode*&gt; result = myReverse(head, tail);\n            // head = result.first;\n            // tail = result.second;\n            tie(head, tail) = myReverse(head, tail);\n            // \u628a\u5b50\u94fe\u8868\u91cd\u65b0\u63a5\u56de\u539f\u94fe\u8868\n            pre-&gt;next = head;\n            tail-&gt;next = nex;\n            pre = tail;\n            head = tail-&gt;next;\n        }\n\n        return hair-&gt;next;\n    }\n};\n</code></pre> <p>\u677f\u5b50\u9898, \u6a21\u62df\u7ffb\u8f6c, \u54d1\u8282\u70b9\u5565\u7684</p> <p>\u529b\u6263 no.105\\ \u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811</p> <pre><code>class Solution {\nprivate:\n    unordered_map&lt;int, int&gt; index;\n\npublic:\n    TreeNode* myBuildTree(const vector&lt;int&gt;&amp; preorder, const vector&lt;int&gt;&amp; inorder, int preorder_left, int preorder_right, int inorder_left, int inorder_right) {\n        if (preorder_left &gt; preorder_right) {\n            return nullptr;\n        }\n        int preorder_root = preorder_left;\n        int inorder_root = index[preorder[preorder_root]];\n\n        TreeNode* root = new TreeNode(preorder[preorder_root]);\n\n        int size_left_subtree = inorder_root - inorder_left;\n\n        root-&gt;left = myBuildTree(preorder, inorder, preorder_left + 1, preorder_left + size_left_subtree, inorder_left, inorder_root - 1);\n        root-&gt;right = myBuildTree(preorder, inorder, preorder_left + size_left_subtree + 1, preorder_right, inorder_root + 1, inorder_right);\n\n        return root;\n    }\n\n    TreeNode* buildTree(vector&lt;int&gt;&amp; preorder, vector&lt;int&gt;&amp; inorder) {\n        int n = preorder.size();\n        for (int i = 0; i &lt; n; ++i) {\n            index[inorder[i]] = i;\n        }\n        return myBuildTree(preorder, inorder, 0, n - 1, 0, n - 1);\n    }\n};\n// \u7b80\u5355\u7684\u9012\u5f52\nclass Solution {\npublic:\n    TreeNode* buildTree(vector&lt;int&gt;&amp; preorder, vector&lt;int&gt;&amp; inorder) {\n        if (!preorder.size()) {\n            return nullptr;\n        }\n        TreeNode* root = new TreeNode(preorder[0]);\n        stack&lt;TreeNode*&gt; stk;\n        stk.push(root);\n        int inorderIndex = 0;\n        for (int i = 1; i &lt; preorder.size(); ++i) {\n            int preorderVal = preorder[i];\n            TreeNode* node = stk.top();\n            if (node-&gt;val != inorder[inorderIndex]) {\n                node-&gt;left = new TreeNode(preorderVal);\n                stk.push(node-&gt;left);\n            }\n            else {\n                while (!stk.empty() &amp;&amp; stk.top()-&gt;val == inorder[inorderIndex]) {\n                    node = stk.top();\n                    stk.pop();\n                    ++inorderIndex;\n                }\n                node-&gt;right = new TreeNode(preorderVal);\n                stk.push(node-&gt;right);\n            }\n        }\n        return root;\n    }\n};\n// \u8fed\u4ee3\u7684\u6808\u5185\u5143\u7d20\u7ba1\u7406\u9700\u8981\u597d\u597d\u8003\u8651\n</code></pre> <p>\u529b\u6263 no.224\\ \u57fa\u672c\u8ba1\u7b97\u5668 (\u52a0\u51cf\u62ec\u53f7)</p> <pre><code>class Solution {\npublic:\n    int calculate(string s) {\n        int length = s.size();\n        int sign = 1;\n        stack&lt;int&gt; stk;\n        int res = 0;\n\n        for (int i = 0; i &lt; length; i++) {\n            char ch = s[i];\n            if (ch &gt;= '0' &amp;&amp; ch &lt;= '9') {\n                long value = ch - '0';\n                while (i + 1 &lt; length &amp;&amp; s[i + 1] &gt;= '0' &amp;&amp; s[i + 1] &lt;= '9') {\n                    i++;\n                    value = value * 10 + (s[i] - '0');\n                }\n\n                res += value * sign;\n            }\n\n            if (ch == '+')\n                sign = 1;\n\n            if (ch == '-')\n                sign = -1;\n\n            if (ch == '(') {\n                stk.push(res);\n                res = 0;\n                stk.push(sign);\n                sign = 1;\n            }\n\n            if (ch == ')') {\n                int frontsign = stk.top();\n                stk.pop();\n                int frontvalue = stk.top();\n                stk.pop();\n\n                res = frontvalue + frontsign * res;\n            }\n        }\n\n        return res;\n    }\n};\n// \u6808\u6a21\u62df\u6700\u5feb\u7684\u89e3\u6cd5\n</code></pre> <p>\u7b2c\u4e00\u773c\u4e2d\u7f00\u8f6c\u540e\u7f00 + \u9006\u6ce2\u5170\\ \u4f46\u53d1\u73b0\u53ea\u6709\u62ec\u53f7\u8fd9\u4e2a\u4f18\u5148\u7ea7, \u6ca1\u6709\u4e58\u9664, \u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u8ba1\u7b97\\ \u9012\u5f52 / \u6808\u90fd\u884c, \u8bb0\u5f55\u5f53\u524d\u7b26\u53f7 (\u9700\u4e0d\u9700\u8981\u9006\u8f6c), \u9047\u5230\u62ec\u53f7\u5c31\u9012\u5f52\u8ba1\u7b97</p> <p>\u529b\u6263 no.106\\ \u4ece\u4e2d\u5e8f\u4e0e\u540e\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811</p> <pre><code>class Solution {\npublic:\n    TreeNode* buildTree(vector&lt;int&gt;&amp; inorder, vector&lt;int&gt;&amp; postorder) {\n        auto dfs = [](auto&amp;&amp; dfs, auto&amp;&amp; lI, auto&amp;&amp; rI, auto&amp;&amp; lP) {\n            if (lI == rI) return (TreeNode*)nullptr;\n            auto loc = find(lI, rI, *lP); // \u53ef\u4ee5\u4f18\u5316\u6210\u54c8\u5e0c\u8868\n            return new TreeNode(*lP, dfs(dfs, lI, loc, lP + (rI - loc)), // \u6ce8\u610f\u540e\u5e8f\u662f\u5de6\u53f3\u4e2d, \u5012\u7740\u662f\u4e2d\u53f3\u5de6\n                                     dfs(dfs, loc + 1, rI, lP + 1));\n        };\n        return dfs(dfs, inorder.cbegin(), inorder.cend(), postorder.crbegin());\n    }\n};\n// \u9012\u5f52, \u5199\u5f97\u771f\u597d\n// \u8ddf\u524d\u4e00\u9898\u4e00\u6837, \u5012\u7740\u904d\u5386\u540e\u5e8f\u5e8f\u5217\u5373\u53ef\n</code></pre> <p>\u529b\u6263 no.199\\ \u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; levelOrder(TreeNode* root) {\n        if (root == nullptr) {\n            return {};\n        }\n\n        vector&lt;vector&lt;int&gt;&gt; ans;\n        vector&lt;int&gt; percent; \n        queue&lt;TreeNode*&gt; que;\n        que.push(root);\n        int size = 1;\n\n        while(size != 0 || !que.empty()) {\n            size--;\n            TreeNode* cur = que.front();\n            percent.push_back(cur-&gt;val);\n            que.pop();\n\n            if (cur-&gt;left) {\n                que.push(cur-&gt;left);\n            }\n            if (cur-&gt;right) {\n                que.push(cur-&gt;right);\n            }\n\n\n            if (size == 0) {\n                size = que.size();\n                ans.push_back(percent);\n                percent = {};\n            }\n        }\n\n        return ans;\n\n    }\n    vector&lt;int&gt; rightSideView(TreeNode* root) {\n        // \u5c42\u5e8f\u904d\u5386\u4e4b\u540e\u8fd4\u56de\u6bcf\u4e00\u5c42\u6700\u540e\u4e00\u4e2a\u5373\u53ef\n        vector&lt;vector&lt;int&gt;&gt; vinorder = levelOrder(root);\n        vector&lt;int&gt; ans;\n        for (auto x : vinorder) {\n            ans.push_back(x.back());\n        }\n\n        return ans;\n    }\n};\n</code></pre> <p>\u5c42\u5e8f\u904d\u5386\u677f\u5b50\u9898</p> <p>\u529b\u6263 no.103\\ \u4e8c\u53c9\u6811\u7684\u952f\u9f7f\u5f62\u5c42\u5e8f\u904d\u5386</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; zigzagLevelOrder(TreeNode* root) {\n        vector&lt;vector&lt;int&gt;&gt; ans;\n        if (!root) {\n            return ans;\n        }\n\n        queue&lt;TreeNode*&gt; nodeQueue;\n        nodeQueue.push(root);\n        bool isOrderLeft = true;\n\n        while (!nodeQueue.empty()) {\n            deque&lt;int&gt; levelList;\n            int size = nodeQueue.size();\n            for (int i = 0; i &lt; size; ++i) {\n                auto node = nodeQueue.front();\n                nodeQueue.pop();\n                if (isOrderLeft) {\n                    levelList.push_back(node-&gt;val);\n                } else {\n                    levelList.push_front(node-&gt;val);\n                }\n                if (node-&gt;left) {\n                    nodeQueue.push(node-&gt;left);\n                }\n                if (node-&gt;right) {\n                    nodeQueue.push(node-&gt;right);\n                }\n            }\n            ans.emplace_back(vector&lt;int&gt;{levelList.begin(), levelList.end()});\n            isOrderLeft = !isOrderLeft;\n        }\n\n        return ans;\n    }\n};\n</code></pre> <p>\u677f\u5b50, \u5947\u6570\u5c42\u5012\u53d9\u5373\u53ef</p> <p>\u529b\u6263 no.530\\ \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u5c0f\u7edd\u5bf9\u5dee</p> <pre><code>class Solution {\npublic:\n    void dfs(TreeNode* root, int&amp; pre, int&amp; ans) {\n        if (root == nullptr) {\n            return;\n        }\n        dfs(root-&gt;left, pre, ans);\n        if (pre == -1) {\n            pre = root-&gt;val;\n        } else {\n            ans = min(ans, root-&gt;val - pre);\n            pre = root-&gt;val;\n        }\n        dfs(root-&gt;right, pre, ans);\n    }\n    int getMinimumDifference(TreeNode* root) {\n        int ans = INT_MAX, pre = -1;\n        dfs(root, pre, ans);\n        return ans;\n    }\n};\n</code></pre> <p>\u4e2d\u5e8f\u904d\u5386\u5373\u53ef</p> <p>\u529b\u6263 no.98\\ \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811</p> <pre><code>class Solution {\npublic:\n    bool helper(TreeNode* root, long long lower, long long upper) {\n        if (root == nullptr) {\n            return true;\n        }\n        if (root -&gt; val &lt;= lower || root -&gt; val &gt;= upper) {\n            return false;\n        }\n        return helper(root -&gt; left, lower, root -&gt; val) &amp;&amp; helper(root -&gt; right, root -&gt; val, upper);\n    }\n    bool isValidBST(TreeNode* root) {\n        return helper(root, LONG_MIN, LONG_MAX);\n    }\n};\n</code></pre> <p>\u9012\u5f52, \u7ef4\u62a4\u4e0a\u754c\u4e0b\u754c (\u6839\u8282\u70b9\u7684\u5de6\u5b50\u6811\u7684\u4e0a\u754c\u4e3a\u6839\u8282\u70b9, \u6839\u8282\u70b9\u7684\u53f3\u5b50\u6811\u7684\u4e0b\u754c\u4e3a\u6839\u8282\u70b9)\\ \u4e2d\u5e8f\u904d\u5386\u540c\u4e0a\u9898</p> <p>\u529b\u6263 no.230\\ \u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7b2c K \u5c0f\u7684\u5143\u7d20</p> <pre><code>class MyBst {\npublic:\n    MyBst(TreeNode *root) {\n        this-&gt;root = root;\n        countNodeNum(root);\n    }\n\n    // \u8fd4\u56de\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7b2c k \u5c0f\u7684\u5143\u7d20\n    int kthSmallest(int k) {\n        TreeNode *node = root;\n        while (node != nullptr) {\n            int left = getNodeNum(node-&gt;left);\n            if (left &lt; k - 1) {\n                node = node-&gt;right;\n                k -= left + 1;\n            } else if (left == k - 1) {\n                break;\n            } else {\n                node = node-&gt;left;\n            }\n        }\n        return node-&gt;val;\n    }\n\nprivate:\n    TreeNode *root;\n    unordered_map&lt;TreeNode *, int&gt; nodeNum;\n\n    // \u7edf\u8ba1\u4ee5 node \u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u7684\u7ed3\u70b9\u6570\n    int countNodeNum(TreeNode * node) {\n        if (node == nullptr) {\n            return 0;\n        }\n        nodeNum[node] = 1 + countNodeNum(node-&gt;left) + countNodeNum(node-&gt;right);\n        return nodeNum[node];\n    }\n\n    // \u83b7\u53d6\u4ee5 node \u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u7684\u7ed3\u70b9\u6570\n    int getNodeNum(TreeNode * node) {\n        if (node != nullptr &amp;&amp; nodeNum.count(node)) {\n            return nodeNum[node];\n        }else{\n            return 0;\n        }\n    }\n};\n\nclass Solution {\npublic:\n    int kthSmallest(TreeNode* root, int k) {\n        MyBst bst(root);\n        return bst.kthSmallest(k);\n    }\n};\n</code></pre> <p>\u4e2d\u5e8f\u904d\u5386\u540c\u4e0a\\ \u53ef\u4ee5\u7f13\u5b58\u5b50\u6811\u7ed3\u70b9\u6570, \u52a0\u901f\u67e5\u627e\\ AVL \u6811\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316</p> <p>\u529b\u6263 no.173\\ \u4e8c\u53c9\u641c\u7d22\u6811\u8fed\u4ee3\u5668</p> <pre><code>class BSTIterator {\nprivate:\n    TreeNode* cur;\n    stack&lt;TreeNode*&gt; stk;\npublic:\n    BSTIterator(TreeNode* root): cur(root) {}\n\n    int next() {\n        while (cur != nullptr) {\n            stk.push(cur);\n            cur = cur-&gt;left;\n        }\n        cur = stk.top();\n        stk.pop();\n        int ret = cur-&gt;val;\n        cur = cur-&gt;right;\n        return ret;\n    }\n\n    bool hasNext() {\n        return cur != nullptr || !stk.empty();\n    }\n};\n</code></pre> <p>\u6241\u5e73\u5316\u4ea6\u53ef\\ \u6a21\u62df\u4e2d\u5e8f\u904d\u5386\u6b63\u89e3</p> <p>\u529b\u6263 no.17\\ \u7535\u8bdd\u53f7\u7801\u7684\u5b57\u6bcd\u7ec4\u5408</p> <pre><code>class Solution {\npublic:\n    vector&lt;string&gt; letterCombinations(string digits) {\n        vector&lt;string&gt; combinations;\n        if (digits.empty()) {\n            return combinations;\n        }\n        unordered_map&lt;char, string&gt; phoneMap{\n            {'2', \"abc\"}, \n            {'3', \"def\"}, \n            {'4', \"ghi\"}, \n            {'5', \"jkl\"}, \n            {'6', \"mno\"}, \n            {'7', \"pqrs\"}, \n            {'8', \"tuv\"}, \n            {'9', \"wxyz\"}\n        };\n        string combination;\n        backtrack(combinations, phoneMap, digits, 0, combination);\n        return combinations;\n    }\n\n    void backtrack(vector&lt;string&gt;&amp; combinations, const unordered_map&lt;char, string&gt;&amp; phoneMap, const string&amp; digits, int index, string&amp; combination) {\n        if (index == digits.length()) {\n            combinations.push_back(combination);\n        } else {\n            char digit = digits[index];\n            const string&amp; letters = phoneMap.at(digit);\n            for (const char&amp; letter: letters) {\n                combination.push_back(letter);\n                backtrack(combinations, phoneMap, digits, index + 1, combination);\n                combination.pop_back();\n            }\n        }\n    }\n};\n</code></pre> <p>\u4e0d\u90a3\u4e48\u677f\u5b50\u7684\u56de\u6eaf\u677f\u5b50</p> <p>\u529b\u6263 no.22\\ \u6570\u5b57 n \u4ee3\u8868\u751f\u6210\u62ec\u53f7\u7684\u5bf9\u6570, \u8bf7\u4f60\u8bbe\u8ba1\u4e00\u4e2a\u51fd\u6570, \u7528\u4e8e\u80fd\u591f\u751f\u6210\u6240\u6709\u53ef\u80fd\u7684\u5e76\u4e14 \u6709\u6548\u7684 \u62ec\u53f7\u7ec4\u5408</p> <pre><code>class Solution {\n    void adde(vector&lt;string&gt; &amp;ans, int i, int n, int x, string&amp; current){\n        if(i==n){\n            ans.push_back(current);\n            return;\n        }\n        for(int j=x+1;j&lt;=2*i;j++){\n            current[j]='(';\n            adde(ans, i+1, n, j, current);\n            current[j]=')';\n        }\n    }\npublic:\n    vector&lt;string&gt; generateParenthesis(int n) {\n        vector&lt;string&gt; ans;\n        string current=\"\";\n        for(int i=0;i&lt;n;i++){\n            current+=\"))\";\n        }\n        adde(ans, 0, n, -1, current);\n        return ans;\n    }\n};\n</code></pre> <p>\u5178\u578b\u56de\u6eaf</p> <p>\u529b\u6263 no.201\\ \u7ed9\u4f60\u4e24\u4e2a\u6574\u6570 left \u548c right , \u8868\u793a\u533a\u95f4 <code>[left, right]</code> , \u8fd4\u56de\u6b64\u533a\u95f4\u5185\u6240\u6709\u6570\u5b57\u6309\u4f4d\u4e0e\u7684\u7ed3\u679c</p> <pre><code>class Solution {\npublic:\n    int rangeBitwiseAnd(int m, int n) {\n        int shift = 0;\n        // \u627e\u5230\u516c\u5171\u524d\u7f00\n        while (m &lt; n) {\n            m &gt;&gt;= 1;\n            n &gt;&gt;= 1;\n            ++shift;\n        }\n        return m &lt;&lt; shift;\n    }\n};\n// \u5e38\u89c4\u4f4d\u79fb\nclass Solution {\npublic:\n    int rangeBitwiseAnd(int m, int n) {\n        while (m &lt; n) {\n            // \u62b9\u53bb\u6700\u53f3\u8fb9\u7684 1\n            n = n &amp; (n - 1);\n        }\n        return n;\n    }\n};\n// Brian Kernighan \u7b97\u6cd5, \u62b9\u53bb\u6700\u53f3\u8fb9\u7684 1\n</code></pre> <p>\u6c42\u5171\u540c\u4e8c\u8fdb\u5236\u524d\u7f00</p> <p>\u529b\u6263 no.53\\ \u6700\u5927\u5b50\u6570\u7ec4\u548c</p> <pre><code>class Solution {\npublic:\n    int maxSubArray(vector&lt;int&gt;&amp; nums) {\n        int pre = 0, maxAns = nums[0];\n        for (const auto &amp;x: nums) {\n            pre = max(pre + x, x);\n            maxAns = max(maxAns, pre);\n        }\n        return maxAns;\n    }\n};\n// \u52a8\u6001\u89c4\u5212\nclass Solution {\npublic:\n    struct Status {\n        int lSum, rSum, mSum, iSum;\n    };\n\n    Status pushUp(Status l, Status r) {\n        int iSum = l.iSum + r.iSum;\n        int lSum = max(l.lSum, l.iSum + r.lSum);\n        int rSum = max(r.rSum, r.iSum + l.rSum);\n        int mSum = max(max(l.mSum, r.mSum), l.rSum + r.lSum);\n        return (Status) {lSum, rSum, mSum, iSum};\n    };\n\n    Status get(vector&lt;int&gt; &amp;a, int l, int r) {\n        if (l == r) {\n            return (Status) {a[l], a[l], a[l], a[l]};\n        }\n        int m = (l + r) &gt;&gt; 1;\n        Status lSub = get(a, l, m);\n        Status rSub = get(a, m + 1, r);\n        return pushUp(lSub, rSub);\n    }\n\n    int maxSubArray(vector&lt;int&gt;&amp; nums) {\n        return get(nums, 0, nums.size() - 1).mSum;\n    }\n};\n// \u5206\u6cbb\n</code></pre> <p>\u52a8\u6001\u89c4\u5212\u7b80\u5355\\ \u4f46\u5927\u91cf\u641c\u7d22\u7684\u573a\u666f\u53ef\u4ee5\u7528\u5206\u6cbb\u4f18\u5316 (\u7ebf\u6bb5\u6811)</p> <p>\u529b\u6263 no.206\\ \u53cd\u8f6c\u94fe\u8868</p> <pre><code>class Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        if (!head || !head-&gt;next) {\n            return head;\n        }\n        ListNode* newHead = reverseList(head-&gt;next);\n        head-&gt;next-&gt;next = head;\n        head-&gt;next = nullptr;\n        return newHead;\n    }\n};\n</code></pre> <p>\u8d34\u4e00\u4e2a\u9012\u5f52, \u6c34\u4e00\u5929</p> <p>\u529b\u6263 no.148</p> <pre><code>class Solution {\npublic:\n    ListNode* sortList(ListNode* head) {\n        return sortList(head, nullptr);\n    }\n\n    ListNode* sortList(ListNode* head, ListNode* tail) {\n        if (head == nullptr) {\n            return head;\n        }\n        if (head-&gt;next == tail) {\n            head-&gt;next = nullptr;\n            return head;\n        }\n        ListNode* slow = head, *fast = head;\n        while (fast != tail) {\n            slow = slow-&gt;next;\n            fast = fast-&gt;next;\n            if (fast != tail) {\n                fast = fast-&gt;next;\n            }\n        }\n        ListNode* mid = slow;\n        return merge(sortList(head, mid), sortList(mid, tail));\n    }\n\n    ListNode* merge(ListNode* head1, ListNode* head2) {\n        ListNode* dummyHead = new ListNode(0);\n        ListNode* temp = dummyHead, *temp1 = head1, *temp2 = head2;\n        while (temp1 != nullptr &amp;&amp; temp2 != nullptr) {\n            if (temp1-&gt;val &lt;= temp2-&gt;val) {\n                temp-&gt;next = temp1;\n                temp1 = temp1-&gt;next;\n            } else {\n                temp-&gt;next = temp2;\n                temp2 = temp2-&gt;next;\n            }\n            temp = temp-&gt;next;\n        }\n        if (temp1 != nullptr) {\n            temp-&gt;next = temp1;\n        } else if (temp2 != nullptr) {\n            temp-&gt;next = temp2;\n        }\n        return dummyHead-&gt;next;\n    }\n};\n</code></pre> <p>\u5f52\u5e76\u6392\u5e8f, \u7a7a\u95f4\u590d\u6742\u5ea6 \\(O(logn)\\)\\ \u5982\u679c\u591a\u70b9\u5e38\u6570\u65f6\u95f4\u7684\u64cd\u4f5c, \u53ef\u4ee5\u7528\u8fed\u4ee3\u4f18\u5316\u7a7a\u95f4\u5230 \\(O(1)\\)\\ \u4f46\u4e0d\u503c\u5f53</p> <p>\u529b\u6263 no.5\\ \u6700\u957f\u56de\u6587\u5b50\u4e32</p> <pre><code>class Solution {\npublic:\n    pair&lt;int, int&gt; expandAroundCenter(const string&amp; s, int left, int right) {\n        while (left &gt;= 0 &amp;&amp; right &lt; s.size() &amp;&amp; s[left] == s[right]) {\n            --left;\n            ++right;\n        }\n        return {left + 1, right - 1};\n    }\n\n    string longestPalindrome(string s) {\n        int start = 0, end = 0;\n        for (int i = 0; i &lt; s.size(); ++i) {\n            auto [left1, right1] = expandAroundCenter(s, i, i);\n            auto [left2, right2] = expandAroundCenter(s, i, i + 1);\n            if (right1 - left1 &gt; end - start) {\n                start = left1;\n                end = right1;\n            }\n            if (right2 - left2 &gt; end - start) {\n                start = left2;\n                end = right2;\n            }\n        }\n        return s.substr(start, end - start + 1);\n    }\n};\n</code></pre> <p>\u53ef\u4ee5\u7528\u52a8\u6001\u89c4\u5212, \u4f46\u662f\u8f6c\u79fb\u65b9\u7a0b\u4ec5\u9700\u8981\u4f7f\u7528\u524d\u4e00\u4e2a\u7684\u72b6\u6001, \u6545\u53ef\u4ee5\u7528\u4e2d\u5fc3\u6269\u5c55\u6cd5\\ \u53e6\u6709 \\(O(n)\\) \u65f6\u95f4\u7684 Manacher \u7b97\u6cd5</p> <p>\u529b\u6263 no.7\\ \u53cd\u8f6c\u6574\u6570</p> <pre><code>class Solution {\npublic:\n    int reverse(int x) {\n        int rev = 0;\n        while (x != 0) {\n            if (rev &lt; INT_MIN / 10 || rev &gt; INT_MAX / 10) {\n                return 0;\n            }\n            int digit = x % 10;\n            x /= 10;\n            rev = rev * 10 + digit;\n        }\n        return rev;\n    }\n};\n</code></pre> <p>\u5224\u65ad\u4e00\u4e0b\u6ea2\u51fa</p> <p>\u529b\u6263 no.2545\\ \u6839\u636e\u7b2c K \u573a\u8003\u8bd5\u7684\u5206\u6570\u6392\u5e8f</p> <pre><code>class Solution {\npublic:\n    vector&lt;vector&lt;int&gt;&gt; sortTheStudents(vector&lt;vector&lt;int&gt;&gt;&amp; score, int k) {\n        sort(score.begin(), score.end(), [&amp;](const vector&lt;int&gt;&amp; u, const vector&lt;int&gt;&amp; v) {\n            return u[k] &gt; v[k];\n        });\n        return score;\n    }\n};\n</code></pre> <p>Lambda \u8868\u8fbe\u5f0f\u7279\u6027\u9898? sort \u539f\u578b\u9898?\\ \u6c34\u4e00\u4e2a, \u5f25\u8865\u8d1f\u7f6a\u611f</p> <p>\u529b\u6263 no.004\\ \u5bfb\u627e\u4e24\u4e2a\u6b63\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570</p> <pre><code>class Solution {\npublic:\n    double findMedianSortedArrays(vector&lt;int&gt;&amp; nums1, vector&lt;int&gt;&amp; nums2) {\n        if (nums1.size() &gt; nums2.size()) {\n            return findMedianSortedArrays(nums2, nums1);\n        }\n\n        int m = nums1.size();\n        int n = nums2.size();\n        int left = 0, right = m;\n        // median1 :\u524d\u4e00\u90e8\u5206\u7684\u6700\u5927\u503c\n        // median2 :\u540e\u4e00\u90e8\u5206\u7684\u6700\u5c0f\u503c\n        int median1 = 0, median2 = 0;\n\n        while (left &lt;= right) {\n            // \u524d\u4e00\u90e8\u5206\u5305\u542b nums1[0 .. i-1] \u548c nums2[0 .. j-1]\n            // \u540e\u4e00\u90e8\u5206\u5305\u542b nums1[i .. m-1] \u548c nums2[j .. n-1]\n            int i = (left + right) / 2;\n            int j = (m + n + 1) / 2 - i;\n\n            // nums_im1, nums_i, nums_jm1, nums_j \u5206\u522b\u8868\u793a nums1[i-1], nums1[i], nums2[j-1], nums2[j]\n            int nums_im1 = (i == 0 ? INT_MIN : nums1[i - 1]);\n            int nums_i = (i == m ? INT_MAX : nums1[i]);\n            int nums_jm1 = (j == 0 ? INT_MIN : nums2[j - 1]);\n            int nums_j = (j == n ? INT_MAX : nums2[j]);\n\n            if (nums_im1 &lt;= nums_j) {\n                median1 = max(nums_im1, nums_jm1);\n                median2 = min(nums_i, nums_j);\n                left = i + 1;\n            } else {\n                right = i - 1;\n            }\n        }\n\n        return (m + n) % 2 == 0 ? (median1 + median2) / 2.0 : median1;\n    }\n};\n</code></pre> <p>\u7b2c\u4e00\u79cd\u89e3\u6cd5, \u6bcf\u6b21\u9009\u53d6\u4e24\u6570\u7ec4\u5404 k/2 \u4e2a\u6570, \u53bb\u6389\u8f83\u5c0f\u96c6\u5408, \u66f4\u65b0 k\\ \u7b2c\u4e8c\u79cd, \u7a33\u5b9a\u9009\u53d6\u6570\u91cf\u548c\u4e3a k \u7684, \u4e8c\u5206\u641c\u7d22\u4f4d\u7f6e, \u76f4\u5230\u6ee1\u8db3\u4ea4\u53c9\u5c0f\u4e8e\u5173\u7cfb</p> <p>\u529b\u6263 no.008\\ atoi</p> <pre><code>class Solution {\npublic:\n    int myAtoi(string s) {\n        bool b=true;\n        long long ans=0;\n        int i(0);\n        for(i;i&lt;s.size();i++){\n            if(s[i]==' ') continue;\n            else if(s[i]=='-'||s[i]=='+'){\n                b=s[i]=='-'?false:true;++i;\n                break;\n            }\n            else break;\n        }\n        for(i;i&lt;s.size();i++){\n            if(s[i]&lt;'0'||s[i]&gt;'9') break;\n            ans=ans*10+(s[i]-'0');\n            if(ans&gt;INT_MAX){\n                if(b) ans=INT_MAX;\n                else ans=(long long)INT_MAX+1;\n                break;\n            }\n        }\n        return b?ans:-ans;\n    }\n};\n</code></pre> <p>\u53cd\u601d\u4e86\u4e00\u4e0b, \u4e0d\u8be5\u5c06 trim \u4e0e +- \u653e\u5728\u4e00\u8d77\u5224\u65ad</p> <p>\u529b\u6263 no.24\\ \u4e24\u4e24\u4ea4\u6362\u94fe\u8868\u4e2d\u7684\u8282\u70b9</p> <pre><code>class Solution {\npublic:\n    ListNode* swapPairs(ListNode* head) {\n        ListNode* dummyHead = new ListNode(0);\n        dummyHead-&gt;next = head;\n        ListNode* temp = dummyHead;\n        while (temp-&gt;next != nullptr &amp;&amp; temp-&gt;next-&gt;next != nullptr) {\n            ListNode* node1 = temp-&gt;next;\n            ListNode* node2 = temp-&gt;next-&gt;next;\n            temp-&gt;next = node2;\n            node1-&gt;next = node2-&gt;next;\n            node2-&gt;next = node1;\n            temp = node1;\n        }\n        ListNode* ans = dummyHead-&gt;next;\n        delete dummyHead;\n        return ans;\n    }\n};\n</code></pre> <p>\u6c34\u4e2d\u6c34</p> <p>\u529b\u6263 contest no.429</p> <p>Q1. \u4f7f\u6570\u7ec4\u5143\u7d20\u4e92\u4e0d\u76f8\u540c\u6240\u9700\u7684\u6700\u5c11\u64cd\u4f5c\u6b21\u6570</p> <pre><code>class Solution {\npublic:\n    int minimumOperations(vector&lt;int&gt;&amp; nums) {\n        int i=nums.size()-1;\n        int m[105];\n        for(i;i&gt;=0;i--){\n            if(!m[nums[i]]) m[nums[i]]=1;\n            else break;\n        }\n        return (i+3)/3;\n    }\n};\n</code></pre> <p>easy</p> <p>Q2. \u6267\u884c\u64cd\u4f5c\u540e\u4e0d\u540c\u5143\u7d20\u7684\u6700\u5927\u6570\u91cf</p> <pre><code>class Solution {\npublic:\n    int maxDistinctElements(vector&lt;int&gt;&amp; nums, int k) {\n        sort(nums.begin(), nums.end());\n        unordered_map&lt;int, bool&gt; m;\n        int ans(0);\n        int j(INT_MIN);\n        for(int i:nums){\n            for(j=max(j, i-k);j&lt;=i+k;j++){\n                if(!m[j]){\n                    m[j]=true;\n                    ans++;\n                    break;\n                }\n            }\n        }\n        return ans;\n    }\n};\n</code></pre> <p>mid</p> <p>\u529b\u6263 no.1185\\ \u4e00\u5468\u4e2d\u7684\u7b2c\u51e0\u5929</p> <pre><code>// \u76f4\u63a5\u8ba1\u7b97\u5f53\u524d\u65e5\u671f\u5230 1971 \u5e74 1 \u6708 1 \u65e5\u7684\u5929\u6570, \u7136\u540e\u6a21 7 \u5373\u53ef\n\n// \u57fa\u59c6\u62c9\u5c14\u68ee\u8ba1\u7b97\u516c\u5f0f\nclass Solution {\npublic:\n    string dayOfTheWeek(int day, int month, int year) {\n        if ( month == 1 || month == 2 )\n        {\n            month = month + 12 ;\n            year -- ;\n        }\n        int index = 0 ;\n        index = ( day + 2 * month + 3 * ( month + 1 ) / 5 + year + year / 4 - year / 100 + year / 400 +1) % 7 ;\n        return index ;\n    }\n};\n\n// \u8521\u52d2\u516c\u5f0f\nclass Solution {\npublic:\n    string dayOfTheWeek(int d, int m, int y) {\n        if(m &lt; 3) m += 12, --y;\n        int c = y/100;\n        y %= 100;\n        int D = c/4 - 2*c + y + y/4 + 13*(m+1)/5 + d - 1 + 210;//\u52a0\u4e0a 30*7 \u9632\u6b62\u51fa\u73b0\u8d1f\u6570\n        return D%7;\n    }\n};\n\n// Tomohiko Sakamoto \u7b97\u6cd5\nclass Solution {\npublic:\n    string dayOfTheWeek(int d, int m, int y) {\n    static int t[12] = { 0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4 };  \n    if (m &lt; 3) y--;  \n    return (y + y / 4 - y / 100 + y / 400 + t[m - 1] + d) % 7;\n    }\n};\n\n\u529b\u6263 no.258  \n\u5404\u4f4d\u76f8\u52a0  \n```C++\nclass Solution {\npublic:\n    int addDigits(int num) {\n        return (num - 1) % 9 + 1;\n    }\n};\n</code></pre> <p>\u6570\u5b66\u65b9\u6cd5, \u5176\u5b9e\u53d6\u4f59 9 \u5c31\u597d\u4e86, \u4f46\u662f\u4e0d\u540c\u7684\u8bed\u8a00\u6709\u4e0d\u540c\u7684\u53d6\u4f59\u89c4\u5219</p> <p>\u529b\u6263 no.1863\\ \u627e\u51fa\u6240\u6709\u5b50\u96c6\u7684\u5f02\u6216\u603b\u548c\u518d\u6c42\u548c</p> <pre><code>// \u679a\u4e3e\u5b50\u96c6, \u7528\u4e00\u4e2a n \u4f4d\u7684\u4e8c\u8fdb\u5236\u6570\u7684\u6bcf\u4e00\u4f4d\u8868\u793a\u5b50\u96c6\u7684\u5143\u7d20, 1 \u8868\u793a\u8be5\u5143\u7d20\u5728\u5b50\u96c6\u4e2d, 0 \u8868\u793a\u4e0d\u5728\u5b50\u96c6\u4e2d\n\n// \u6309\u4f4d\u8d21\u732e\nclass Solution {\npublic:\n    int subsetXORSum(vector&lt;int&gt;&amp; nums) {\n        int res = 0;\n        int n = nums.size();\n        for (auto num: nums){\n            res |= num;\n        }\n        return res &lt;&lt; (n - 1);\n    }\n};\n</code></pre> <p>\u6240\u6709\u5143\u7d20\u8be5\u4f4d\u90fd\u4e3a 0, \u6240\u6709\u5b50\u96c6\u5f02\u6216\u603b\u548c\u4e2d\u8be5\u4f4d\u5747\u4e3a, 0, \u53cd\u4e4b, \u6240\u6709\u5b50\u96c6\u5f02\u6216\u603b\u548c\u4e2d\u8be5\u4f4d\u4e3a 0 \u7684\u4e2a\u6570\u4e0e\u4e3a 1 \u7684\u4e2a\u6570\u76f8\u7b49, \u5747\u4e3a \\(2^{n-1}\\)\\ \u56e0\u6b64\u6309\u4f4d\u6216\u770b\u6709\u6ca1\u6709 1, \u82e5\u6709\u8d21\u732e\u4e3a\u8be5\u4f4d\u503c*\\(2^{n-1}\\)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","title":"\u6570\u636e\u7ed3\u6784","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u5927\u8bdd\u6570\u636e\u7ed3\u6784 - \u7cbe\u7b80\u800c\u4e0d\u7f3a, \u7cbe\u7b80\u7248\u7684\u7b97\u6cd5 (\u7b2c\u56db\u7248) - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_3","title":"\u6570\u636e\u7ed3\u6784\u7eea\u8bba","text":"<p>\u6570\u636e\u7ed3\u6784\u662f\u4e00\u95e8\u7814\u7a76\u975e\u6570\u503c\u8ba1\u7b97\u7684\u7a0b\u5e8f\u8bbe\u8ba1\u95ee\u9898\u4e2d\u7684\u64cd\u4f5c\u5bf9\u8c61, \u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u548c\u64cd\u4f5c\u7b49\u76f8\u5173\u95ee\u9898\u7684\u5b66\u79d1</p> <ul> <li>\u6570\u636e, \u6570\u636e\u5143\u7d20, \u6570\u636e\u9879 ---- \u7c7b, \u5bf9\u8c61, \u6210\u5458 (\u7b80\u5355\u5bf9\u6bd4\u4e00\u4e0b, \u4e0d\u4e25\u8c28)</li> <li>\u903b\u8f91\u7ed3\u6784\u5206\u4e3a\u96c6\u5408, \u7ebf\u6027, \u6811\u5f62, \u56fe\u5f62</li> <li>\u7269\u7406\u7ed3\u6784\u5206\u4e3a\u987a\u5e8f, \u94fe\u5f0f</li> <li>ADT \u62bd\u8c61\u6570\u636e\u7c7b\u578b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_4","title":"\u7b97\u6cd5","text":"<ul> <li>\u7b97\u6cd5\u5177\u6709 5 \u4e2a\u57fa\u672c\u7279\u6027: \u8f93\u5165, \u8f93\u51fa, \u6709\u7a77\u6027, \u786e\u5b9a\u6027, \u53ef\u884c\u6027</li> <li>\u4f18\u79c0\u7b97\u6cd5\u5e94\u8be5\u5177\u6709: \u6b63\u786e\u6027, \u53ef\u8bfb\u6027, \u5065\u58ee\u6027 (\u5bf9\u6297\u4e0d\u5408\u6cd5\u8f93\u5165), \u9ad8\u6548\u6027 (\u65f6\u7a7a)</li> <li>\u7b80\u4ecb\u65f6\u7a7a\u590d\u6742\u5ea6, \u4e0d\u8d58\u8ff0 (\u6ce8\u610f\u7a7a\u95f4\u590d\u6742\u5ea6\u662f\u7b97\u6cd5\u8f85\u52a9\u7a7a\u95f4\u5bf9\u4e8e\u8f93\u5165\u91cf\u7684\u9636, \u8fd9\u662f\u6211\u4e4b\u524d\u672a\u660e\u786e\u7684)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_5","title":"\u7ebf\u6027\u8868","text":"<ul> <li>\u7279\u6027: \u987a\u5e8f (\u524d\u9a71\u4e0e\u540e\u7ee7), \u6709\u7a77</li> <li>\u57fa\u672c\u65b9\u6cd5: init, is_empty, clear, get, find, insert, delete, size/length, \u5176\u5b83\u65b9\u6cd5\u90fd\u53ef\u4ee5\u7528\u57fa\u672c\u65b9\u6cd5\u5efa\u7acb</li> <li>\u987a\u5e8f\u5b9e\u73b0\u9700\u8981: \u8d77\u59cb\u4f4d\u7f6e, \u6700\u5927\u5bb9\u91cf (\u6570\u7ec4\u5927\u5c0f), \u957f\u5ea6 (\u7ebf\u6027\u8868\u5927\u5c0f), \u5176\u4e3a\u968f\u673a\u5b58\u50a8\u7ed3\u6784 (\\(O(1)\\) \u65f6\u95f4\u5b58\u53d6), \u7f3a\u70b9\u662f\u63d2\u5165\u5220\u9664 \\(O(n)\\)</li> <li>\u94fe\u5f0f\u5b9e\u73b0\u57fa\u4e8e node, node \u4e2d\u6709\u6570\u636e\u57df\u4e0e\u6307\u9488\u57df, \u8fd8\u9700\u8981\u5934\u6307\u9488, \u53ef\u7528\u5934\u8282\u70b9, \u786e\u5b9a\u4f4d\u7f6e\u7684\u63d2\u5165\u5220\u9664 \\(O(1)\\), \u8bfb\u53d6 \\(O(n)\\)</li> <li>\u9759\u6001\u94fe\u8868\u5c31\u662f\u6570\u7ec4\u7684\u5143\u7d20\u662f\u8282\u70b9, \u4fdd\u5b58\u6570\u636e\u4e0e\u540e\u7ee7\u7684\u4e0b\u6807, \u5bf9\u5b83\u7684\u64cd\u4f5c\u5f80\u5f80\u7ef4\u62a4\u4e3b\u94fe\u4e0e\u5907\u7528\u94fe (\u6570\u7ec4\u7684\u9996\u5c3e\u5f80\u5f80\u662f\u5b83\u4eec\u7684\u5934), \u5143\u7d20\u4e0d\u9700\u5b9e\u9645\u79fb\u52a8, \u96be\u5728\u8868\u957f\u96be\u4ee5\u786e\u5b9a</li> <li>\u5faa\u73af\u94fe\u8868\u5229\u4e8e\u4ece\u4efb\u610f node \u5f00\u59cb\u904d\u5386, \u7ef4\u62a4\u65f6\u5f80\u5f80\u4fdd\u5b58\u5c3e\u6307\u9488</li> <li>\u53cc\u5411\u94fe\u8868\u4e5f\u662f\u5e38\u89c1\u601d\u8def</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_6","title":"\u6808\u4e0e\u961f\u5217","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_7","title":"\u6808","text":"<p>stack, LIFO \u540e\u8fdb\u5148\u51fa, \u4e3a\u9012\u5f52\u800c\u751f</p> <ul> <li>\u57fa\u672c\u65b9\u6cd5: \u53d7\u9650\u5236\u7684\u7ebf\u6027\u8868</li> <li>\u5728\u4e00\u4e2a\u6570\u7ec4\u4e0a\u5efa\u7acb\u5bf9\u5411\u751f\u957f\u7684\u4e24\u4e2a\u6808\u4ee5\u5171\u4eab\u7a7a\u95f4, \u5f53\u6570\u636e\u7c7b\u578b\u76f8\u540c\u4e14\u6570\u91cf\u5173\u7cfb\u76f8\u53cd\u65f6, \u8fd9\u53ca\u5176\u6709\u7528</li> <li>\u7ebf\u6027\u5b9e\u73b0\u7684\u7a7a\u4e3a <code>top == -1</code>, \u94fe\u5f0f\u5b9e\u73b0\u4e3a <code>top == NULL</code></li> <li>\u6808\u7684\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u662f\u4e2d\u7f00\u8868\u8fbe\u5f0f -&gt; \u540e\u7f00\u8868\u8fbe\u5f0f (\u4f18\u5148\u7ea7\u9690\u85cf\u5728\u987a\u5e8f\u4e2d)-&gt; \u7ed3\u679c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_8","title":"\u961f\u5217","text":"<p>queue, FIFO \u5148\u8fdb\u5148\u51fa</p> <ul> <li>\u57fa\u672c\u65b9\u6cd5: \u53d7\u9650\u5236\u7684\u7ebf\u6027\u8868</li> <li>\u4e3a\u907f\u514d\u53cd\u590d\u8c03\u6574\u6570\u7ec4\u961f\u5217\u4e2d\u7684\u7a7a\u95f4, \u4f7f\u7528\u5faa\u73af\u961f\u5217, \u5176\u4e3a\u7a7a\u4e0e\u6ee1\u7684\u7279\u70b9\u4e00\u81f4 \u2014\u2014 \u5934\u6307\u9488\u4e0e\u5c3e\u6307\u9488\u76f8\u7b49, \u4f7f\u7528 flag \u6216\u8005\u4fdd\u7559\u4e00\u4e2a\u7a7a\u4f4d\u4f5c\u4e3a\u6ee1\u7684\u6761\u4ef6</li> <li>\u6ce8\u610f\u5faa\u73af\u961f\u5217\u7684\u4e24\u4e2a\u6307\u9488\u524d\u540e\u987a\u5e8f\u4e0d\u786e\u5b9a, \u56e0\u800c\u8ba1\u7b97 length \u9700\u8981\u7279\u6b8a\u5904\u7406, \u5f80\u5f80\u9700\u8981\u5bf9 size \u53d6\u4f59</li> <li>\u94fe\u961f\u5217\u4e00\u5207\u5982\u5e38</li> </ul> <p>\u5728 C \u4e13\u5bb6\u7f16\u7a0b\u4e2d, \u4f5c\u8005\u6307\u51fa\u6307\u9488\u5f80\u5f80\u6307\u5411\u5934\u4e0e\u5c3e\u7684\u4e0b\u4e00\u4e2a\u8fd9\u4e00\u6570\u636e\u7ed3\u6784\u60ef\u4f8b</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_9","title":"\u4e32","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_10","title":"\u57fa\u672c","text":"<ul> <li>\u4e32\u7684\u6bd4\u8f83\u89c4\u5219\u4e3a\u5b57\u5178\u5e8f, \u6ce8\u610f a &lt; aa, \u8fd9\u4e2a\u975e\u5e38\u6734\u7d20, \u4f46\u662f\u6211\u6ca1\u6709\u6df1\u5165\u601d\u8003\u8fc7</li> <li>\u57fa\u672c\u65b9\u6cd5: init, is_empty, clear, get, find, insert, delete, size/length \u8fd9\u4e9b\u548c\u7ebf\u6027\u8868\u5f88\u76f8\u50cf, \u4f46\u6ce8\u610f\u64cd\u4f5c\u5bf9\u8c61\u662f\u5b50\u4e32<ul> <li>cat copy compare \u8fd9\u4e9b\u662f\u72ec\u7279\u7684, \u4f46\u4f3c\u4e4e\u4e5f\u80fd\u7528\u4e0a\u9762\u7684\u65b9\u6cd5\u5b9e\u73b0, \u771f\u6b63\u7279\u6b8a\u7684\u5728\u6211\u770b\u6765\u5728\u4e8e\u62f7\u8d1d\u6784\u9020\u548c\u6bd4\u8f83</li> </ul> </li> <li>\u6807\u8bb0\u4e32\u987a\u5e8f\u5b58\u50a8\u7684\u7ed3\u675f\u53ef\u4ee5\u7528 <code>\\0</code> \u6216\u8005\u8bb0\u5f55\u957f\u5ea6, \u94fe\u5f0f\u5b58\u50a8\u5f80\u5f80\u5728\u4e00\u4e2a\u8282\u70b9\u5b58\u653e\u591a\u4e2a char, \u4f46\u603b\u7684\u6765\u8bf4\u4e0d\u5efa\u8bae\u94fe\u5f0f</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_11","title":"\u4e32\u7684\u6a21\u5f0f\u5339\u914d","text":"<ul> <li>\u6734\u7d20\u7b97\u6cd5, \u66b4\u529b\u5339\u914d, \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(nm)\\), \u975e\u5e38\u6734\u7d20</li> <li>KMP \u7b97\u6cd5, \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n+m)\\), \u8ba1\u7b97\u6a21\u5f0f\u4e32\u7684 next \u6570\u7ec4 (\u5b57\u7b26\u5339\u914d\u5931\u8d25\u540e\u8df3\u8f6c\u5230\u6a21\u5f0f\u4e32\u7684\u54ea\u4e2a\u4f4d\u7f6e) \u4ee5\u4e0d\u518d\u9700\u8981\u56de\u6eaf\u4e3b\u4e32</li> <li>\u4f46\u662f\u76f8\u540c\u5b57\u7b26\u7b97 next \u4f1a\u5f62\u6210\u94fe (\u4f8b\u5982 aaaa \u7684 <code>next 0123</code>), \u56e0\u6b64\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316, \u8ba1\u7b97 nextval \u6570\u7ec4 (\u7c7b\u4f3c\u5e76\u67e5\u96c6\u7684\u8def\u5f84\u538b\u7f29)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_12","title":"\u6811","text":"<ul> <li>\u8282\u70b9\u7684\u5b50\u6811\u6570\u662f\u8282\u70b9\u7684\u5ea6, \u5ea6\u4e3a 0 \u7684\u8282\u70b9\u662f\u53f6\u8282\u70b9 / \u7ec8\u7aef\u8282\u70b9, \u53cd\u4e4b\u662f\u975e\u7ec8\u7aef\u8282\u70b9 / \u5206\u652f\u8282\u70b9, \u975e\u6839\u7684\u5206\u652f\u8282\u70b9\u4e5f\u53eb\u5185\u90e8\u8282\u70b9</li> <li>\u6811\u7684\u5ea6\u662f\u6811\u5185\u5404\u8282\u70b9\u5ea6\u7684\u6700\u5927\u503c, \u8282\u70b9\u4e4b\u95f4\u5b58\u5728\u7236\u5b50 / \u5144\u5f1f / \u7956\u5148\u5b50\u5b59\u7684\u5173\u7cfb, \u6839\u4e3a\u7b2c\u4e00\u5c42, \u6811\u6700\u5927\u8282\u70b9\u5c42\u6b21\u662f\u6811\u7684\u6df1\u5ea6</li> <li>\u6811\u6709\u5e8f\u6027\u6307\u8282\u70b9\u7684\u5de6\u53f3\u5b50\u6811\u662f\u5426\u6709\u5e8f</li> <li>\u68ee\u6797\u6307\u4e0d\u76f8\u4ea4\u7684\u6811\u7684\u96c6\u5408</li> <li>\u57fa\u672c\u65b9\u6cd5: init, is_empty, clear, create, depty, root, get, assign, parent, left, right, deltree, delnode, insert</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_13","title":"\u6811\u7684\u5b58\u50a8\u7ed3\u6784","text":"<ul> <li>\u6709\u4e09\u79cd\u8868\u793a\u6cd5: \u53cc\u4eb2\u8868\u793a\u6cd5, \u5b69\u5b50\u8868\u793a\u6cd5, \u5b69\u5b50\u5144\u5f1f\u8868\u793a\u6cd5<ul> <li>\u53cc\u4eb2: \u6bcf\u4e2a\u8282\u70b9\u4fdd\u5b58\u5176\u7236\u8282\u70b9\u7684\u7d22\u5f15, \u5e76\u4e14\u6309\u9700\u8981\u53ef\u4ee5\u4fdd\u5b58\u957f\u5b50 / \u5144\u5f1f\u7b49\u7b49</li> <li>\u5b69\u5b50: \u6bcf\u4e2a\u8282\u70b9\u4fdd\u5b58\u5176\u6240\u6709\u5b50\u8282\u70b9\u7684\u7d22\u5f15, \u6700\u4f18\u79c0\u7684\u4fdd\u5b58\u65b9\u5f0f\u662f\u7528\u6570\u7ec4\u4fdd\u5b58\u8282\u70b9, \u7528\u5355\u94fe\u8868\u4fdd\u5b58\u5b69\u5b50\u5728\u6570\u7ec4\u7684\u4f4d\u7f6e, \u4e5f\u53ef\u4e0e\u53cc\u4eb2\u8868\u793a\u6cd5\u7ed3\u5408 (\u52a0\u4e2a parent \u57df)</li> <li>\u5b69\u5b50\u5144\u5f1f: \u5c06\u6811\u53d8\u5f62\u4e3a\u4e8c\u53c9\u6811, \u6bcf\u4e2a\u8282\u70b9\u4fdd\u5b58\u5176\u957f\u5b50\u4e0e\u53f3\u5144\u5f1f\u7684\u7d22\u5f15</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_14","title":"\u4e8c\u53c9\u6811","text":"<p>\u5373\u8282\u70b9\u5ea6 &lt;= 2, \u6709\u5e8f\u7684\u6811</p> <ul> <li>\u53ea\u6709\u5de6 / \u53f3\u7684\u4e8c\u53c9\u6811\u5373\u659c\u6811 (\u94fe\u8868\u5c31\u662f)</li> <li>\u6ee1\u4e8c\u53c9\u6811: \u6240\u6709\u53f6\u8282\u70b9\u90fd\u5728\u540c\u4e00\u5c42\u7684\u4e8c\u53c9\u6811 (\\(2^n-1\\) \u4e2a\u8282\u70b9)</li> <li>\u5b8c\u5168\u4e8c\u53c9\u6811: \u9664\u4e86\u53f6\u8282\u70b9, \u6240\u6709\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b69\u5b50\u7684\u4e8c\u53c9\u6811 (\u6ee1\u4e8c\u53c9\u6811\u7684\u5b50\u96c6)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_15","title":"\u4e8c\u53c9\u6811\u6027\u8d28","text":"<ul> <li>\u7b2c \\(i\\) \u5c42\u6700\u591a\u6709 \\(2^{i-1}\\) \u4e2a\u8282\u70b9</li> <li>\u6df1\u5ea6\u4e3a \\(k\\) \u7684\u4e8c\u53c9\u6811\u6700\u591a\u6709 \\(2^k-1\\) \u4e2a\u8282\u70b9</li> <li>\\(\u53f6\u8282\u70b9\u6570 = \u5ea6\u4e3a 2 \u7684\u8282\u70b9\u6570 + 1\\)</li> <li>\\(n\\) \u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u6df1\u5ea6\u4e3a \\(\\lfloor log_2n  \\rfloor + 1\\)</li> <li>\u6709 \\(n\\) \u4e2a\u8282\u70b9\u7684\u5b8c\u5168\u4e8c\u53c9\u6811, \u6309\u5c42\u5e8f\u7f16\u53f7, \u5bf9\u4efb\u4e00\u8282\u70b9 \\(i\\) \u6709:<ul> <li>\u82e5 \\(i=1\\), \u5219\u8282\u70b9 \\(i\\) \u662f\u4e8c\u53c9\u6811\u7684\u6839, \u65e0\u53cc\u4eb2; \u82e5 \\(i&gt;1\\), \u5219\u5176\u53cc\u4eb2\u662f\u8282\u70b9 \\(i/2\\)</li> <li>\u82e5 \\(2i&gt;n\\), \u5219\u8282\u70b9 \\(i\\) \u65e0\u5de6\u5b69\u5b50, \u5426\u5219\u5176\u5de6\u5b69\u5b50\u662f\u8282\u70b9 \\(2i\\)</li> <li>\u82e5 \\(2i+1&gt;n\\), \u5219\u8282\u70b9 \\(i\\) \u65e0\u53f3\u5b69\u5b50, \u5426\u5219\u5176\u53f3\u5b69\u5b50\u662f\u8282\u70b9 \\(2i+1\\)</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_16","title":"\u4e8c\u53c9\u6811\u5b58\u50a8\u7ed3\u6784","text":"<ul> <li>\u5b8c\u5168\u4e8c\u53c9\u6811\u7528\u6570\u7ec4\u5b58, \u5229\u7528\u6700\u540e\u4e00\u4e2a\u6027\u8d28</li> <li>\u4e00\u822c\u4e8c\u53c9\u6811\u7528\u94fe\u5f0f\u5b58\u50a8, \u6bcf\u4e2a\u8282\u70b9\u4fdd\u5b58\u5176\u5de6\u5b69\u5b50\u4e0e\u53f3\u5b69\u5b50\u7684\u7d22\u5f15</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_17","title":"\u4e8c\u53c9\u6811\u904d\u5386","text":"<ul> <li>\u524d\u5e8f\u4e2d\u5e8f\u540e\u5e8f\u5c42\u5e8f<ul> <li>\u524d\u5e8f: \u6839\u5de6\u53f3</li> <li>\u4e2d\u5e8f: \u5de6\u6839\u53f3</li> <li>\u540e\u5e8f: \u5de6\u53f3\u6839</li> </ul> </li> </ul> <p>\u7ed9\u5b9a\u524d\u4e2d / \u4e2d\u540e\u904d\u5386\u7684\u5e8f\u5217, \u53ef\u552f\u4e00\u786e\u5b9a\u4e8c\u53c9\u6811</p> <pre><code>void fun (tree* t) {\n    if (t == NULL) return;\n    // \u524d\u5e8f\u5de5\u4f5c\n    fun(t-&gt;left);\n    // \u4e2d\u5e8f\u5de5\u4f5c\n    fun(t-&gt;right);\n    // \u540e\u5e8f\u5de5\u4f5c\n}\n// \u9012\u5f52\u5b9e\u73b0, \u53ea\u662f\u4e1a\u52a1\u4ee3\u7801\u4f4d\u7f6e\u4e0d\u540c\n</code></pre> <ul> <li>\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u5efa\u7acb\u8282\u70b9\u5373\u53ef\u5b9e\u73b0\u4e8c\u53c9\u6811\u5efa\u7acb (\u6839\u636e\u7ed9\u5b9a\u8282\u70b9\u5e8f\u5217, \u5728\u5e8f\u5217\u4e2d\u7528\u4e00\u5b9a\u5b57\u7b26\u6307\u793a\u8be5\u5b50\u6811\u4e3a\u7a7a, \u65b9\u53ef \"\u8f6c\u5f2f\")</li> <li>\u5c42\u5e8f: \u6309\u5c42\u904d\u5386</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_18","title":"\u7ebf\u7d22\u5316","text":"<ul> <li>\u4e8c\u53c9\u6811\u6709\u5927\u91cf\u7684\u7a7a\u6307\u9488, \u6d6a\u8d39\u7a7a\u95f4, \u53ef\u4ee5\u5229\u7528\u8fd9\u4e9b\u7a7a\u6307\u9488\u6765\u5b58\u50a8\u67d0\u79cd\u904d\u5386\u7684\u524d\u9a71 / \u540e\u7ee7\u4fe1\u606f</li> <li>\u4f46\u9700\u8981\u5728\u4e8c\u53c9\u6811\u7684\u7ed3\u6784\u4e2d\u589e\u52a0\u4e24\u4e2a\u6807\u5fd7\u57df, \u8868\u793a\u8be5\u8282\u70b9\u7684\u5de6\u53f3\u5b69\u5b50\u662f\u5426\u4e3a\u524d\u9a71 / \u540e\u7ee7</li> <li>\u7ebf\u7d22\u5316\u7528\u4e8e\u7ecf\u5e38\u4ee5\u67d0\u79cd\u6b21\u5e8f\u904d\u5386\u7684\u60c5\u51b5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_19","title":"\u8f6c\u5316","text":"<ul> <li>\u4e8c\u53c9\u6811\u662f\u76f8\u5bf9\u65b9\u4fbf\u5904\u7406\u7684\u4e00\u79cd\u6811, \u6240\u4ee5\u6211\u4eec\u66f4\u5e0c\u671b\u5c06\u5176\u5b83\u6811 / \u68ee\u6797\u8f6c\u5316</li> <li>\u6811\u8f6c\u5316\u4e3a\u4e8c\u53c9\u6811\u7684\u65b9\u6cd5\u5f88\u7b80\u5355, \u6bcf\u4e2a\u8282\u70b9\u4fdd\u5b58\u5176\u7b2c\u4e00\u4e2a\u5b69\u5b50\u4e0e\u53f3\u5144\u5f1f\u7684\u7d22\u5f15, \u53cd\u4e4b\u4ea6\u53ef</li> <li>\u68ee\u6797\u8f6c\u5316\u4e3a\u4e8c\u53c9\u6811\u7684\u65b9\u6cd5, \u5c06\u6bcf\u68f5\u6811\u8f6c\u5316\u4e3a\u6839\u53ea\u6709\u5de6\u5b69\u5b50\u7684\u4e8c\u53c9\u6811, \u7136\u540e\u5c06\u53e6\u4e00\u4e8c\u53c9\u6811\u4f5c\u4e3a\u524d\u4e00\u68f5\u4e8c\u53c9\u6811\u7684\u53f3\u5b69\u5b50, \u53cd\u4e4b\u4ea6\u53ef</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_20","title":"\u8d6b\u592b\u66fc\u6811","text":"<p>\u8d6b\u592b\u66fc\u7f16\u7801\u662f\u6700\u57fa\u672c\u7684\u6570\u636e\u538b\u7f29\u7b97\u6cd5, \u5176\u6838\u5fc3\u601d\u60f3\u662f\u7528\u6700\u77ed\u7684\u7f16\u7801\u8868\u793a\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u5b57\u7b26</p> <ul> <li>\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u5373\u6240\u6709\u53f6\u8282\u70b9\u7684\u6743\u503c\u4e0e\u6df1\u5ea6\u7684\u4e58\u79ef\u4e4b\u548c</li> <li>\u5e26\u6743\u8def\u5f84\u957f\u5ea6\u6700\u5c0f\u7684\u4e8c\u53c9\u6811\u79f0\u4e3a\u8d6b\u592b\u66fc\u6811</li> <li>\u8d6b\u592b\u66fc\u6811\u7684\u6784\u9020\u65b9\u6cd5\u6709\u56fa\u5b9a\u7684\u8303\u5f0f, \u5373\u6bcf\u6b21\u4ece\u6743\u503c\u6700\u5c0f\u7684\u4e24\u4e2a\u8282\u70b9 / \u5b50\u6811\u4e2d\u53d6\u51fa, \u5408\u5e76\u4e3a\u4e00\u4e2a\u5b50\u6811, \u76f4\u5230\u53ea\u5269\u4e0b\u4e00\u4e2a\u6811 (\u5411\u4e0a\u751f\u957f)</li> <li>\u5c06\u5b57\u7b26\u7684\u51fa\u73b0\u9891\u7387\u4f5c\u4e3a\u6743\u503c, \u5373\u53ef\u6784\u9020\u8d6b\u592b\u66fc\u6811, \u5e76\u4ee5\u8d6b\u592b\u66fc\u6811\u7684\u8def\u5f84\u4f5c\u4e3a\u7f16\u7801 (\u5de6 0 \u53f3 1), \u786e\u4fdd\u7f16\u7801\u662f\u524d\u7f00\u7801 (\u907f\u514d\u6b67\u4e49)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_21","title":"\u56fe","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_22","title":"\u6982\u5ff5","text":"<ul> <li>\u9876\u70b9 V (vertex), \u56fe\u4e2d\u8282\u70b9\u6709\u7a77\u975e\u7a7a, \u8fb9 E \u53ef\u7a7a</li> <li>\u8fb9\u53ef\u6709\u5411 / \u65e0\u5411, \u5199\u4f5c <code>&lt;A, B&gt;/(A, B)</code> \u6709\u5411\u8fb9\u4ea6\u79f0\u5f27, \u4e24\u9876\u70b9\u4f5c\u5f27\u5934\u5f27\u5c3e</li> <li>\u7b80\u5355\u56fe \u6307\u65e0 (A, A) \u4e14\u540c\u4e00\u6761\u8fb9\u552f\u4e00</li> <li>\u8fb9 / \u5f27\u76f8\u5bf9\u4e8e\u70b9\u7684\u6570\u51b3\u5b9a\u7a00\u758f / \u7a20\u5bc6 (\u6a21\u7cca\u6982\u5ff5)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_23","title":"\u5b8c\u5168\u56fe","text":"<ul> <li>\u4efb\u610f\u4e24\u70b9\u90fd\u6709\u8fb9\u7684\u65e0\u5411\u56fe\u79f0_\u65e0\u5411\u5b8c\u5168\u56fe_ (\u5171 \\((n*(n-1))/2\\) \u6761\u8fb9)</li> <li>\u6709\u5411\u5b8c\u5168\u56fe\u7c7b\u4f3c (\u5171 \\((n*(n-1))\\) \u6761\u8fb9)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_24","title":"\u6743","text":"<ul> <li>\u5e26\u6743 (\u6307\u8fb9 / \u5f27) \u56fe\u4ea6\u79f0\u7f51</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_25","title":"\u70b9\u8fb9\u5173\u7cfb","text":"<ul> <li>\u65e0\u5411\u56fe\u6709\u8fb9 <code>(A, B)</code>, \u79f0 AB \u90bb\u63a5, \u8fb9\u4f9d\u9644 / \u5173\u8054 AB, \u70b9\u76f8\u63a5\u8fb9\u6570\u4e3a\u5176\u5ea6</li> <li>\u6709\u5411\u56fe\u6709\u5f27 <code>&lt;A, B&gt;</code>, \u79f0 A \u90bb\u63a5\u5230 B, B \u90bb\u63a5\u81ea A, \u5f27\u5173\u8054 AB, \u70b9\u76f8\u63a5\u8fb9\u6570\u4e3a\u5176\u5ea6, \u5206\u51fa\u5ea6 / \u5165\u5ea6</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_26","title":"\u8def\u5f84","text":"<ul> <li>\u8def\u5f84\u5373\u9876\u70b9\u5e8f\u5217, \u5176\u957f\u5ea6\u4e3a\u8fb9 / \u5f27\u6570\u76ee, \u9876\u70b9\u4e0d\u91cd\u590d\u4e3a\u7b80\u5355\u8def\u5f84</li> <li>\u5934\u5c3e\u9876\u70b9\u4e00\u81f4\u4e3a\u56de\u8def / \u73af, \u9664\u53bb\u5934\u9876\u70b9\u4e0d\u91cd\u590d\u4e3a\u7b80\u5355\u56de\u8def / \u73af</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_27","title":"\u8fde\u901a","text":"<ul> <li>\u65e0\u5411\u56fe\u4e24\u9876\u70b9\u6709\u8def\u5f84\u4e3a\u8fde\u901a</li> <li>\u65e0\u5411\u56fe\u4efb\u610f\u4e24\u70b9\u8fde\u901a\u4e3a\u8fde\u901a\u56fe</li> <li>\u6781\u5927 (\u6700\u591a\u9876\u70b9) \u8fde\u901a\u5b50\u56fe (\u5305\u542b\u4f9d\u9644\u7684\u8fb9) \u79f0\u4e3a\u56fe\u7684\u8fde\u901a\u5206\u91cf</li> </ul> <p>\u6709\u5411\u56fe\u7c7b\u4f3c\u6982\u5ff5\u8981\u6c42\u53cc\u5411\u5b58\u5728\u8def\u5f84</p> <ul> <li>\u5f3a\u8fde\u901a\u56fe / \u5f3a\u8fde\u901a\u5206\u91cf</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_28","title":"\u751f\u6210\u6811","text":"<ul> <li>\u8fde\u901a\u56fe\u7684\u6781\u5c0f (\u5305\u542b\u6240\u6709\u70b9\u4e0e\u6b64\u60c5\u51b5\u7684\u6700\u5c11\u8fb9 \\((n-1)\\)) \u8fde\u901a\u5b50\u56fe\u79f0\u4e3a\u751f\u6210\u6811</li> <li>\u6709\u5411\u56fe\u4e2d\u6709\u4e00\u9876\u70b9\u5165\u5ea6\u4e3a 0, \u5176\u4f59\u4e3a 1 \u79f0\u6709\u5411\u6811</li> <li>\u6709\u5411\u56fe\u53bb\u6389\u4e00\u4e9b\u5f27\u81f3\u5176\u4ec5\u7531\u6709\u5411\u6811\u6784\u6210\u79f0\u5176\u4e3a\u56fe\u7684\u6709\u5411\u68ee\u6797</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_29","title":"\u57fa\u672c\u65b9\u6cd5","text":"<ul> <li>clear, create, delgrapy, insert, delete, get, is_adjacent, get_adjacent, dfs, bfs...</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_30","title":"\u5b58\u50a8\u7ed3\u6784","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_31","title":"\u90bb\u63a5\u77e9\u9635","text":"<ul> <li>\u90bb\u63a5\u77e9\u9635\u5373\u4e00\u7ef4\u6570\u7ec4\u8868\u793a\u70b9\u4fe1\u606f, \u4e8c\u7ef4\u6570\u7ec4\u8868\u793a\u4e24\u70b9\u95f4\u662f\u5426\u6709\u8fb9</li> <li>\u65e0\u5411\u7b80\u5355\u56fe\u663e\u7136\u4e3b\u5bf9\u89d2\u7ebf\u4e3a 0, \u4e14\u5bf9\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u5bf9\u79f0</li> <li>\u5bf9\u4e8e\u6709\u6743\u56fe, \u4ea6\u53ef\u7528\u4e8c\u7ef4\u6570\u7ec4\u8868\u793a\u4e24\u70b9\u95f4\u6743\u503c\u5e76\u7528\u4e00\u4e2a\u7279\u6b8a\u503c\u8868\u793a\u4e24\u70b9\u95f4\u65e0\u8fb9</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_32","title":"\u90bb\u63a5\u8868","text":"<ul> <li>\u90bb\u63a5\u8868\u5373\u4e00\u7ef4\u6570\u7ec4\u5206\u6570\u636e\u57df\u4e0e\u6307\u9488\u57df, \u6307\u9488\u57df\u4fdd\u5b58\u90bb\u63a5\u70b9\u7684\u7d22\u5f15</li> <li>\u5bf9\u4e8e\u6709\u5411\u56fe, \u53ef\u4ee5\u5efa\u7acb\u4e24\u4e2a\u90bb\u63a5\u8868\u5206\u522b\u8868\u793a\u51fa\u5165</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_33","title":"\u5341\u5b57\u94fe\u8868","text":"<ul> <li>\u5c06\u6709\u5411\u56fe\u7684\u90bb\u63a5\u8868\u4e0e\u9006\u90bb\u63a5\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u5341\u5b57\u94fe\u8868, \u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u6761\u5f27, \u8bb0\u5f55\u8d77\u70b9 / \u7ec8\u70b9 / \u540c\u8d77\u70b9\u4e0b\u4e00\u6761\u5f27 / \u540c\u7ec8\u70b9\u4e0b\u4e00\u6761\u5f27</li> <li>\u662f\u5bf9\u6709\u5411\u56fe\u90bb\u63a5\u8868\u7684\u4f18\u5316</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_34","title":"\u90bb\u63a5\u591a\u91cd\u8868","text":"<ul> <li>\u5c06\u65e0\u5411\u56fe\u9876\u70b9\u7684\u90bb\u63a5\u8868\u5408\u5e76\u4e3a\u4e00\u4e2a\u90bb\u63a5\u591a\u91cd\u8868, \u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u6761\u8fb9, \u8bb0\u5f55\u9876\u70b9 0 / \u9876\u70b9 1 / \u9876\u70b9 0 \u4e0b\u4e00\u6761\u8fb9 / \u9876\u70b9 1 \u4e0b\u4e00\u6761\u8fb9</li> <li>\u662f\u5bf9\u65e0\u5411\u56fe\u90bb\u63a5\u8868\u7684\u4f18\u5316</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_35","title":"\u8fb9\u96c6\u6570\u7ec4","text":"<ul> <li>\u8fb9\u96c6\u6570\u7ec4\u5373\u4e24\u4e2a\u4e00\u7ef4\u6570\u7ec4\u5206\u522b\u4fdd\u5b58\u70b9\u4fe1\u606f\u4e0e\u8fb9\u7684\u8d77\u70b9 / \u7ec8\u70b9 / \u6743</li> <li>\u5bf9\u9876\u70b9\u5904\u7406\u5f88\u6162, \u662f\u5904\u7406\u8fb9\u7684\u7279\u5316</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_36","title":"\u56fe\u7684\u904d\u5386","text":"<p>\u65e0\u8bba\u5982\u4f55, \u4f60\u603b\u8981\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u662f\u5426\u5df2\u7ecf\u8bbf\u95ee\u8be5\u9876\u70b9</p> <ul> <li>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 (DFS)</li> </ul> <pre><code>dfs(\u56fe, \u4f4d\u7f6e){\n    \u6807\u8bb0\u5df2\u8bbf\u95ee\n    \u5de5\u4f5c\n    \u679a\u4e3e\u6240\u6709\u70b9\n        \u5982\u679c\u90bb\u63a5\u4e14\u672a\u8bbf\u95ee\n            dfs(\u56fe, \u4f4d\u7f6e)\n}\n// \u90bb\u63a5\u77e9\u9635\u65f6\u95f4 O(n^2), \u90bb\u63a5\u8868\u65f6\u95f4 O(n+e), \u8003\u8651\u7a00\u758f\u5bc6\u96c6\nmain(){\n    \u521d\u59cb\u5316\n    \u679a\u4e3e\u6240\u6709\u70b9\n        \u5982\u679c\u672a\u8bbf\u95ee\n            dfs(\u56fe, \u4f4d\u7f6e)\n}\n</code></pre> <ul> <li>\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22 (BFS)</li> </ul> <pre><code>bfs(\u56fe){\n    \u521d\u59cb\u5316\n    \u679a\u4e3e\u6240\u6709\u70b9\n        \u5982\u679c\u672a\u8bbf\u95ee\n            \u6807\u8bb0\u5df2\u8bbf\u95ee\n            \u5de5\u4f5c\n            \u5165\u961f\n                while \u961f\u5217\u975e\u7a7a\n                    \u51fa\u961f\n                    \u679a\u4e3e\u90bb\u63a5\u4e14\u672a\u8bbf\u95ee\n                        \u6807\u8bb0\u5df2\u8bbf\u95ee\n                        \u5de5\u4f5c\n                        \u5165\u961f\n}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_37","title":"\u56fe\u7684\u5e94\u7528\u7b97\u6cd5","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_38","title":"\u6700\u5c0f\u751f\u6210\u6811","text":"<ul> <li>\u6700\u5c0f\u751f\u6210\u6811\u5373\u6743\u503c\u6700\u5c0f\u7684\u751f\u6210\u6811</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#prim","title":"prim \u7b97\u6cd5","text":"<p>\\(O(n^2)\\)</p> <ul> <li>\u4ece\u4e00\u4e2a\u9876\u70b9\u5f00\u59cb, \u6bcf\u6b21\u9009\u53d6\u65b0\u9876\u70b9\u4e0e\u5df2\u8bbf\u95ee\u9876\u70b9\u76f8\u8fde\u7684\u6700\u5c0f\u6743\u503c\u7684\u8fb9, \u76f4\u5230\u6240\u6709\u9876\u70b9\u90fd\u88ab\u8bbf\u95ee</li> <li>\u5b9e\u73b0\u4e2d\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u8fde\u63a5\u9876\u70b9\u7684\u987a\u5e8f\u53e6\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6240\u6709\u9876\u70b9\u4e0e\u5df2\u8bbf\u95ee\u96c6\u5408\u7684\u6700\u5c0f\u6743\u503c</li> <li>\u6743\u4e3a 0 \u7684\u8fb9\u8868\u793a\u5df2\u8bbf\u95ee\u96c6\u5408\u4e0e\u8be5\u9876\u70b9\u76f8\u8fde, \u6743\u4e3a\u65e0\u7a77\u7684\u8fb9\u8868\u793a\u8be5\u9876\u70b9\u672a\u88ab\u8bbf\u95ee</li> <li>\u6bcf\u8fde\u63a5\u4e00\u4e2a\u9876\u70b9\u5c31\u66f4\u65b0\u6700\u5c0f\u6743\u503c, \u76f4\u81f3\u5168\u4e3a 0</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#kruskal","title":"kruskal \u7b97\u6cd5","text":"<p>\\(O(eloge)\\)</p> <ul> <li>\u6bcf\u6b21\u9009\u53d6\u4e0d\u6210\u73af\u7684\u6700\u5c0f\u6743\u503c\u7684\u8fb9, \u76f4\u5230\u6240\u6709\u9876\u70b9\u90fd\u88ab\u8bbf\u95ee</li> <li>\u5b9e\u73b0\u4e2d\u7528\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6240\u6709\u8fb9\u7684\u4fe1\u606f, \u53e6\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u9876\u70b9\u5f52\u5c5e\u7684\u96c6\u5408 (\u521d\u59cb\u5316\u4e3a 0)</li> <li>\u5bf9\u4e8e\u8fb9\u7684\u4e24\u9876\u70b9, \u6839\u636e\u96c6\u5408\u8def\u5f84\u67e5\u627e\u5f52\u5c5e, \u76f8\u7b49\u5373\u6210\u73af, \u82e5\u4e3a 0, \u5219\u8fd4\u56de\u9876\u70b9\u81ea\u8eab\u7f16\u53f7 (\u81ea\u8eab\u96c6\u5408)</li> <li><code>\u6570\u7ec4[begin]</code> = end, \u8868\u793a begin \u9876\u70b9\u5f52\u5c5e end \u96c6\u5408</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_39","title":"\u6700\u77ed\u8def\u5f84","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#dijkstra","title":"dijkstra \u7b97\u6cd5","text":"<p>\u5355\u6e90 \\(O(n^2)\\), \u591a\u6e90 \\(O(n^3)\\)</p> <ul> <li>\u5b9e\u73b0\u4e2d\u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u524d\u9a71\u8def\u5f84, \u4e00\u4e2a\u6570\u7ec4\u8bb0\u5f55\u6700\u77ed\u8def\u5f84\u6743\u503c, \u4e00\u4e2a\u6570\u7ec4\u6807\u8bb0\u662f\u5426\u5df2\u6c42\u5f97</li> <li>\u6bcf\u6b21\u9009\u53d6\u6700\u77ed\u8def\u5f84\u7684\u9876\u70b9, \u66f4\u65b0\u5176\u90bb\u63a5\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84\u6743\u503c, \u5e76\u66f4\u65b0\u8be5\u9876\u70b9\u6700\u77ed\u8def\u5f84\u7684\u4e0a\u4e00\u9876\u70b9, \u76f4\u81f3\u904d\u5386\u5b8c\u6240\u6709\u9876\u70b9</li> <li>\u8d2a\u5fc3\u9009\u62e9\u8f83\u5c0f\u672c\u8d28\u662f\u4ee5\u5c40\u90e8\u7684\u4fe1\u606f\u786e\u5b9a\u6700\u77ed\u8def\u5f84</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#floyd","title":"floyd \u7b97\u6cd5","text":"<p>\\(O(n^3)\\)</p> <ul> <li>\u4e24\u4e2a\u4e8c\u7ef4\u6570\u7ec4, \u4e00\u4e2a\u8bb0\u5f55\u6700\u77ed\u8def\u5f84\u6743\u503c (\u6b63\u5e38\u521d\u59cb\u5316), \u4e00\u4e2a\u8bb0\u5f55\u524d\u9a71\u8def\u5f84 (\u968f\u4fbf)</li> <li>\u4e09\u91cd\u5faa\u73af, \u5224\u65ad ij \u4e24\u70b9\u95f4\u8def\u8fc7 k \u662f\u5426\u80fd\u66f4\u77ed, \u9010\u6e10\u7528 k \u70b9 \"\u8fde\u63a5\" \u8def\u5f84, DP \u601d\u60f3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_40","title":"\u62d3\u6251\u6392\u5e8f","text":"<ul> <li>AOV \u7f51\u6307\u9876\u70b9\u8868\u793a\u6d3b\u52a8, \u5f27\u8868\u793a\u6d3b\u52a8\u95f4\u7684\u5148\u540e\u5173\u7cfb\u7684\u6709\u5411\u56fe (\u4e0d\u53ef\u5b58\u5728\u56de\u8def)</li> <li>\u62d3\u6251\u6392\u5e8f\u5373\u5bf9 AOV \u7f51\u8fdb\u884c\u6392\u5e8f, \u4f7f\u5f97\u6240\u6709\u6d3b\u52a8\u7684\u524d\u9a71\u6d3b\u52a8\u90fd\u6392\u5728\u8be5\u6d3b\u52a8\u524d\u9762</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_41","title":"\u62d3\u6251\u6392\u5e8f\u7b97\u6cd5","text":"<p>\\(O(n+e)\\)</p> <ul> <li>\u5bf9 AOV \u7f51\u9009\u53d6\u4e00\u4e2a\u5165\u5ea6\u4e3a 0 \u7684\u9876\u70b9, \u8f93\u51fa\u8be5\u9876\u70b9, \u5e76\u5c06\u8be5\u9876\u70b9\u7684\u540e\u7ee7\u9876\u70b9\u7684\u5165\u5ea6\u51cf 1, \u91cd\u590d\u76f4\u81f3\u6240\u6709\u9876\u70b9\u90fd\u88ab\u8f93\u51fa</li> <li>\u6ce8\u610f\u53ef\u4ee5\u6bcf\u6b21\u9009\u51fa\u6240\u6709\u5165\u5ea6\u4e3a 0 \u7684\u9876\u70b9, \u8f93\u51fa\u540e\u4e00\u8d77\u51cf 1, \u7a7a\u95f4\u6362\u65f6\u95f4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_42","title":"\u5173\u952e\u8def\u5f84","text":"<ul> <li>AOE \u7f51\u6307\u9876\u70b9\u8868\u793a\u4e8b\u4ef6, \u5f27\u8868\u793a\u6d3b\u52a8\u95f4\u7684\u5148\u540e\u5173\u7cfb, \u6743\u503c\u8868\u793a\u6240\u9700\u65f6\u95f4\u7684\u6709\u5411\u56fe (\u4e0d\u53ef\u5b58\u5728\u56de\u8def)</li> <li>\u6b63\u5e38\u60c5\u51b5\u4e0b, AOE \u7f51\u5e94\u5b58\u5728\u4e00\u4e2a\u5165\u5ea6\u4e3a 0 \u7684\u9876\u70b9 (\u6e90\u70b9) \u4e0e\u4e00\u4e2a\u51fa\u5ea6\u4e3a 0 \u7684\u9876\u70b9 (\u6c47\u70b9), \u4ee3\u8868\u6574\u4e2a\u5de5\u7a0b\u7684\u5f00\u59cb\u4e0e\u7ed3\u675f</li> <li>\u5173\u952e\u8def\u5f84\u5373\u4ece\u6e90\u70b9\u5230\u6c47\u70b9\u7684\u6700\u957f\u8def\u5f84, \u4e5f\u5373\u6574\u4e2a\u5de5\u7a0b\u7684\u6700\u77ed\u65f6\u95f4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_43","title":"\u5173\u952e\u8def\u5f84\u7b97\u6cd5","text":"<p>\\(O(n+e)\\)</p> <ul> <li>\u5b9a\u4e49\u56db\u4e2a\u53c2\u6570, \u5206\u522b\u4e3a\u4e8b\u4ef6 (\u9876\u70b9)/ \u6d3b\u52a8 (\u5f27) \u7684\u6700\u65e9\u53d1\u751f\u65f6\u95f4 /(\u9700\u8981\u7684) \u6700\u665a\u53d1\u751f\u65f6\u95f4</li> <li>\u5bf9 AOE \u7f51\u8fdb\u884c\u62d3\u6251\u6392\u5e8f, \u5f97\u6240\u6709\u4e8b\u4ef6\u7684\u6700\u65e9\u53d1\u751f\u65f6\u95f4 (\u5b8c\u6210\u5404\u524d\u7f6e\u6d3b\u52a8\u7684\u65f6\u95f4\u7684\u6700\u5927\u503c)</li> <li>\u968f\u540e\u5bf9\u62d3\u6251\u6392\u5e8f\u7684\u9006\u5e8f\u8fdb\u884c\u904d\u5386, \u5f97\u6240\u6709\u4e8b\u4ef6\u7684\u6700\u665a\u53d1\u751f\u65f6\u95f4 (\u540e\u7eed\u4e8b\u4ef6 (\u6700\u665a\u53d1\u751f\u65f6\u95f4 - \u6d3b\u52a8\u65f6\u95f4) \u7684\u6700\u5c0f\u503c) (\u6700\u540e\u4e00\u4e2a\u4e8b\u4ef6\u7684\u6700\u665a\u53d1\u751f\u65f6\u95f4\u8bbe\u5b9a\u4e3a\u5176\u6700\u65e9\u53d1\u751f\u65f6\u95f4)</li> <li>\u968f\u540e\u5bf9 AOE \u7f51\u7684\u6240\u6709\u5f27\u904d\u5386, \u5f97\u6240\u6709\u5de5\u4f5c\u7684\u6700\u65e9\u53d1\u751f\u65f6\u95f4 (\u524d\u7f6e\u9876\u70b9\u7684\u6700\u65e9\u53d1\u751f\u65f6\u95f4) \u4e0e\u6700\u665a\u5f00\u59cb\u65f6\u95f4 (\u540e\u7f6e\u9876\u70b9\u7684\u6700\u665a\u53d1\u751f\u65f6\u95f4 - \u5de5\u4f5c\u6240\u9700\u65f6\u95f4), \u82e5\u4e24\u8005\u76f8\u7b49, \u5219\u4e3a\u5173\u952e\u8def\u5f84</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_44","title":"\u67e5\u627e","text":"<ul> <li>\u67e5\u627e\u8868\u5373\u540c\u4e00\u7c7b\u578b\u6570\u636e\u5143\u7d20\u7684\u96c6\u5408</li> <li>\u5173\u952e\u5b57 / \u952e\u503c / Key \u662f\u6570\u636e\u7684\u67d0\u4e2a\u6570\u636e\u9879\u7684\u503c, \u53ef\u4ee5\u6807\u8bc6\u6570\u636e, \u5982\u679c\u67e5\u627e\u8868\u7684\u6570\u636e\u5143\u7d20\u662f\u8bb0\u5f55, \u5219\u5173\u952e\u5b57\u5373\u4e3a\u8bb0\u5f55\u7684\u67d0\u4e2a\u6570\u636e\u9879 (\u5b57\u6bb5), \u4ea6\u79f0\u5173\u952e\u7801</li> <li>\u6839\u636e\u662f\u5426\u80fd\u552f\u4e00\u6807\u8bb0, Key \u5206\u4e3a\u4e3b\u5173\u952e\u5b57\u4e0e\u6b21\u5173\u952e\u5b57</li> <li>\u67e5\u627e\u8868\u5206\u4e3a\u9759\u6001\u67e5\u627e\u8868\u4e0e\u52a8\u6001\u67e5\u627e\u8868<ul> <li>\u9759\u6001\u67e5\u627e\u8868\u5373\u4e0d\u63d2\u5165 / \u5220\u9664\u6570\u636e\u7684\u67e5\u627e\u8868, \u4ec5 count ()/get ()/find ()</li> <li>\u52a8\u6001\u67e5\u627e\u8868\u5373\u63d2\u5165 / \u5220\u9664\u6570\u636e\u7684\u67e5\u627e\u8868, \u53ef insert ()/remove ()/update ()</li> </ul> </li> <li>\u4e3a\u4f18\u5316\u67e5\u627e\u6548\u7387, \u6211\u4eec\u9762\u5411\u67e5\u627e\u8868\u8bbe\u8ba1\u6570\u636e\u7ed3\u6784, \u5373\u67e5\u627e\u7ed3\u6784</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_45","title":"\u987a\u5e8f\u8868\u67e5\u627e (\u9759\u6001)","text":"<ul> <li>\u987a\u5e8f\u8868\u67e5\u627e\u5373\u904d\u5386\u67e5\u627e, \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n)\\)</li> <li>\u4f7f\u7528\u54e8\u5175\u4f18\u5316, \u5c06\u67e5\u627e\u8868\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7f6e\u4e3a Key, \u5219\u53ef\u4ee5\u7701\u53bb\u5224\u65ad\u662f\u5426\u8d8a\u754c\u7684\u64cd\u4f5c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_46","title":"\u6709\u5e8f\u8868\u67e5\u627e (\u9759\u6001)","text":"<ul> <li>\u6709\u5e8f\u8868\u67e5\u627e\u5373\u6298\u534a\u67e5\u627e, \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(logn)\\), \u4f46\u8981\u6c42\u8868\u6709\u5e8f</li> <li>\u4f7f\u7528\u63d2\u503c\u67e5\u627e\u4f18\u5316, \u5373\u6839\u636e Key \u4e0e\u8868\u4e2d\u5143\u7d20\u7684\u5206\u5e03\u60c5\u51b5, \u9009\u62e9\u5408\u9002\u7684\u6298\u534a\u67e5\u627e\u4f4d\u7f6e <code>mid=a[low]+(key-a[low]/a[high]-a[low])*(a[high]-a[low])</code></li> <li>\u4f7f\u7528\u6590\u6ce2\u90a3\u5951\u67e5\u627e\u4f18\u5316, \u5373\u6839\u636e\u9ec4\u91d1\u5206\u5272\u6bd4\u4f8b, \u9009\u62e9\u5408\u9002\u7684\u6298\u534a\u67e5\u627e\u4f4d\u7f6e <code>mid=low+F[k-1]-1</code></li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_47","title":"\u6590\u6ce2\u90a3\u5951\u67e5\u627e\u4f18\u5316","text":"<ul> <li>\u8ba1\u7b97\u76ee\u6807\u5728\u6590\u6ce2\u90a3\u5951\u6570\u5217\u4e2d\u7684\u4f4d\u7f6e, <code>F[k]</code>\u4e3a\u5927\u4e8e\u7b49\u4e8e <code>size</code> \u7684\u6700\u5c0f\u6570, \u5c06\u8868\u7684\u957f\u5ea6\u6269\u5145\u5230 <code>F[k]</code>, \u5e76\u5c06\u6269\u5145\u90e8\u5206\u7684\u5143\u7d20\u7f6e\u4e3a\u6700\u5927\u503c</li> <li><code>mid=low+F[k-1]-1</code>, \u5982\u679c <code>a[mid]&gt;key</code>, \u5219 <code>k=k-1</code> \u8c03\u6574 high, \u5426\u5219 <code>k=k-2</code> \u8c03\u6574 low, \u91cd\u590d\u76f4\u81f3 <code>a[mid]=key</code> (\u6ce8\u610f\u5982\u679c <code>mid&gt;n</code>, \u5219 <code>return n</code> \u6216\u8005 <code>low&gt;high (return 0)</code></li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_48","title":"\u7ebf\u6027\u7d22\u5f15\u67e5\u627e (\u9759\u6001)","text":"<ul> <li>\u7ebf\u6027\u7d22\u5f15\u5373\u5c06\u7d22\u5f15\u9879 (\u4e3b\u952e + \u8bb0\u5f55\u7684\u4f4d\u7f6e) \u7ec4\u7ec7\u4e3a\u7ebf\u6027\u7ed3\u6784, \u4ea6\u79f0\u7d22\u5f15\u8868</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_49","title":"\u7a20\u5bc6\u7d22\u5f15","text":"<p>\\(O(n)\\), \u524d\u63d0\u662f\u7d22\u5f15\u8868\u6709\u5e8f</p> <ul> <li>\u5c06\u8868\u4e2d\u6240\u6709\u8bb0\u5f55\u6dfb\u52a0\u7d22\u5f15\u9879, \u7d22\u5f15\u8868\u5373\u4e3a\u987a\u5e8f\u8868 (\u6ce8\u610f\u6392\u5e8f), \u5982\u679c\u6570\u636e\u96c6\u592a\u5927, \u5219\u7d22\u5f15\u8868\u4e5f\u4f1a\u5f88\u5927, \u53cd\u590d\u8bbf\u95ee\u78c1\u76d8\u4f1a\u5bfc\u81f4\u6548\u7387\u4f4e\u4e0b</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_50","title":"\u5206\u5757\u7d22\u5f15","text":"<p>\\(O(n^{0.5})\\)</p> <ul> <li>\u5c06\u8868\u4e2d\u8bb0\u5f55\u5206\u4e3a\u82e5\u5e72\u5757, \u5757\u5185\u65e0\u5e8f, \u5757\u95f4\u6709\u5e8f, \u518d\u5efa\u7acb\u5757\u7684\u7d22\u5f15\u8868 (\u6700\u5927\u4e3b\u952e + \u8bb0\u5f55\u4f4d\u7f6e + \u8bb0\u5f55\u6570\u91cf)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_51","title":"\u5012\u6392\u7d22\u5f15","text":"<p>\\(O(1)\\)</p> <ul> <li>\u5c06\u8868\u4e2d\u6240\u6709\u8bb0\u5f55\u7684\u6240\u6709\u53ef\u80fd\u5b57\u6bb5\u6620\u5c04\u5230\u6240\u6709\u6709\u672c\u5b57\u6bb5\u7684\u8bb0\u5f55, \u641c\u7d22\u5f15\u64ce\u7684\u57fa\u672c\u539f\u7406</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_52","title":"\u4e8c\u53c9\u6392\u5e8f\u6811\u67e5\u627e (\u52a8\u6001)","text":"<p>\\(O(logn)\\)</p> <ul> <li>\u4e8c\u53c9\u6392\u5e8f\u6811 (\u4e8c\u53c9\u67e5\u627e\u6811) \u5373\u5de6\u5b50\u6811\u6240\u6709\u8282\u70b9\u7684 Key \u90fd\u5c0f\u4e8e\u6839\u8282\u70b9\u7684 Key, \u53f3\u5b50\u6811\u6240\u6709\u8282\u70b9\u7684 Key \u90fd\u5927\u4e8e\u6839\u8282\u70b9\u7684 Key, \u4e14\u5de6\u53f3\u5b50\u6811\u4e5f\u4e3a\u4e8c\u53c9\u6392\u5e8f\u6811</li> <li>\u5176\u4e2d\u5e8f\u904d\u5386\u5373\u4e3a\u4ece\u5c0f\u5230\u5927\u6392\u5e8f</li> <li>\u5224\u65ad\u662f\u5426\u627e\u5230, \u6839\u636e\u5927\u5c0f\u9012\u5f52\u8c03\u7528, \u5224\u65ad\u5de6 / \u53f3\u5b50\u6811</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_53","title":"\u63d2\u5165","text":"<ul> <li>\u67e5\u627e, \u627e\u5230 <code>return</code>, \u5426\u5219\u627e\u5230\u4e24\u6570\u4e2d\u95f4, \u63d2\u5165</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_54","title":"\u5220\u9664","text":"<ul> <li>\u5bf9\u4e8e\u53f6\u8282\u70b9, \u76f4\u63a5\u5220\u9664, \u5bf9\u4e8e\u5355\u5b50\u6811\u8282\u70b9, \u4ee5\u5b50\u6811\u66ff\u4ee3</li> <li>\u5426\u5219, \u9009\u62e9\u4e2d\u5e8f\u904d\u5386\u7684\u524d\u9a71 / \u540e\u7ee7 (\u5de6\u5b50\u6811\u7684\u6700\u53f3 / \u53f3\u5b50\u6811\u7684\u6700\u5de6) \u66ff\u4ee3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#avl","title":"\u5e73\u8861\u4e8c\u53c9\u6811 (\u52a8\u6001)(AVL \u6811)","text":"<ul> <li>\u4e3a\u89e3\u51b3\u4e8c\u53c9\u6392\u5e8f\u6811\u7684\u4e0d\u5e73\u8861 (\u9000\u5316\u8d8b\u8fd1 \\(O(n)\\)) \u95ee\u9898, \u5f15\u5165\u5e73\u8861\u56e0\u5b50 (BF), \u5e73\u8861\u56e0\u5b50\u4e3a\u5de6\u5b50\u6811\u9ad8\u5ea6 - \u53f3\u5b50\u6811\u9ad8\u5ea6, \u6240\u6709\u8282\u70b9\u7684\u5e73\u8861\u56e0\u5b50\u7684\u7edd\u5bf9\u503c\u4e0d\u5927\u4e8e\u4e00, \u5373\u5e73\u8861\u4e8c\u53c9\u6811</li> <li>\u63d2\u5165\u8282\u70b9\u540e, \u8ddd\u79bb\u8282\u70b9\u6700\u8fd1\u7684\u5931\u8861\u8282\u70b9\u4e3a\u6839\u7684\u5b50\u6811\u4e3a\u6700\u5c0f\u4e0d\u5e73\u8861\u5b50\u6811, \u5173\u952e\u662f\u89e3\u51b3\u5b83</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_55","title":"\u5e73\u8861\u4e8c\u53c9\u6811\u7b97\u6cd5","text":"<ul> <li>\u4e3a\u8282\u70b9\u7ed3\u6784\u6dfb\u52a0 BF, \u5b9a\u4e49\u5de6\u65cb / \u53f3\u65cb / \u53cc\u65cb\u7b49\u64cd\u4f5c</li> <li>\u53cc\u65cb\u662f\u4e3a\u4e86\u89e3\u51b3\u63d2\u5165\u8282\u70b9\u540e\u5931\u8861\u8282\u70b9\u7684 BF \u4e0e\u63d2\u5165\u8282\u70b9\u7684\u7236\u8282\u70b9\u7684 BF \u7b26\u53f7\u76f8\u53cd\u7684\u60c5\u51b5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#b","title":"\u591a\u8def\u67e5\u627e\u6811 (\u52a8\u6001)(B \u6811)","text":"<ul> <li>\u591a\u8def\u67e5\u627e\u6811\u5373\u6bcf\u4e2a\u8282\u70b9\u7684\u5ea6\u53ef\u4ee5\u5927\u4e8e 2 \u4e14\u6bcf\u4e2a\u8282\u70b9\u53ef\u4ee5\u5b58\u50a8\u591a\u4e2a\u5143\u7d20, \u4f46\u6ce8\u610f, \u5143\u7d20\u4e4b\u95f4\u4ecd\u7136\u6709\u5e8f</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#2-3","title":"2-3 \u6811","text":"<ul> <li>2-3 \u6811\u5373\u6bcf\u4e2a\u8282\u70b9\u53ef\u4ee5\u6709 2/3 \u4e2a\u5b50\u6811, 2 \u8282\u70b9\u5305\u542b\u4e00\u4e2a\u5143\u7d20\u4e0e\u4e24\u4e2a\u5b50\u6811, \u5e76\u4e14\u5de6\u5b50\u6811\u6240\u6709\u8282\u70b9\u5c0f\u4e8e\u672c\u8282\u70b9, \u53f3\u5927\u4e8e</li> <li>3 \u8282\u70b9\u5305\u542b\u4e24\u4e2a\u5143\u7d20 (\u4e00\u5927\u4e00\u5c0f) \u4e0e\u4e09\u4e2a\u5b50\u6811, \u5de6\u5b50\u6811\u6240\u6709\u8282\u70b9\u5c0f\u4e8e\u672c\u8282\u70b9\u5c0f\u5143\u7d20, \u53f3\u5b50\u6811\u6240\u6709\u8282\u70b9\u5927\u4e8e\u672c\u8282\u70b9\u5927\u5143\u7d20, \u4e2d\u8282\u70b9\u4ecb\u4e8e\u4e2d\u95f4</li> <li>2-3 \u6811\u7684\u53f6\u5b50\u8282\u70b9\u5728\u540c\u4e00\u5c42</li> <li>2-3 \u6811\u7684\u63d2\u5165 / \u5220\u9664\u64cd\u4f5c\u8f83\u4e3a\u590d\u6742, \u9700\u8981\u8fdb\u884c\u5206\u88c2 / \u5408\u5e76\u7b49\u64cd\u4f5c, \u4f46\u603b\u80fd\u4fdd\u8bc1\u5176\u7279\u6027</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#2-3-4","title":"2-3-4 \u6811","text":"<ul> <li>2-3-4 \u6811\u5373\u5728 2-3 \u6811\u7684\u57fa\u7840\u4e0a\u589e\u52a0 4 \u8282\u70b9, 4 \u8282\u70b9\u5305\u542b\u4e09\u4e2a\u5143\u7d20\u4e0e\u56db\u4e2a\u5b50\u6811</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#b_1","title":"B \u6811","text":"<ul> <li>\u4ee5\u4e0a\u4e24\u79cd\u6811\u662f B \u6811\u7684\u7279\u4f8b, 2-3 \u6811\u662f 3 \u9636 B \u6811, 2-3-4 \u6811\u662f 4 \u9636 B \u6811</li> <li>\u5176\u5b83\u7279\u6027\u4e00\u81f4, \u53ea\u662f\u8282\u70b9\u7684\u5ea6\u65e0\u9650\u63a8\u5e7f</li> <li>B \u6811\u7684\u8282\u70b9\u5c31\u50cf\u5bf9\u8868\u7684\u5206\u5757, \u5927\u5c0f\u987a\u5e8f\u53ef\u4ee5\u5feb\u901f\u6307\u5f15\u52a0\u8f7d\u4e0b\u4e00\u4e2a\u8282\u70b9, \u53ef\u4ee5\u6781\u5927\u51cf\u5c11\u78c1\u76d8\u8bbf\u95ee\u6b21\u6570</li> <li>\u63a7\u5236 B \u6811\u8282\u70b9\u5ea6\u4e0e\u8ba1\u7b97\u673a\u7684\u9875\u53ef\u4ee5\u5bb9\u7eb3\u7684\u5143\u7d20\u6570\u91cf\u4e00\u81f4, \u4f7f \\(n\\) \u8282\u70b9 \\(m\\) \u9636\u7684 B \u6811\u6700\u5927\u67e5\u627e\u8282\u70b9\u6811\u4e0d\u5927\u4e8e \\(log_{\\lceil \\frac{m}{2} \\rceil} {\\frac{n+1}{2}} + 1\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#b_2","title":"B + \u6811","text":"<ul> <li>B + \u6811\u5373 B \u6811\u7684\u53d8\u79cd, \u53f6\u5b50\u8282\u70b9\u4f7f\u7528\u94fe\u8868\u8fde\u63a5, \u6240\u6709\u6570\u636e\u90fd\u5728\u53f6\u5b50\u8282\u70b9, \u975e\u53f6\u5b50\u8282\u70b9\u53ea\u4fdd\u5b58\u5176\u5b50\u6811\u7684\u6700\u5927 / \u6700\u5c0f\u5143\u7d20\u4f5c\u4e3a\u6307\u5f15</li> <li>B + \u6811\u53ef\u4ee5\u5feb\u901f\u627e\u5230\u67d0\u4f4d\u7f6e\u540e\u5411\u540e\u987a\u5e8f\u904d\u5386\u6240\u6709\u5143\u7d20</li> <li>B + \u6811\u9884\u671f\u8bf4\u662f\u6811, \u4e0d\u5982\u8bf4\u662f\u5bf9\u94fe\u8868\u5efa\u7acb\u6811\u5f62\u7d22\u5f15</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_56","title":"\u6563\u5217\u8868\u67e5\u627e (\u52a8\u6001)(\u54c8\u5e0c\u8868)","text":"<ul> <li>\u6563\u5217\u8868\u5c31\u662f\u5c06\u5173\u952e\u5b57\u901a\u8fc7\u51fd\u6570\u6620\u5c04\u5230\u5185\u5b58\u4f4d\u7f6e</li> <li>\u6563\u5217\u51fd\u6570\u7684\u96be\u70b9\u5728\u4e8e\u907f\u514d\u51b2\u7a81 (\u540c\u4e49\u8bcd)</li> <li>\u4f18\u79c0\u7684\u6563\u5217\u51fd\u6570\u5e94\u6ee1\u8db3\u8ba1\u7b97\u7b80\u5355, \u5747\u5300\u5206\u5e03</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#key","title":"\u76f4\u63a5\u5b9a\u5740\u6cd5 (\u4e86\u89e3 Key \u5206\u5e03, \u5747\u5300\u5206\u5e03)","text":"<ul> <li>\u53d6\u5173\u952e\u5b57\u7684\u67d0\u4e2a\u7ebf\u6027\u51fd\u6570\u503c\u4e3a\u6563\u5217\u5730\u5740, \u5373 \\(H(key)=a*key+b\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#key_1","title":"\u6570\u5b57\u5206\u6790\u6cd5 (\u4e86\u89e3 Key \u5206\u5e03, \u90e8\u5206\u5747\u5300\u5206\u5e03)","text":"<ul> <li>\u5206\u6790\u4e00\u7ec4\u6570\u636e, \u627e\u51fa\u5173\u952e\u5b57\u4e2d\u53d8\u5316\u6700\u5927\u7684\u90e8\u5206, \u5c06\u5176 (\u6216\u7b80\u5355\u53d8\u5f62) \u4f5c\u4e3a\u6563\u5217\u5730\u5740</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#key_2","title":"\u5e73\u65b9\u53d6\u4e2d\u6cd5 (\u4e0d\u4e86\u89e3 Key \u5206\u5e03, \u4f4d\u6570\u5c11)","text":"<ul> <li>\u53d6\u5173\u952e\u5b57\u5e73\u65b9\u540e\u7684\u4e2d\u95f4\u51e0\u4f4d\u4f5c\u4e3a\u6563\u5217\u5730\u5740</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#key_3","title":"\u6298\u53e0\u6cd5 (\u4e0d\u4e86\u89e3 Key \u5206\u5e03, \u4f4d\u6570\u591a)","text":"<ul> <li>\u5c06\u5173\u952e\u5b57\u4ece\u5de6\u5230\u53f3\u5206\u5272\u6210\u4f4d\u6570\u76f8\u7b49\u7684\u51e0\u90e8\u5206, \u6700\u540e\u4e00\u90e8\u5206\u4f4d\u6570\u4e0d\u591f\u53ef\u4ee5\u77ed\u4e9b, \u7136\u540e\u5c06\u8fd9\u51e0\u90e8\u5206\u53e0\u52a0\u6c42\u548c, \u5e76\u6309\u6563\u5217\u8868\u8868\u957f\u53d6\u540e\u51e0\u4f4d\u4f5c\u4e3a\u6563\u5217\u5730\u5740</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_57","title":"\u9664\u7559\u4f59\u6570\u6cd5 (\u6700\u901a\u7528)","text":"<ul> <li>\u53d6 \\(p\\) \u4e3a\u4e0d\u5c0f\u4e8e\u6563\u5217\u8868\u8868\u957f \\(m\\) \u7684\u6700\u5c0f\u8d28\u6570\u6216\u4e0d\u5305\u542b\u5c0f\u4e8e 20 \u7684\u8d28\u56e0\u5b50\u7684\u5408\u6570, \\(H(key)=key%p\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#key_4","title":"\u968f\u673a\u6570\u6cd5 (Key \u6ca1\u6709\u89c4\u5f8b)","text":"<ul> <li>\u53d6\u968f\u673a\u6570\u4f5c\u4e3a\u6563\u5217\u5730\u5740, \\(H(key)=random(key)\\)</li> </ul> <p>\u6211\u4eec\u8981\u8003\u8651\u5982\u4e0b\u65b9\u9762\u9009\u62e9\u6563\u5217\u51fd\u6570, \u51fd\u6570\u65f6\u95f4\u590d\u6742\u5ea6, key \u957f\u5ea6, \u8868\u957f\u5ea6, \u5173\u952e\u5b57\u5206\u5e03\u60c5\u51b5, \u67e5\u627e\u9891\u7387</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_58","title":"\u5904\u7406\u51b2\u7a81","text":"<ul> <li>\u5f00\u653e\u5b9a\u5740\u6cd5 (\u7ebf\u6027\u63a2\u6d4b\u518d\u6563\u5217 (\u52a0\u51cf)/ \u4e8c\u6b21\u63a2\u6d4b\u518d\u6563\u5217 (\u518d\u7b97\u4e00\u4e0b)/ \u4f2a\u968f\u673a\u63a2\u6d4b\u518d\u6563\u5217 (\u968f\u673a\u5e8f\u5217))</li> <li>\u518d\u6563\u5217\u6cd5 (\u6362\u4e00\u4e2a\u6563\u5217\u51fd\u6570)</li> <li>\u94fe\u5730\u5740\u6cd5 (\u4f4d\u7f6e\u4e0a\u662f\u4e2a\u94fe\u8868)</li> <li>\u516c\u5171\u6ea2\u51fa\u533a\u6cd5 (\u5c06\u51b2\u7a81\u7684\u5143\u7d20\u653e\u5165\u53e6\u4e00\u4e2a\u8868\u4e2d)</li> </ul> <p>\u6563\u5217\u8868\u7684\u7406\u60f3\u67e5\u627e\u6548\u7387\u4e3a \\(O(1)\\), \u4f46\u53d7\u51e0\u65b9\u9762\u5f71\u54cd, \u6563\u5217\u51fd\u6570\u662f\u5426\u5747\u5300, \u51b2\u7a81\u5904\u7406\u662f\u5426\u9ad8\u6548, \u8868\u7684\u88c5\u586b\u56e0\u5b50 (\u586b\u5165\u8868\u7684\u5143\u7d20 / \u8868\u957f)</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_59","title":"\u6392\u5e8f","text":"<ul> <li>\u6392\u5e8f\u5373\u6307\u4f7f\u5e8f\u5217\u4e2d\u5173\u952e\u5b57\u5448\u975e\u9012\u51cf / \u975e\u9012\u589e\u987a\u5e8f\u6392\u5217\u7684\u884c\u4e3a</li> <li>\u6392\u5e8f\u7684\u7a33\u5b9a\u6027\u5373\u4e24\u5143\u7d20\u5173\u952e\u5b57\u76f8\u7b49, \u6392\u5e8f\u540e\u539f\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8</li> <li>\u5185\u6392\u5e8f\u6307\u6240\u6709\u8bb0\u5f55\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d, \u5916\u6392\u5e8f\u53cd\u4e4b, \u6211\u4eec\u4e3b\u8981\u8ba8\u8bba\u5185\u6392\u5e8f</li> <li>\u6392\u5e8f\u6027\u80fd\u7684\u8861\u91cf\u6307\u6807\u4e3a\u65f6\u95f4\u590d\u6742\u5ea6 (\u6bd4\u8f83\u4e0e\u79fb\u52a8) \u4e0e\u7a7a\u95f4\u590d\u6742\u5ea6\u4ee5\u53ca\u7b97\u6cd5\u672c\u8eab\u7684\u590d\u6742\u6027</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_60","title":"\u7b80\u5355\u7b97\u6cd5 (\u7a33\u5b9a, \u5e38\u6570\u7a7a\u95f4)","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_61","title":"\u5192\u6ce1\u6392\u5e8f","text":"<p>\\(O(n^2)\\) \u6700\u597d \\(O(n)\\) \u6700\u574f \\(O(n^2)\\)</p> <ul> <li>\u4e24\u4e24\u6bd4\u8f83, \u82e5\u9006\u5e8f\u5219\u4ea4\u6362, \u6bcf\u4e00\u8d9f\u5c06\u6700\u5927\u5143\u7d20\u79fb\u5230\u6700\u53f3</li> <li>\u4e24\u4e24\u6bd4\u8f83\u80fd\u4e00\u5b9a\u7a0b\u5ea6\u4f18\u5316\u8fc7\u7a0b, \u4f7f\u8fc7\u7a0b\u4e2d\u90e8\u5206\u6709\u5e8f</li> <li>\u4f46\u5982\u679c\u4e2d\u95f4\u65f6\u95f4\u5df2\u7ecf\u6709\u5e8f\u5192\u6ce1\u8fd8\u662f\u5f97\u8fdb\u884c \\(n\\) \u6b21, \u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u6807\u5fd7\u4f4d, \u82e5\u67d0\u4e00\u8d9f\u6ca1\u6709\u4ea4\u6362, \u5219\u5e8f\u5217\u6709\u5e8f</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_62","title":"\u9009\u62e9\u6392\u5e8f","text":"<p>\u5168\u4e3a \\(O(n^2)\\)</p> <ul> <li>\u6bcf\u6b21\u5728\u672a\u6392\u5e8f\u7684\u90e8\u5206\u5bfb\u627e\u6700\u5c0f, \u8fdb\u884c \\(n-1\\) \u6b21</li> <li>\u6027\u80fd\u8f83\u5192\u6ce1\u66f4\u597d</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_63","title":"\u63d2\u5165\u6392\u5e8f","text":"<p>\\(O(n^2)\\) \u6700\u597d O(n) \u6700\u574f \\(O(n^2)\\)</p> <ul> <li>\u7ef4\u62a4\u4e00\u4e2a\u5df2\u6392\u5e8f\u7684\u90e8\u5206, \u91cd\u590d\u5c06\u672a\u6392\u5e8f\u90e8\u5206\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u63d2\u5165\u5230\u5df2\u6392\u5e8f\u90e8\u5206\u7684\u5408\u9002\u4f4d\u7f6e</li> <li>\u8f83\u63d2\u5165\u6392\u5e8f\u65f6\u95f4\u66f4\u4f18</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_64","title":"\u590d\u6742\u7b97\u6cd5","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_65","title":"\u5e0c\u5c14\u6392\u5e8f (\u4e0d\u7a33\u5b9a, \u5e38\u6570\u7a7a\u95f4)","text":"<p>\\(O(nlogn~n^2)\\) \u6700\u597d \\(O(n^1.3)\\) \u6700\u574f \\(O(n^2)\\)</p> <ul> <li>\u5e0c\u5c14\u6392\u5e8f\u662f\u63d2\u5165\u6392\u5e8f\u7684\u4f18\u5316, \u5c06\u5e8f\u5217\u5206\u4e3a\u82e5\u5e72\u4e2a\u5b50\u5e8f\u5217 (\u6839\u636e\u67d0\u4e2a\u589e\u91cf\u8df3\u8dc3\u5206\u5272), \u5bf9\u5b50\u5e8f\u5217\u8fdb\u884c\u63d2\u5165\u6392\u5e8f, \u589e\u91cf\u4e3a 1 \u65f6\u6392\u5e8f\u5b8c\u6210</li> <li>\u589e\u91cf\u5e8f\u5217\u4e3a <code>dlta[k]=2^k-1</code>, k \u4e3a\u5927\u4e8e\u7b49\u4e8e \\(log_2(n+1)\\) \u7684\u6574\u6570\u5f00\u59cb\u9012\u51cf\u7684\u65f6\u5019\u65f6\u95f4\u590d\u6742\u5ea6 \\(O(1.5)\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_66","title":"\u5806\u6392\u5e8f (\u4e0d\u7a33\u5b9a, \u5e38\u6570\u7a7a\u95f4)","text":"<p>\u5168\u4e3a \\(O(nlogn)\\)</p> <ul> <li>\u9009\u62e9\u6392\u5e8f\u7684\u4f18\u5316</li> <li>\u5806\u4e3a\u6bcf\u4e2a\u9876\u70b9\u4e0d\u5927\u4e8e / \u4e0d\u5c0f\u4e8e\u5de6\u53f3\u5b69\u5b50\u7684\u5b8c\u5168\u4e8c\u53c9\u6811, \u5206\u522b\u79f0\u5c0f\u9876\u5806 / \u5927\u9876\u5806</li> <li>\u5806\u7528\u6570\u7ec4\u6309\u5c42\u5e8f\u904d\u5386\u987a\u5e8f\u4fdd\u5b58, \u4ee5\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6027\u8d28\u4f18\u52bf \\(O(1)\\) \u627e\u7236\u4eb2\u5b69\u5b50</li> <li>\u5806\u7684\u5efa\u7acb\u5c31\u662f\u7531\u4e0b\u5230\u4e0a\u5206\u6cbb\u7684\u5efa\u7acb\u5b50\u5806 (\u5bf9\u4e8e\u6bcf\u4e2a\u5b50\u5806, \u7531\u9876\u70b9\u5411\u4e0b\u9010\u6b65)</li> <li>\u5806\u7684\u63d2\u5165\u540c\u7406 (\u5411\u4e0a), \u5806\u9876\u7684 pop \u662f\u5c06\u9876\u5220\u9664\u5c06\u672b\u5c3e\u653e\u4e0a\u6765, \u7136\u540e\u5411\u4e0b\u9010\u6b65\u79fb\u52a8</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#on","title":"\u5f52\u5e76\u6392\u5e8f (\u7a33\u5b9a, \\(O(n)\\) \u7a7a\u95f4)","text":"<p>\u5168\u4e3a \\(O(nlogn)\\)</p> <ul> <li>\u5206\u6cbb, \u90e8\u5206\u6392\u5e8f, \u6700\u540e\u5408\u5e76 (\u53ea\u4ecb\u7ecd\u4e8c\u8def\u5f52\u5e76)</li> <li>\u9012\u5f52 sort, \u5f52\u5e76, \u975e\u5e38\u7b80\u5355</li> <li>\u4f46\u662f\u8fed\u4ee3\u5b9e\u73b0\u66f4\u52a0\u4f18\u79c0, \u53bb\u6389\u4e86 \\(O(logn)\\) \u7684\u6808\u7a7a\u95f4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#olognon","title":"\u5feb\u901f\u6392\u5e8f (\u4e0d\u7a33\u5b9a, \\(O(logn)~O(n)\\) \u7a7a\u95f4)","text":"<p>\\(O(nlogn)\\) \u6700\u597d \\(O(nlogn)\\) \u6700\u574f \\(O(n^2)\\)</p> <ul> <li>\u4e0e\u5192\u6ce1\u6392\u5e8f\u540c\u5c5e\u4ea4\u6362\u6392\u5e8f</li> <li>\u5c06\u5f85\u6392\u8bb0\u5f55\u5206\u5272\u6210\u5927\u5c0f\u4e24\u90e8\u5206 (\u5185\u90e8\u65e0\u5e8f), \u5206\u6cbb\u5904\u7406</li> <li>\u9012\u5f52\u5b9e\u73b0, \u82e5 <code>l&lt;r</code> , \u7b97\u51fa\u67a2\u8f74\u503c p, \u8c03\u7528 <code>qsort(list, l, p-1);qsort (list, p+1, r);</code></li> <li>\u5173\u952e\u5728\u4e8e\u5982\u4f55\u5feb\u901f\u627e\u5230\u4e00\u4e2a\u503c\u7684\u6b63\u786e\u7edd\u5bf9\u4f4d\u7f6e</li> <li>\u9009\u4e00\u4e2a\u67a2\u8f74\u503c, \u53cc\u6307\u9488\u5c06\u5927\u4e8e\u5b83 / \u5c0f\u4e8e\u5b83\u5f80\u4e24\u8fb9\u653e</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#_67","title":"\u4f18\u5316","text":"<ul> <li>\u5173\u952e\u662f\u5982\u4f55\u9009\u62e9\u67a2\u8f74\u503c, \u53ef\u4ee5\u968f\u673a (\u89c2\u5bdf\u53ef\u80fd\u6392\u5e03) \u9009 3 \u4e2a\u6570, \u53d6\u4e2d\u503c</li> <li>\u4e8c\u662f\u67a2\u8f74\u503c\u4e0d\u53cd\u590d\u79fb\u52a8, \u53cd\u6b63\u6700\u540e\u7a7a\u683c\u5c31\u662f\u5b83\u7684\u4f4d\u7f6e</li> <li>\u4e09\u662f\u5f53\u5b50\u5e8f\u5217\u957f\u5ea6\u5c0f\u4e8e\u4e00\u5b9a\u503c (\u5982 7), \u53ef\u4ee5\u76f4\u63a5\u63d2\u5165\u6392\u5e8f</li> <li>\u56db\u662f\u4f7f\u7528\u5c3e\u9012\u5f52 (\u5c3e\u9012\u5f52\u662f\u9012\u5f52\u7684\u4e00\u79cd\u4f18\u5316, \u5c3e\u9012\u5f52\u662f\u9012\u5f52\u51fd\u6570\u5728\u51fd\u6570\u5c3e\u90e8\u4fee\u6539\u53c2\u6570\u503c, \u5229\u7528\u539f\u672c\u7684\u6808\u7a7a\u95f4\u518d\u8fd0\u884c\u4e00\u6b21)</li> </ul> <p>\u5f53\u8bb0\u5f55\u6570\u91cf\u5c0f\u7684\u65f6\u5019, \u7b80\u5355\u6392\u5e8f\u66f4\u5f3a, \u9009\u62e9\u6392\u5e8f\u7684\u8bb0\u5f55\u4ea4\u6362\u6b21\u6570\u6700\u5c11 (\u590d\u6742\u7b97\u6cd5\u8fd9\u70b9\u90fd\u5dee\u4e0d\u591a) \u7efc\u5408\u6765\u770b, \u4f18\u5316\u7684\u5feb\u6392\u662f\u6700\u4f18\u9009\u62e9</p>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90/","title":"\u6570\u503c\u5206\u6790","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u90d1\u5927\u6570\u503c\u5206\u6790 - \u4e2d\u89c4\u4e2d\u77e9 - 3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90/#_3","title":"\u8bef\u5dee","text":"<ul> <li>\u51fd\u6570\u7684\u7edd\u5bf9\u8bef\u5dee\u7b49\u4e8e\u6240\u6709(\u81ea\u53d8\u91cf\u7684\u8bef\u5dee\u4e58\u51fd\u6570\u5bf9\u8be5\u81ea\u53d8\u91cf\u7684\u504f\u5bfc\u6570)\u7684\u548c</li> <li>\u76f8\u5bf9\u8bef\u5dee\u7b49\u4e8e\u7edd\u5bf9\u8bef\u5dee\u9664\u4ee5\u771f\u503c</li> <li>\u4f9d\u6b21\u53ef\u5f97</li> <li>\u5bf9\u4e8e\u4e58\u9664\u5f00\u65b9, \u6570\u636e\u7684\u76f8\u5bf9\u8bef\u5dee\u5bf9\u7ed3\u679c\u7684\u5f71\u54cd\u5c0f</li> <li>\u907f\u514d\u76f8\u8fd1\u6570\u51cf\u6cd5</li> <li>\u4e0d\u5e94\u7528\u7edd\u5bf9\u503c\u8fc7\u5c0f\u7684\u6570\u4f5c\u9664\u6570</li> <li>\u8c03\u6574\u987a\u5e8f, \u907f\u514d\u76f8\u5dee\u8f83\u5927\u7684\u6570\u5148\u8fd0\u7b97</li> <li>\u6ce8\u610f\u9664\u6cd5\u7ed3\u679c\u4e0a\u6ea2</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/","title":"\u8865\u5145\u7684\u7b97\u6cd5","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>oiwiki \u7b97\u7ade\u5723\u7ecf, \u4f46\u8bb2\u7684\u4e0d\u597d, \u662f wiki - \u4e0d\u662f\u4e66 - 3</li> <li>\u5de6\u7a0b\u4e91 - \u5927\u4f6c, \u6bd4 oiwiki \u8fd8\u5168, \u5c31\u662f\u4eba\u592a\u58a8\u8ff9 - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_3","title":"\u5206\u6cbb","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#k","title":"\u7b2c k \u5c0f\u7b97\u6cd5","text":"<ul> <li>\u5206\u7ec4\u6392\u5e8f (\u5feb\u901f\u627e\u5230\u63a5\u8fd1\u4e2d\u4f4d\u6570, \u5e76\u5212\u5206\u96c6\u5408), \u5982\u6b64\u5206\u6cbb\u627e k \u5c0f</li> <li>\u9526\u6807\u8d5b\u7b97\u6cd5\u627e\u7b2c\u4e8c\u5927 (\u76f4\u63a5\u8f93\u7ed9\u7b2c\u4e00\u5927)</li> <li>\u5206\u7ec4\u627e\u6700\u5927\u6700\u5c0f</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_4","title":"\u5206\u6cbb\u98a0\u5012\u6574\u6570\u4e8c\u8fdb\u5236\u4f4d","text":"<pre><code>// \u5206\u6cbb\u6cd5\u98a0\u5012\u4e8c\u8fdb\u5236\u4f4d\nint reverseBits(int n) {\n    // \u4ea4\u6362 16 \u4f4d\n    n = (n &gt;&gt; 16) | (n &lt;&lt; 16);\n    // \u4ea4\u6362 8 \u4f4d\n    n = ((n &amp; 0xFF00FF00) &gt;&gt; 8) | ((n &amp; 0x00FF00FF) &lt;&lt; 8);\n    // \u4ea4\u6362 4 \u4f4d\n    n = ((n &amp; 0xF0F0F0F0) &gt;&gt; 4) | ((n &amp; 0x0F0F0F0F) &lt;&lt; 4);\n    // \u4ea4\u6362 2 \u4f4d\n    n = ((n &amp; 0xCCCCCCCC) &gt;&gt; 2) | ((n &amp; 0x33333333) &lt;&lt; 2);\n    // \u4ea4\u6362 1 \u4f4d\n    n = ((n &amp; 0xAAAAAAAA) &gt;&gt; 1) | ((n &amp; 0x55555555) &lt;&lt; 1);\n    return n;\n}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_5","title":"\u4e8c\u5206\u641c\u7d22","text":"<ul> <li>\u4e8c\u5206\u641c\u7d22\u7684\u524d\u63d0\u662f\u6709\u5e8f\u7684, \u5b9a\u533a\u95f4\u7684</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_6","title":"\u4e24\u4e2a\u6b63\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570","text":"<ul> <li>\u7b2c\u4e00\u79cd\u89e3\u6cd5, \u6bcf\u6b21\u9009\u53d6\u4e24\u6570\u7ec4\u5404 k/2 \u4e2a\u6570, \u53bb\u6389\u8f83\u5c0f\u96c6\u5408, \u66f4\u65b0 k</li> <li>\u7b2c\u4e8c\u79cd, \u7a33\u5b9a\u9009\u53d6\u6570\u91cf\u548c\u4e3a k \u7684, \u4e8c\u5206\u641c\u7d22\u4f4d\u7f6e, \u76f4\u5230\u6ee1\u8db3\u4ea4\u53c9\u5c0f\u4e8e\u5173\u7cfb</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_7","title":"\u7ec4\u5408\u95ee\u9898","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_8","title":"\u7ec4\u5408\u679a\u4e3e","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_9","title":"\u4f4d\u63a9\u7801","text":"<ul> <li>n \u4f4d\u4e8c\u8fdb\u5236\u6574\u6570, \u53ef\u4ee5\u8868\u793a n \u4e2a bit \u7684\u7ec4\u5408 (\u5e9f\u8bdd), \u53ef\u4ee5\u7528\u4ee5\u679a\u4e3e\u7ec4\u5408 / \u4e8c\u53c9\u6811\u7ed3\u70b9</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#dfsbfs","title":"DFS/BFS \u679a\u4e3e\u7ec4\u5408","text":"<ul> <li>\u4f7f\u7528 DFS \u56de\u6eaf\u65f6, \u4ee5\u5269\u4f59\u5143\u7d20\u6570\u91cf &lt; \u9700\u8981\u6570\u91cf\u4f5c\u4e3a\u526a\u679d\u6761\u4ef6</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_10","title":"\u5b57\u5178\u5e8f\u8fed\u4ee3","text":"<ul> <li>\u521d\u59cb\u5316\u7ec4\u5408\u4e3a <code>[1-k]</code></li> <li>\u6bcf\u6b21\u627e\u5230\u6700\u540e\u4e00\u4e2a\u53ef\u9012\u589e\u7684\u4f4d\u7f6e, \u9012\u589e\u540e\u8c03\u6574\u540e\u7eed\u5143\u7d20</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_11","title":"\u4f4d\u8fd0\u7b97","text":"<ul> <li>\u4f4d\u8fd0\u7b97\u53ef\u4ee5\u6a21\u62df\u52a0\u51cf, \u4f46\u662f\u8fdb\u4f4d\u9000\u4f4d\u5f97\u5355\u72ec\u8ba1\u7b97\u4fdd\u5b58</li> <li>\u5f02\u6216\u591a\u4e2a\u6570, \u6309\u4f4d\u72ec\u7acb</li> <li>\u5076\u6570\u6b21\u76f8\u540c\u6570\u5f02\u6216\u4e3a\u96f6</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_12","title":"\u6c42\u6240\u6709\u5b50\u96c6\u7684\u5f02\u6216\u603b\u548c\u518d\u6c42\u548c","text":"<ul> <li>\u6240\u6709\u5143\u7d20\u6309\u4f4d\u4e0e\u540e\u4e58\u4ee5 \\(2^{n-1}\\)<ul> <li>\u6240\u6709\u5143\u7d20\u8be5\u4f4d\u90fd\u4e3a 0, \u6240\u6709\u5b50\u96c6\u5f02\u6216\u603b\u548c\u4e2d\u8be5\u4f4d\u5747\u4e3a 0</li> <li>\u53cd\u4e4b, \u6240\u6709\u5b50\u96c6\u5f02\u6216\u603b\u548c\u4e2d\u8be5\u4f4d\u4e3a 0 \u7684\u4e2a\u6570\u4e0e\u4e3a 1 \u7684\u4e2a\u6570\u76f8\u7b49, \u5747\u4e3a \\(2^{n-1}\\)</li> <li>\u56e0\u6b64\u6309\u4f4d\u6216\u770b\u6709\u6ca1\u6709 1, \u82e5\u6709\u8d21\u732e\u4e3a\u5bf9\u4e8e\u8be5\u4f4d\u4f4d\u6570 \\(n_1\\) \u800c\u8a00 \\(2^{n_1-1} \\cdot 2^{n-1}\\)</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#dp","title":"\u72b6\u6001\u538b\u7f29 DP","text":"<ul> <li>SWAR \u7b97\u6cd5\u8ba1\u7b97\u6c49\u660e\u91cd\u91cf</li> <li>\u53ef\u4ee5\u7528 Brian Kernighan \u7b97\u6cd5 <code>n&amp;n-1</code> \u53bb\u6389\u6700\u53f3\u8fb9 1</li> </ul> <pre><code>// SWAR \u7b97\u6cd5\u7edf\u8ba1 1 \u7684\u4e2a\u6570\nint swar_popcount(uint32_t x) {\n    x = x - ((x &gt;&gt; 1) &amp; 0x55555555); // \u6bcf 2 \u4f4d\u7edf\u8ba1 1 \u7684\u4e2a\u6570\n    x = (x &amp; 0x33333333) + ((x &gt;&gt; 2) &amp; 0x33333333); // \u6bcf 4 \u4f4d\u7edf\u8ba1 1 \u7684\u4e2a\u6570\n    x = (x + (x &gt;&gt; 4)) &amp; 0x0F0F0F0F; // \u6bcf 8 \u4f4d\u7edf\u8ba1 1 \u7684\u4e2a\u6570\n    x = x + (x &gt;&gt; 8); // \u6bcf 16 \u4f4d\u7edf\u8ba1 1 \u7684\u4e2a\u6570\n    x = x + (x &gt;&gt; 16); // \u6bcf 32 \u4f4d\u7edf\u8ba1 1 \u7684\u4e2a\u6570\n    return x &amp; 0x3F; // \u8fd4\u56de\u6700\u7ec8\u7ed3\u679c\n}\n</code></pre> <ul> <li>\u6c49\u660e\u91cd\u91cf (popcount) \u5728\u72b6\u6001\u538b\u7f29 DP \u4e2d\u975e\u5e38\u6709\u7528</li> <li>\u5c06 0-n \u6309\u6c49\u660e\u91cd\u91cf\u6392\u5217\u7b97\u6cd5\u5982\u4e0b</li> </ul> <pre><code>for (int i = 0; (1&lt;&lt;i)-1 &lt;= n; i++) {\n    for (int x = (1&lt;&lt;i)-1, t; x &lt;= n; t = x+(x&amp;-x), x = x ? (t|((((t&amp;-t)/(x&amp;-x))&gt;&gt;1)-1)) : (n+1)) {\n        // \u5199\u4e0b\u9700\u8981\u5b8c\u6210\u7684\u64cd\u4f5c\n    }\n}\n</code></pre> <ul> <li>\u5bf9\u4e8e\u4e8c\u8fdb\u5236\u6570\u8868\u793a\u7684\u96c6\u5408, \u53ef\u4ee5\u7528\u4f4d\u8fd0\u7b97\u8fdb\u884c\u679a\u4e3e\u5b50\u96c6</li> </ul> <pre><code>for (int m = 0; m &lt; (1 &lt;&lt; n); ++m)\n  // \u679a\u4e3e n \u4f4d\u7684\u6240\u6709\u5b50\u96c6 m\n  for (int s = m; s; s = (s - 1) &amp; m)\n    // \u679a\u4e3e m \u7684\u975e\u7a7a\u5b50\u96c6\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_13","title":"\u6570\u5b66","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_14","title":"\u9ad8\u7cbe\u5ea6\u8ba1\u7b97","text":"<ul> <li>\u53cd\u8f6c\u5b58\u50a8\u5b57\u7b26\u4e32</li> <li>\u7ad6\u5217\u5f0f\u8ba1\u7b97\u5373\u53ef, \u5b9e\u73b0\u52a0\u51cf\u4e58\u9664</li> <li>\u5bf9\u4e8e\u9ad8\u7cbe\u5ea6 - \u4f4e\u7cbe\u5ea6\u4e58\u6cd5, \u8fdb\u4f4d\u9700\u8981\u53d6\u6a21\u7b49\u64cd\u4f5c</li> <li>\u538b\u4f4d\u9ad8\u7cbe\u5ea6\u8ba1\u7b97, \\(1234 \\cdot 12\\) \u5728\u4f20\u7edf\u65b9\u6cd5\u7b49\u6548 \\((1000+200+30+4) \\cdot (10+2)\\), \u538b\u4f4d\u6210 \\((1200+34) \\cdot 12\\), \u53ef\u4ee5\u51cf\u5c11\u8ba1\u7b97\u6b21\u6570</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#karasuba","title":"Karasuba \u7b97\u6cd5","text":"<ul> <li>\u5206\u6cbb\u7b97\u6cd5, \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^{1.585})\\) / \\((log_23)\\)</li> <li>\u4e24\u4e2a\u5927\u6570\u76f8\u4e58, \u5c06\u5927\u6570\u5206\u4e3a\u4e24\u90e8\u5206 \\((x_1 \\cdot 10^m+x_0)\\) \u518d\u76f8\u4e58, \u5e42\u6570\u56fa\u5b9a, \u8ba1\u7b97\u7cfb\u6570\u5373\u53ef</li> <li>\u53ef\u80fd\u6574\u6570\u6ea2\u51fa!!!</li> <li>\u6570\u592a\u5927\u65f6, \u8003\u8651\u5206\u6210\u591a\u9879\u5f0f\u8ba1\u7b97 (\u4f9d\u65e7\u662f \\(n^2\\)), \u5e76\u7528 FFT \u52a0\u901f\u8ba1\u7b97 (\\(nlogn\\))</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_15","title":"\u8896\u73cd\u8ba1\u7b97\u5668\u6cd5","text":"<ul> <li>\\(a^n = e^{nlna}\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_16","title":"\u5feb\u901f\u5e42","text":"<ul> <li> <p>\u4efb\u4f55\u6b63\u6574\u6570\u53ef\u4ee5\u552f\u4e00\u8868\u793a\u4e3a\u82e5\u5e72\u4e2a 2 \u7684\u5e42\u6b21\u7684\u548c (\u540c\u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236)</p> </li> <li> <p>\u82e5\u4e00\u4e2a\u8fd0\u7b97 a \u5177\u6709\u7ed3\u5408\u5f8b, \u8fd0\u7b97 A \u4e3a a \u7684\u5e42\u8fd0\u7b97 , \u5219 \\(A (x, n)\\) \u4e3a n \u6b21 \\(a (x, x)\\), \u5c06 n \u8f6c\u6362\u4e3a\u4e8c\u8fdb\u5236</p> </li> <li> <p>\u53ef\u5f97 \\(A (x, n) = a (A (x, n_1), A (x, n_2), ...)\\) \u5f53 \\(n = n1+n2+...\\)</p> </li> <li> <p>\u5feb\u901f\u5e42\u53ef\u4ee5\u7528\u4e8e\u6c42\u6a21\u610f\u4e49\u4e0b\u7684\u5927\u6574\u6570\u4e58\u6cd5</p> </li> </ul> <pre><code>long long binmul(long long a, long long b, long long m) {\n  unsigned long long c =\n      (unsigned long long)a * b -\n      (unsigned long long)((long double)a / m * b + 0.5L) * m;\n  if (c &lt; m) return c;\n  return c + m;\n}\n</code></pre> <ul> <li>\u82e5\u591a\u6b21\u6a21\u610f\u4e49\u5e42\u8be2\u95ee\u4e2d\u5e95\u6570\u4e0e\u6a21\u6570\u4e0d\u53d8, \u53ef\u4ee5\u9884\u5904\u7406\u524d s \u4e2a\u6570, \u5c06\u5e42\u6b21\u62c6\u5206, \u67e5\u8868\u52a0\u901f\u8ba1\u7b97</li> </ul> <pre><code>int pow1[65536], pow2[65536];\n\nvoid preproc(int a, int mod) {\n  pow1[0] = pow2[0] = 1;\n  for (int i = 1; i &lt; 65536; i++) pow1[i] = 1LL * pow1[i - 1] * a % mod;\n  int pow65536 = 1LL * pow1[65535] * a % mod;\n  for (int i = 1; i &lt; 65536; i++) pow2[i] = 1LL * pow2[i - 1] * pow65536 % mod;\n}\n\nint query(int pows) { return 1LL * pow1[pows &amp; 65535] * pow2[pows &gt;&gt; 16]; }\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_17","title":"\u4ee3\u6570","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_18","title":"\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362","text":"<ul> <li>FFT \u662f\u4e00\u79cd\u9ad8\u6548\u5b9e\u73b0 DFT (\u79bb\u6563\u5085\u91cc\u53f6\u53d8\u6362) \u7684\u7b97\u6cd5, \u5b83\u662f\u4e00\u79cd\u5206\u6cbb\u7b97\u6cd5</li> <li>\u5728 \\(O(nlogn)\\) \u7684\u65f6\u95f4\u5185\u8ba1\u7b97\u4e24\u4e2a n \u6b21\u591a\u9879\u5f0f\u7684\u4e58\u6cd5</li> </ul> <pre><code>/*\n - \u505a FFT\n - len \u5fc5\u987b\u662f 2^k \u5f62\u5f0f\n - on == 1 \u65f6\u662f DFT, on == -1 \u65f6\u662f IDFT\n */\nvoid fft(Complex y[], int len, int on) {\n  change(y, len);\n  for (int h = 2; h &lt;= len; h &lt;&lt;= 1) {             // \u6a21\u62df\u5408\u5e76\u8fc7\u7a0b\n    Complex wn(cos(2 * PI / h), sin(2 * PI / h));  // \u8ba1\u7b97\u5f53\u524d\u5355\u4f4d\u590d\u6839\n    for (int j = 0; j &lt; len; j += h) {\n      Complex w(1, 0);  // \u8ba1\u7b97\u5f53\u524d\u5355\u4f4d\u590d\u6839\n      for (int k = j; k &lt; j + h / 2; k++) {\n        Complex u = y[k];\n        Complex t = w * y[k + h / 2];\n        y[k] = u + t;  // \u8fd9\u5c31\u662f\u628a\u4e24\u90e8\u5206\u5206\u6cbb\u7684\u7ed3\u679c\u52a0\u8d77\u6765\n        y[k + h / 2] = u - t;\n        // \u540e\u534a\u4e2a \u300cstep\u300d \u4e2d\u7684\u03c9\u4e00\u5b9a\u548c \u300c\u524d\u534a\u4e2a\u300d \u4e2d\u7684\u6210\u76f8\u53cd\u6570\n        // \u300c\u7ea2\u5708\u300d\u4e0a\u7684\u70b9\u8f6c\u4e00\u6574\u5708\u300c\u8f6c\u56de\u6765\u300d, \u8f6c\u534a\u5708\u6b63\u597d\u8f6c\u6210\u76f8\u53cd\u6570\n        // \u4e00\u4e2a\u6570\u76f8\u53cd\u6570\u7684\u5e73\u65b9\u4e0e\u8fd9\u4e2a\u6570\u81ea\u8eab\u7684\u5e73\u65b9\u76f8\u7b49\n        w = w * wn;\n      }\n    }\n  }\n  if (on == -1) {\n    reverse(y + 1, y + len);\n    for (int i = 0; i &lt; len; i++) {\n      y[i].x /= len;\n      y[i].y /= len;\n    }\n  }\n}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_19","title":"\u5176\u5b83\u53d8\u6362","text":"<ul> <li>NTT \u89e3\u51b3\u7684\u662f\u591a\u9879\u5f0f\u4e58\u6cd5\u5e26\u6a21\u6570\u7684\u60c5\u51b5</li> <li>\u6c83\u5c14\u4ec0\u8f6c\u6362\u662f\u5728\u9891\u8c31\u5206\u6790 (\u6ca1\u6709\u6d6e\u70b9\u6570\u7cfb\u6570) \u4e0a\u4f5c\u4e3a\u79bb\u6563\u5085\u7acb\u53f6\u53d8\u6362\u7684\u66ff\u4ee3\u65b9\u6848\u7684\u4e00\u79cd\u65b9\u6cd5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#fiduccia","title":"Fiduccia \u7b97\u6cd5","text":"<ul> <li>\u6c42\u89e3\u5e38\u7cfb\u6570\u9f50\u6b21\u7ebf\u6027\u9012\u63a8</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#berlekampmassey","title":"Berlekamp\u2013Massey \u7b97\u6cd5","text":"<ul> <li>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u4e3a n \u7684\u6570\u5217, \u5982\u679c\u5b83\u7684\u6700\u77ed\u9012\u63a8\u5f0f\u7684\u9636\u6570\u4e3a m, \u5219 Berlekamp\u2013Massey \u7b97\u6cd5\u80fd\u591f\u5728 \\(O(nm)\\) \u65f6\u95f4\u5185\u6c42\u51fa\u6570\u5217\u7684\u6bcf\u4e2a\u524d\u7f00\u7684\u6700\u77ed\u9012\u63a8\u5f0f</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_20","title":"\u6570\u8bba","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_21","title":"\u7d20\u6570\u7b5b","text":"<ul> <li>\u57c3\u62c9\u6258\u8272\u5c3c\u7b5b\u6cd5, \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(nloglogn)\\)</li> </ul> <pre><code>vector&lt;int&gt; prime;\nbool is_prime[N];\n\nvoid Eratosthenes(int n) {\n  is_prime[0] = is_prime[1] = false;\n  for (int i = 2; i &lt;= n; ++i) is_prime[i] = true;\n  // i * i &lt;= n \u8bf4\u660e i &lt;= sqrt(n)\n  for (int i = 2; i * i &lt;= n; ++i) {\n    if (is_prime[i])\n      for (int j = i * i; j &lt;= n; j += i) is_prime[j] = false;\n  }\n  for (int i = 2; i &lt;= n; ++i)\n    if (is_prime[i]) prime.push_back(i);\n}\n</code></pre> <ul> <li>\u5206\u5757\u7b5b\u6c42\u7d20\u6570\u6570\u91cf</li> </ul> <pre><code>int count_primes(int n) {\n  constexpr static int S = 10000;\n  vector&lt;int&gt; primes;\n  int nsqrt = sqrt(n);\n  vector&lt;char&gt; is_prime(nsqrt + 1, true);\n  for (int i = 2; i &lt;= nsqrt; i++) {\n    if (is_prime[i]) {\n      primes.push_back(i);\n      for (int j = i * i; j &lt;= nsqrt; j += i) is_prime[j] = false;\n    }\n  }\n  int result = 0;\n  vector&lt;char&gt; block(S);\n  for (int k = 0; k * S &lt;= n; k++) {\n    fill(block.begin(), block.end(), true);\n    int start = k * S;\n    for (int p : primes) {\n      int start_idx = (start + p - 1) / p;\n      int j = max(start_idx, p) * p - start;\n      for (; j &lt; S; j += p) block[j] = false;\n    }\n    if (k == 0) block[0] = block[1] = false;\n    for (int i = 0; i &lt; S &amp;&amp; start + i &lt;= n; i++) {\n      if (block[i]) result++;\n    }\n  }\n  return result;\n}\n</code></pre> <ul> <li>\u7ebf\u6027\u7b5b (\u6b27\u62c9\u7b5b), \u540c\u65f6\u4e5f\u5f97\u5230\u4e86\u6bcf\u4e2a\u6570\u7684\u6700\u5c0f\u8d28\u56e0\u5b50</li> </ul> <pre><code>vector&lt;int&gt; pri;\nbool not_prime[N];\n\nvoid pre(int n) {\n  for (int i = 2; i &lt;= n; ++i) {\n    if (!not_prime[i]) {\n      pri.push_back(i);\n    }\n    for (int pri_j : pri) {\n      if (i * pri_j &gt; n) break;\n      not_prime[i * pri_j] = true;\n      if (i % pri_j == 0) {\n        // i % pri_j == 0\n        // \u6362\u8a00\u4e4b, i \u4e4b\u524d\u88ab pri_j \u7b5b\u8fc7\u4e86\n        // \u7531\u4e8e pri \u91cc\u9762\u8d28\u6570\u662f\u4ece\u5c0f\u5230\u5927\u7684, \u6240\u4ee5 i \u4e58\u4e0a\u5176\u4ed6\u7684\u8d28\u6570\u7684\u7ed3\u679c\u4e00\u5b9a\u4f1a\u88ab\n        // pri_j \u7684\u500d\u6570\u7b5b\u6389, \u5c31\u4e0d\u9700\u8981\u5728\u8fd9\u91cc\u5148\u7b5b\u4e00\u6b21, \u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5 break\n        // \u6389\u5c31\u597d\u4e86\n        break;\n      }\n    }\n  }\n}\n</code></pre> <ul> <li>\u7ebf\u6027\u7b5b\u53ef\u6c42\u6b27\u62c9\u51fd\u6570 / \u83ab\u6bd4\u4e4c\u65af\u51fd\u6570 / \u7ea6\u6570\u4e2a\u6570 / \u7ea6\u6570\u548c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#pollard-rho","title":"Pollard Rho \u7b97\u6cd5","text":"<ul> <li>\u968f\u673a\u7b97\u6cd5, \u5feb\u901f\u5206\u89e3\u5927\u6574\u6570</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_22","title":"\u6570\u8bba\u5206\u5757","text":"<ul> <li>\u4e00\u4e2a\u8303\u56f4\u5185\u7684\u6570\u5177\u6709\u76f8\u540c\u7684\u6027\u8d28, \u53ef\u4ee5\u5206\u5757\u5904\u7406</li> <li>\u5982\u9664\u4ee5\u4e00\u4e2a\u6570\u7684\u5546\u5411\u4e0b\u53d6\u6574</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_23","title":"\u6c42\u8d1d\u7956\u7cfb\u6570","text":"<ul> <li>\u62d3\u5c55\u6b27\u51e0\u91cc\u5f97\u7b97\u6cd5, \u6c42 \\(ax+by=gcd (a, b)\\) \u7684\u89e3</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_24","title":"\u6c42\u6570\u5b57\u6839 (\u5404\u4f4d\u6570\u4e4b\u548c)","text":"<ul> <li>\\((n-1) \\bmod 9 + 1\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_25","title":"\u6982\u7387","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_26","title":"\u8d1d\u53f6\u65af\u5b9a\u7406\u7528\u4e8e\u5783\u573e\u90ae\u4ef6\u5206\u7c7b","text":"<ul> <li>\u5229\u7528\u8d1d\u53f6\u65af\u516c\u5f0f\u8ba1\u7b97\u540e\u9a8c\u6982\u7387</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_27","title":"\u7ebf\u6027\u7b49\u6982\u7387\u91c7\u6837","text":"<ul> <li>\u6587\u4ef6\u4e2d\u968f\u673a\u62ff\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32, \\(O(N)\\) \u7684\u65f6\u95f4 \\(O(1)\\) \u7684\u7a7a\u95f4, \u6bcf\u62ff\u51fa\u4e00\u4e2a, \u5c31\u5728\u4e24\u4e2a\u4e4b\u95f4\u4ee5 \\((n-1):1\\) \u7684\u6982\u7387\u9009\u4e00   \u4e2a, \u7efc\u5408\u6982\u7387\u76f8\u540c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_28","title":"\u535a\u5f08\u8bba","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_29","title":"\u516c\u5e73\u7ec4\u5408\u6e38\u620f","text":"<ul> <li>\u6e38\u620f\u6709\u4e24\u4e2a\u4eba\u53c2\u4e0e, \u4e8c\u8005\u8f6e\u6d41\u505a\u51fa\u51b3\u7b56, \u53cc\u65b9\u5747\u77e5\u9053\u6e38\u620f\u7684\u5b8c\u6574\u4fe1\u606f</li> <li>\u4efb\u610f\u4e00\u4e2a\u6e38\u620f\u8005\u5728\u67d0\u4e00\u786e\u5b9a\u72b6\u6001\u53ef\u4ee5\u4f5c\u51fa\u7684\u51b3\u7b56\u96c6\u5408\u53ea\u4e0e\u5f53\u524d\u7684\u72b6\u6001\u6709\u5173, \u800c\u4e0e\u6e38\u620f\u8005\u65e0\u5173 (\u5426\u5219\u4e3a\u975e\u516c\u5e73)</li> <li>\u6e38\u620f\u4e2d\u7684\u540c\u4e00\u4e2a\u72b6\u6001\u4e0d\u53ef\u80fd\u591a\u6b21\u62b5\u8fbe, \u6e38\u620f\u4ee5\u73a9\u5bb6\u65e0\u6cd5\u884c\u52a8\u4e3a\u7ed3\u675f, \u4e14\u6e38\u620f\u4e00\u5b9a\u4f1a\u5728\u6709\u9650\u6b65\u540e\u4ee5\u975e\u5e73\u5c40\u7ed3\u675f</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_30","title":"\u5206\u6790","text":"<ul> <li>\u5b9a\u4e49 \u5fc5\u80dc\u72b6\u6001 \u4e3a \u5148\u624b\u5fc5\u80dc\u7684\u72b6\u6001, \u5fc5\u8d25\u72b6\u6001 \u4e3a \u5148\u624b\u5fc5\u8d25\u7684\u72b6\u6001 (\u5bf9\u4e8e\u6b64\u65f6\u7684\u5148\u624b)<ul> <li>\u6ca1\u6709\u540e\u7ee7\u72b6\u6001\u7684\u72b6\u6001\u662f\u5fc5\u8d25\u72b6\u6001</li> <li>\u4e00\u4e2a\u72b6\u6001\u662f\u5fc5\u80dc\u72b6\u6001\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u81f3\u5c11\u4e00\u4e2a\u5fc5\u8d25\u72b6\u6001\u4e3a\u5b83\u7684\u540e\u7ee7\u72b6\u6001</li> <li>\u4e00\u4e2a\u72b6\u6001\u662f\u5fc5\u8d25\u72b6\u6001\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u6240\u6709\u540e\u7ee7\u72b6\u6001\u5747\u4e3a\u5fc5\u80dc\u72b6\u6001</li> </ul> </li> <li>\u6709\u5411\u56fe\u6e38\u620f\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u535a\u5f08\u6e38\u620f \u2014\u2014 \u5927\u90e8\u5206\u7684\u516c\u5e73\u7ec4\u5408\u6e38\u620f\u90fd\u53ef\u4ee5\u8f6c\u6362\u4e3a\u6709\u5411\u56fe\u6e38\u620f</li> <li>\u5728\u4e00\u4e2a\u6709\u5411\u65e0\u73af\u56fe\u4e2d, \u53ea\u6709\u4e00\u4e2a\u8d77\u70b9, \u4e0a\u9762\u6709\u4e00\u4e2a\u68cb\u5b50, \u4e24\u4e2a\u73a9\u5bb6\u8f6e\u6d41\u6cbf\u7740\u6709\u5411\u8fb9\u63a8\u52a8\u68cb\u5b50, \u4e0d\u80fd\u8d70\u7684\u73a9\u5bb6\u5224\u8d1f</li> </ul> \\[ \\begin {cases} G = \\text {mex}({G (y_1), G (y_2), \\dots, G (y_k)}) \\\\ \\text {\u603b Grundy \u6570} = G_1 \\oplus G_2 \\oplus \\cdots \\oplus G_n \\\\ \\text {\u5f53\u4e14\u4ec5\u5f53} \\bigoplus_{i=1}^n G_i \\neq 0 \\text {\u65f6\u5148\u624b\u5fc5\u80dc} \\end {cases} \\] <p>\u5176\u4e2d:</p> <ul> <li>$mex(S) $ \u8868\u793a\u96c6\u5408 ( S ) \u4e2d\u672a\u51fa\u73b0\u7684\u6700\u5c0f\u975e\u8d1f\u6574\u6570</li> <li>\\(\\oplus\\) \u8868\u793a\u5f02\u6216\u64cd\u4f5c (Nim \u548c)</li> <li>\\(G_i\\) \u8868\u793a\u7b2c i \u4e2a\u5b50\u6e38\u620f\u7684 Grundy \u6570</li> <li>\\(y_1, y_2, \\dots, y_k\\) \u662f\u5f53\u524d\u72b6\u6001\u7684\u6240\u6709\u53ef\u80fd\u540e\u7ee7\u72b6\u6001</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_31","title":"\u53cd\u5e38\u6e38\u620f","text":"<ul> <li>\u5176\u80dc\u8005\u4e3a\u7b2c\u4e00\u4e2a\u65e0\u6cd5\u884c\u52a8\u7684\u73a9\u5bb6, \u5982\u5c3c\u59c6\u535a\u5f08</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_32","title":"\u6570\u636e\u7ed3\u6784","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_33","title":"\u94fe\u8868","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_34","title":"\u5224\u65ad\u5faa\u73af","text":"<ul> <li>\u5feb\u6162\u6307\u9488</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#-","title":"- \u5224\u65ad\u94fe\u8868\u4ea4\u70b9","text":"<ul> <li>\u53cc\u6307\u9488\u8d70\u5b8c\u540e\u4ea4\u6362\u5230\u53e6\u4e00\u4e2a\u94fe\u8868\u7684\u5934\u8282\u70b9, \u5c31\u80fd\u540c\u65f6\u5230\u8fbe\u4ea4\u70b9</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_35","title":"\u5806","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#n","title":"\u975e\u5e38\u591a\u7684\u6570\u627e\u524d n \u5927\u7684\u6570","text":"<ul> <li>\u7ef4\u62a4\u6700\u5c0f\u5806, \u653e\u524d n \u5927\u7684\u6570</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_36","title":"\u56fe","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_37","title":"\u6c83\u820d\u5c14\u7b97\u6cd5","text":"<ul> <li>\u8ba1\u7b97\u4f20\u9012\u95ed\u5305, \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^2)\\)</li> </ul> <pre><code>int warshall(int a[][N]) {\n  int i, j, k;\n  for (i = 0; i &lt; N; i++) {\n    for (j = 0; j &lt; N; j++) {\n      if (a[j][i]) {\n        for (k = 0; k &lt; N; k++) {\n          a[j][k] = a[j][k] | a[i][k];\n        }\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_38","title":"\u4e8c\u53c9\u6811","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#o1","title":"\\(O(1)\\) \u7a7a\u95f4\u904d\u5386\u4e8c\u53c9\u6811","text":"<ul> <li>morris \u7b97\u6cd5, \u5229\u7528\u53f6\u5b50\u7684\u5b69\u5b50\u7a7a\u95f4\u653e\u53e6\u4e00\u534a\u5b50\u6811</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_39","title":"\u5b57\u7b26\u4e32","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#manacher","title":"Manacher \u7b97\u6cd5\u8ba1\u7b97\u56de\u6587\u5b50\u4e32\u7684\u6700\u5927\u957f\u5ea6","text":"<ul> <li>\u5229\u7528\u56de\u6587\u4e2d\u5fc3\u5bf9\u79f0\u7684\u7279\u70b9\u8df3\u8fc7\u4e2d\u5fc3\u62d3\u5c55\u7684\u5927\u90e8\u5206\u8ba1\u7b97, \\(O(n)\\) \u65f6\u95f4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_40","title":"\u5224\u65ad\u5b50\u4e32\u662f\u5426\u5b58\u5728","text":"<ul> <li>\u9884\u5904\u7406\u5bf9\u4e8e\u6bcf\u4e2a\u5b57\u7b26, \u4e0b\u4e00\u4e2a\u5b57\u7b26 c \u51fa\u73b0\u7684\u4f4d\u7f6e</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_41","title":"\u7279\u6b8a\u7528\u9014","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_42","title":"\u5e38\u6570\u65f6\u95f4\u5185\u68c0\u7d22\u5230\u6700\u5c0f\u5143\u7d20\u7684\u6808","text":"<ul> <li>\u7ef4\u62a4\u4e24\u4e2a\u6808, \u4e00\u4e2a\u6808\u7ef4\u62a4\u6700\u5c0f\u503c, \u4e00\u4e2a\u6808\u6b63\u5e38</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#o1_1","title":"\\(O(1)\\) \u65f6\u95f4\u968f\u673a\u7ebf\u6027\u8868\u5143\u7d20","text":"<ul> <li>\u7ebf\u6027\u8868 + \u54c8\u5e0c\u8868</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_43","title":"\u5143\u7d20\u4e00\u4e00\u5bf9\u5e94","text":"<ul> <li>\u54c8\u5e0c\u53cc\u5c04</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_44","title":"\u5176\u5b83","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_45","title":"\u6469\u5c14\u6295\u7968","text":"<ul> <li>\u968f\u4fbf\u6293\u4e00\u4e2a\u6570\u548c\u4e0d\u540c\u7684\u6570\u5bf9\u5bf9\u78b0, \u76f8\u540c\u7684\u6570\u7d2f\u52a0</li> <li>\u6211\u7684\u6734\u7d20\u7406\u89e3\u5c31\u662f\u96c6\u5408\u5f53\u4e2d\u4e00\u534a\u4ee5\u4e0a\u7684\u6570\u90fd\u662f\u540c\u4e00\u4e2a, \u5bf9\u5bf9\u78b0\u7684\u6700\u574f\u60c5\u51b5\u5c31\u662f\u5b8c\u5168\u662f\u8be5\u6570\u4e0e\u5176\u4ed6\u6570\u5bf9\u78b0, \u8fd8\u4f1a\u5269\u4e0b\u8be5\u6570 \u5176\u4ed6\u60c5\u51b5\u66f4\u662f</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#deferred-acceptance-algorithm","title":"\u5ef6\u8fdf\u63a5\u53d7\u7b97\u6cd5 (Deferred Acceptance Algorithm)","text":"<ul> <li> <p>\u4e5f\u79f0\u4e3a Gale-Shapley \u7b97\u6cd5, \u65f6\u95f4\u590d\u6742\u5ea6 \\(O(n^2)\\)</p> </li> <li> <p>\u5c06\u6240\u6709\u4eba\u6807\u8bb0\u4e3a \"free\"  1</p> <ul> <li>\u6bcf\u4e2a free \u7684\u6c42\u5a5a\u8005\u6309\u7167\u81ea\u5df1\u7684\u504f\u597d\u5217\u8868, \u5411\u81ea\u5df1\u6700\u504f\u597d\u7684\u88ab\u6c42\u5a5a\u8005\u63d0\u51fa\u6c42\u5a5a</li> <li>\u6bcf\u4e2a\u88ab\u6c42\u5a5a\u8005\u6536\u5230\u6c42\u5a5a\u8bf7\u6c42\u540e\u5982\u679c\u88ab\u6c42\u5a5a\u8005\u66f4\u559c\u6b22\u65b0\u6c42\u5a5a\u8005, \u5219\u63a5\u53d7</li> <li>\u88ab\u62d2\u7edd\u7684\u6c42\u5a5a\u8005\u4ece\u81ea\u5df1\u7684\u504f\u597d\u5217\u8868\u4e2d\u79fb\u9664\u88ab\u62d2\u7edd\u7684\u88ab\u6c42\u5a5a\u8005, \u5e76\u7ee7\u7eed\u5411\u4e0b\u4e00\u4e2a\u504f\u597d\u7684\u88ab\u6c42\u5a5a\u8005\u6c42\u5a5a</li> <li>\u76f4\u5230\u6240\u6709\u6c42\u5a5a\u8005\u90fd\u5339\u914d\u6210\u529f\u6216\u65e0\u6cd5\u7ee7\u7eed\u5339\u914d</li> <li>\u7a33\u5b9a\u7684\u5339\u914d: \u4f7f\u5f97\u4e0d\u5b58\u5728\u4efb\u4f55\u4e00\u5bf9\u53c2\u4e0e\u8005\u613f\u610f\u79bb\u5f00\u5f53\u524d\u7684\u5339\u914d\u5bf9\u8c61\u800c\u9009\u62e9\u5f7c\u6b64</li> <li>\u5339\u914d\u7ed3\u679c\u662f\u6c42\u5a5a\u8005\u53ef\u80fd\u83b7\u5f97\u7684\u6700\u4f18\u7ed3\u679c, \u662f\u88ab\u6c42\u5a5a\u8005\u53ef\u80fd\u83b7\u5f97\u7684\u6700\u5dee\u7ed3\u679c (\u5728\u6240\u6709\u7a33\u5b9a\u5339\u914d\u4e2d)</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_46","title":"\u9a8c\u8bc1\u56de\u6587\u6574\u6570","text":"<ul> <li>\u9010\u6b65\u53cd\u8f6c\u6574\u6570, \u76f4\u5230\u53cd\u8f6c\u6570\u4e0d\u5927\u4e8e\u5269\u4f59\u6570, \u7b49\u4e8e\u56de\u6587, \u5c0f\u4e8e\u4e0d\u56de</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_47","title":"\u8ba1\u7b97\u5f53\u5929\u662f\u661f\u671f\u51e0","text":"<ul> <li>\u6709\u5f88\u591a\u516c\u5f0f\u4e0d\u4ecb\u7ecd</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_48","title":"\u4e2d\u7f00\u8f6c\u540e\u7f00","text":"<ul> <li>\u53cc\u6808\u904d\u5386, \u6570\u8f93\u51fa, \u5de6\u62ec\u53f7 (\u6700\u4f4e\u4f18\u5148\u7ea7) \u5165\u6808, \u53f3\u62ec\u53f7\u51fa\u6808 (\u76f4\u5230\u4e0a\u4e00\u4e2a\u5de6\u62ec\u53f7\u51fa\u6808), \u64cd\u4f5c\u7b26\u5148\u51fa\u6808 (\u76f4\u5230\u6808\u9876\u4f18\u5148\u7ea7\u4f4e\u4e8e\u8be5\u64cd\u4f5c\u7b26) \u518d\u5165\u6808, \u904d\u5386\u7ed3\u675f\u540e\u5168\u51fa\u6808</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%A1%A5%E5%85%85/#_49","title":"\u52fe\u957f\u516c\u5f0f","text":"<ul> <li>\u5c06 <code>1~n</code> \u586b\u5165\u4e00\u4e2a\u6768\u8868 (\u9700\u6ee1\u8db3\u6bcf\u884c\u4ece\u5de6\u5230\u53f3, \u6bcf\u5217\u4ece\u4e0b\u5230\u4e0a\u90fd\u662f\u9012\u589e\u7684)</li> <li>\u5b9a\u4e49\u52fe\u957f \\(hook (v) = \u65b9\u683c\u53f3\u8fb9\u7684\u683c\u6570 + \u4e0a\u9762\u683c\u6570 + 1\\)</li> <li>\u586b\u5165\u7684\u65b9\u6848\u6570 \\(dim = \\frac n {\\prod_{i=1}^{\u6240\u6709\u683c\u5b50} hook (v)}\\)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/","title":"\u7b97\u6cd5\u8bbe\u8ba1\u4e0e\u5206\u6790","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/#_2","title":"\u53c2\u8003\u8d44\u6599","text":"<ul> <li>\u5317\u5927\u7b97\u6cd5\u8bbe\u8ba1\u4e0e\u5206\u6790 - \u7406\u8bba\u90e8\u5206\u624e\u5b9e - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/#_3","title":"\u57fa\u672c\u6982\u5ff5","text":"<ul> <li>\u65f6\u7a7a\u590d\u6742\u5ea6\u53ca\u5176\u8868\u793a</li> <li>\u590d\u6742\u5ea6\u8ba1\u7b97 \u5982\u5e8f\u5217\u6c42\u548c, \u653e\u7f29, \u79ef\u5206, \u9012\u63a8\u5206\u6790 (\u8fed\u4ee3 / \u5dee\u6d88 / \u9012\u5f52\u6811)</li> <li>\u7ec4\u5408\u4f18\u5316\u95ee\u9898, \u53ef\u884c\u89e3\u6ee1\u8db3\u7ea6\u675f\u6761\u4ef6, \u5176\u4e2d\u4f7f\u76ee\u6807\u51fd\u6570\u6700\u5927 / \u6700\u5c0f\u7684\u89e3\u4e3a\u6700\u4f18\u89e3</li> <li>\u4e3b\u5b9a\u7406</li> </ul> <p>\u5f62\u5982</p> \\[ T (n) = aT\\left (\\frac {n}{b}\\right) + f (n) \\] <p>\u5176\u4e2d</p> <ul> <li><code>a \u2265 1</code> (\u5b50\u95ee\u9898\u6570\u91cf)</li> <li><code>b &gt; 1</code> (\u95ee\u9898\u5206\u5272\u6bd4\u4f8b)</li> <li><code>f(n)</code> \u662f\u975e\u9012\u5f52\u90e8\u5206\u7684\u590d\u6742\u5ea6</li> </ul> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a</p> \\[ T(n) = \\begin{cases} \\Theta(n^{\\log_b a}) &amp; \\text{if } f(n) = O(n^{\\log_b a - \\epsilon}), \\epsilon &gt; 0 \\\\ \\Theta(f(n) \\log n) &amp; \\text{if } f(n) = \\Theta(n^{\\log_b a} \\log^k n), k \u2265 0 \\\\ \\Theta(f(n)) &amp; \\text{if } f(n) = \\Omega(n^{\\log_b a + \\epsilon}), \\epsilon &gt; 0 \\text{ \u4e14 } af\\left(\\frac{n}{b}\\right) \u2264 cf(n) \\end{cases} \\]"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/#_4","title":"\u5206\u6cbb","text":"<ul> <li>\u5b50\u95ee\u9898\u4e0e\u539f\u95ee\u9898\u6027\u8d28\u76f8\u540c</li> <li>\u5b50\u95ee\u9898\u72ec\u7acb</li> <li>\u6700\u5c0f\u5b50\u95ee\u9898\u76f4\u63a5\u53ef\u89e3</li> <li>\u5206\u89e3 -&gt; \u9012\u5f52 / \u8fed\u4ee3\u6c42\u89e3 -&gt; \u5b50\u95ee\u9898\u7efc\u5408</li> <li>\u5b50\u95ee\u9898\u95f4\u5b58\u5728\u8054\u7cfb -&gt; \u51cf\u5c11\u91cd\u590d\u8ba1\u7b97\u4f18\u5316 (\u5b50\u95ee\u9898\u8fd8\u662f\u53ef\u72ec\u7acb\u8ba1\u7b97\u7684!!!)</li> <li>\u9884\u5904\u7406\u4f18\u5316</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/#_5","title":"\u52a8\u6001\u89c4\u5212","text":"<ul> <li>\\(f (a_1, a_n)\\) \u6700\u4f18\u65f6\u8981\u6c42 \\(f(a_x, a_y), 1 \\leq x \\leq y \\leq n\\) \u6700\u4f18</li> <li>\u6c42 \\(f(n)\\) -&gt; \u5212\u5206 f \u4e2d\u7684\u5b50\u95ee\u9898 -&gt; \u6c42\u9012\u63a8\u65b9\u7a0b</li> <li>\u6eda\u52a8\u6570\u7ec4 / \u72b6\u6001\u538b\u7f29\u4f18\u5316\u7a7a\u95f4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/#_6","title":"\u8d2a\u5fc3","text":"<ul> <li>\u6bcf\u4e00\u6b65\u90fd\u9009\u6700\u4f18\u89e3</li> <li>\u5c40\u90e8\u6700\u4f18\u89e3 -&gt; \u5168\u5c40\u6700\u4f18\u89e3</li> <li>\u6570\u5b66\u5f52\u7eb3\u8bc1\u660e / \u4ea4\u6362\u8bba\u8bc1 (\u8bc1\u660e\u4efb\u610f\u6700\u4f18\u89e3\u90fd\u53ef\u4ee5\u4e0d\u6539\u53d8\u6700\u4f18\u89e3\u7684\u6027\u8d28\u65f6\u8f6c\u6362\u4e3a\u8d2a\u5fc3\u7684\u89e3)</li> <li>\u8d2a\u5fc3\u4e0d\u9002\u7528\u65f6\u8003\u8651\u9650\u5236\u53c2\u6570\u8303\u56f4\u6216\u8005\u8ba1\u7b97\u8bef\u5dee</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/#_7","title":"\u56de\u6eaf","text":"<ul> <li>\u89e3\u4e3a\u5411\u91cf, \u641c\u7d22\u7a7a\u95f4\u4e3a\u6811, \u8df3\u8dc3\u641c\u7d22</li> <li>\u6df1\u5ea6\u4f18\u5148\u641c\u7d22 / \u5e7f\u5ea6\u4f18\u5148\u641c\u7d22</li> <li>\u6ee1\u8db3\u6761\u4ef6\u65f6\u6269\u5927\u89e3\u7a7a\u95f4, \u4e0d\u6ee1\u8db3\u65f6\u56de\u6eaf</li> <li>\u526a\u679d\u4f18\u5316 (\u62df\u5408\u76ee\u6807\u51fd\u6570\u7684\u754c)</li> <li>\u542f\u53d1\u5f0f\u4f18\u5316 (\u6839\u636e\u73b0\u6709\u89e3\u542f\u53d1), \u6392\u5e8f\u4f18\u5316 (\u9884\u5904\u7406) \u90fd\u662f\u4e3a\u4e86\u5148\u8bbf\u95ee\u66f4\u53ef\u80fd\u7684\u5206\u652f</li> <li>\u8bb0\u5fc6\u5316\u4f18\u5316</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/#_8","title":"\u7ebf\u6027\u89c4\u5212","text":""},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%88%86%E6%9E%90/#p-np","title":"P \u4e0e NP","text":"<ul> <li>P \u95ee\u9898: \u53ef\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89e3\u51b3\u7684\u95ee\u9898</li> <li>NP \u95ee\u9898: \u53ef\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u9a8c\u8bc1, \u4f46\u4e0d\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u6c42\u89e3\u7684\u95ee\u9898</li> <li>NP \u5b8c\u5168\u95ee\u9898: NP \u95ee\u9898\u4e2d\u6700\u96be\u7684\u95ee\u9898, \u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u95ee\u9898\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u5b8c\u6210, \u90a3\u4e48\u6240\u6709 NP \u95ee\u9898\u90fd\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u5b8c\u6210</li> <li>Cook-Levin \u5b9a\u7406: NP \u5b8c\u5168\u95ee\u9898\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89c4\u7ea6\u5230\u53ef\u6ee1\u8db3\u6027\u95ee\u9898</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/","title":"\u6c47\u7f16\u57fa\u7840","text":"<ul> <li>\u738b\u723d\u6c47\u7f16\u8bed\u8a00 - \u633a\u597d, \u7cbe\u7b80\u91cd\u8981 - 4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#_2","title":"\u73af\u5883\u914d\u7f6e","text":"<ul> <li>\u4f7f\u7528 VSCode+masm+dosbox</li> <li>\u4e8b\u5b9e\u4e0a masm+dosbox \u4e0b\u8f7d\u4e0b\u6765\u5c31\u53ef\u4ee5\u5728\u5927\u90e8\u5206 C/C++IDE \u4e0b\u4f7f\u7528\u6c47\u7f16, \u5982 VS2022, \u4f46\u662f\u5728 VSCode \u53ef\u4ee5\u5c06 masm \u96c6\u6210\u4e3a\u4e00\u4e2a\u63d2\u4ef6</li> <li>\u5b89\u88c5 MASM/TASM \u63d2\u4ef6\u540e, \u975e Win \u7cfb\u7edf\u9700\u4e0b\u8f7d dosbox, \u4e4b\u540e\u5c31\u53ef\u4ee5\u4e00\u952e\u7f16\u8bd1\u8fd0\u884c, \u5e76\u652f\u6301\u8c03\u7528 Debug</li> <li>\u5b66\u4e60 8086 \u7684\u4e00\u4e2a\u91cd\u8981\u76ee\u7684\u8bf4\u5230\u5e95\u662f\u5c06 c/c++/rust \u4e4b\u7c7b\u7684\u7f16\u8bd1\u578b\u8bed\u8a00, \u5c24\u5176\u662f \"\u7cfb\u7edf\u7ea7\u8bed\u8a00\" \u7684\u4ee3\u7801\u8f6c\u6362\u4e3a\u6c47\u7f16\u4ee5\u66f4\u597d\u7684\u4e86\u89e3\u8bed\u8a00\u5e95\u5c42<ul> <li>\u56e0\u6b64\u4f7f\u7528 Compiler Explorer \u5728\u7ebf\u7f51\u7ad9\u5c06\u5404\u79cd\u8bed\u8a00\u8f6c\u6362\u4e3a\u5404\u79cd\u6c47\u7f16</li> </ul> </li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#_3","title":"\u57fa\u7840\u77e5\u8bc6","text":"<ul> <li>\u6c47\u7f16\u8bed\u8a00\u6709\u4e09\u7c7b\u6307\u4ee4:<ul> <li>\u6c47\u7f16\u6307\u4ee4, \u5bf9\u5e94\u673a\u5668\u7801</li> <li>\u4f2a\u6307\u4ee4, \u7f16\u8bd1\u5668\u6267\u884c, \u4e0d\u5bf9\u5e94\u673a\u5668\u7801</li> <li>\u5176\u4ed6\u7b26\u53f7, \u5982 +/- \u7b49, \u6709\u7f16\u8bd1\u5668\u8bc6\u522b, \u4e0d\u5bf9\u5e94\u673a\u5668\u7801</li> </ul> </li> <li>cpu \u901a\u8fc7\u603b\u7ebf\u4f20\u9012\u5730\u5740\u4fe1\u606f, \u63a7\u5236\u4fe1\u606f (\u8bfb\u5199, \u5668\u4ef6), \u6570\u636e\u4fe1\u606f</li> <li>\u8fd9\u4e09\u79cd\u603b\u7ebf\u7684\u5bbd\u5ea6\u51b3\u5b9a cpu \u5355\u6b21\u4f20\u9012\u4fe1\u606f\u7684\u91cf</li> <li>\u5b58\u50a8\u5668\u5206 RAM (\u968f\u673a\u5b58\u50a8\u5668) \u548c ROM (\u53ea\u8bfb\u5b58\u50a8\u5668)</li> <li>CPU \u5728\u64cd\u4f5c\u5b83\u4eec\u7684\u65f6\u5019\u5c06\u5176\u603b\u7684\u770b\u4f5c\u4e00\u4e2a\u5185\u5b58\u5730\u5740\u7a7a\u95f4</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#_4","title":"\u5bc4\u5b58\u5668","text":"<ul> <li>CPU \u4e2d\u6709\u8fd0\u7b97\u5668, \u63a7\u5236\u5668, \u5bc4\u5b58\u5668, \u5185\u90e8\u603b\u7ebf</li> </ul> <pre><code>reg \u6307\u4ee3\u5bc4\u5b58\u5668, n \u6307\u4ee3\u6570\u503c\n\nmov reg, reg/n ; \u76f8\u5f53\u4e8e reg=reg/n \u79f0\u4e3a\u4f20\u9001\u6307\u4ee4\nadd reg, reg/n ; \u76f8\u5f53\u4e8e reg+=reg/n\n\n\u4e24\u4e2a\u90e8\u5206\u7684\u4f4d\u6570\u5fc5\u987b\u4e00\u81f4, \u8d85\u8fc7 CPU \u4f4d\u6570\u5c06\u88ab\u820d\u53bb\n</code></pre> <ul> <li>8086 \u4f9d\u8d56\u6bb5\u5730\u5740\u4e0e\u504f\u79fb\u5730\u5740\u5b9e\u73b0 20 \u4f4d\u5bfb\u5740\u80fd\u529b</li> <li>CS \u5bc4\u5b58\u5668: \u4ee3\u7801\u6bb5\u5bc4\u5b58\u5668, \u5b58\u653e\u4ee3\u7801\u6bb5\u7684\u6bb5\u5730\u5740;IP \u5bc4\u5b58\u5668: \u6307\u4ee4\u6307\u9488\u5bc4\u5b58\u5668, \u5b58\u653e\u5f53\u524d\u6307\u4ee4\u7684\u504f\u79fb\u5730\u5740, CS:IP \u6307\u5411\u7684\u5730\u5740\u5373\u5f53\u524d\u6307\u4ee4\u7684\u5730\u5740</li> <li>CPU \u4ec5\u5c06 CS:IP \u6307\u5411\u7684\u5730\u5740\u7684\u5185\u5bb9\u770b\u4f5c\u6307\u4ee4, \u6267\u884c\u8fc7\u540e, IP \u81ea\u52a8\u52a0\u6307\u4ee4\u7684\u957f\u5ea6, CPU \u8fd0\u4f5c\u4f0a\u59cb, CS:IP \u6307\u5411\u7684\u5730\u5740\u4e3a FFFF0h</li> </ul> <pre><code>jmp n1:n2 ; \u76f8\u5f53\u4e8e CS=n1, IP=n2\njmp reg ; \u76f8\u5f53\u4e8e IP=reg\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#_5","title":"\u5bc4\u5b58\u5668 (\u5185\u5b58\u8bbf\u95ee)","text":"<pre><code>mov reg, [n] ; \u76f8\u5f53\u4e8e reg=DS:[n] \nmov [n], reg ; \u76f8\u5f53\u4e8e DS:[n]=reg\nmov ds, reg ; \u76f8\u5f53\u4e8e DS=reg\n; \u4ee5\u6b64\u7c7b\u63a8, DS, \u901a\u7528\u5bc4\u5b58\u5668, \u5185\u5b58\u5355\u5143, \u4e09\u8005\u53ef\u4e92\u76f8 mov\n; \u4f46\u662f\u4e0d\u53ef\u5c06\u6570\u503c\u76f4\u63a5\u9001\u5165 DS\n\n; sub \u51cf\u6cd5\u4e0e add \u6307\u4ee4\u7c7b\u4f3c\n; \u8981\u6c42\u5de6\u662f\u5b58\u50a8\u5668/\u5bc4\u5b58\u5668, \u53f3\u662f\u5b58\u50a8\u5668/\u5bc4\u5b58\u5668\u6216\u6570\u503c, \u4f46\u4e0d\u53ef\u662f\u6bb5\u5bc4\u5b58\u5668\n</code></pre> <ul> <li>DS \u5b58\u50a8\u6570\u636e\u6bb5\u7684\u6bb5\u5730\u5740</li> </ul> <pre><code>push reg ; \u76f8\u5f53\u4e8e SP-=2, SS:SP=reg\npop reg ; \u76f8\u5f53\u4e8e reg=SS:SP, SP+=2\n; \u8fd9\u89e3\u91ca\u4e86\u5806\u6808\u5411\u4e0b\u751f\u957f\n</code></pre> <ul> <li>SS \u5b58\u50a8\u5806\u6808\u6bb5\u7684\u6bb5\u5730\u5740 (mov \u65f6\u540c DS), SP \u5b58\u50a8\u504f\u79fb\u91cf</li> <li>\u6ca1\u4eba\u5e2e\u4f60\u9632\u6b62\u5806\u6808\u8d85\u754c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#_6","title":"\u7b2c\u4e00\u4e2a\u7a0b\u5e8f","text":"<pre><code>assume cs:name ; \u4f7f cs \u5b58\u50a8 name \u6bb5\u5730\u5740\nname segment ; \u6bb5\u5f00\u59cb\n...\nname ends ; \u6bb5\u7ed3\u675f\nend ; \u7f16\u8bd1\u7ed3\u675f\n</code></pre> <ul> <li>\u67d0\u4e2a command \u5c06 cpu \u7684\u63a7\u5236\u6743\u4ea4\u7ed9\u7a0b\u5e8f\u540e, \u8fd0\u884c\u7ed3\u675f\u5fc5\u987b\u8fd4\u56de, \u5229\u7528 mov \u4e0e int \u5b9e\u73b0, \u540e\u6587\u8be6\u53d9</li> <li>\u7a0b\u5e8f\u52a0\u8f7d\u540e ds = \u7a0b\u5e8f\u4f4d\u7f6e, \u524d 256 \u5b57\u8282\u662f PSP (\u7a0b\u5e8f\u6bb5\u524d\u7f00 \u8fdb\u884c DOS \u4e0e\u7a0b\u5e8f\u901a\u4fe1)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#bx-loop","title":"<code>[BX]</code> \u548c <code>loop</code> \u6307\u4ee4","text":"<pre><code>; [bx] \u5c31\u662f\u5c06 bx \u7684\u503c\u4f5c\u4e3a\u504f\u79fb\u503c\n\ninc reg ; \u76f8\u5f53\u4e8e reg++\n\nname:.... ; \u8fd9\u91cc\u5df2\u7ecf\u6267\u884c\u4e00\u6b21\u4e86\nloop name ; \u76f8\u5f53\u4e8e if(--cx) goto name, \u6ce8\u610f\u8fd9\u91cc\u8df3\u56de\u53bb\u4e86 cx \u51cf\u4e00\u6b21\n; s \u7f16\u8bd1\u540e\u56de\u53d8\u6210\u6807\u8bb0\u6307\u4ee4\u7684\u5730\u5740\n</code></pre> <ul> <li>\u6c47\u7f16\u6e90\u7a0b\u5e8f\u4e2d\u5b57\u9762\u91cf\u4e0d\u80fd\u4ee5\u5b57\u6bcd\u5f00\u5934, 16 \u8fdb\u5236\u662f 0aaaah \u7684\u5f62\u5f0f</li> <li>\u7f16\u8bd1\u5668\u8ba4\u4e3a <code>[n]</code> \u7b49\u6548 n, <code>ds:[n]</code> \u624d\u6b63\u786e, \u8fd9\u5c31\u662f\u6bb5\u524d\u7f00</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#_7","title":"\u5305\u542b\u591a\u4e2a\u6bb5\u7684\u7a0b\u5e8f","text":"<pre><code>dw 0aaaah, 09999h....\nname:\nend name; end \u6307\u793a CS:IP \u7684\u503c\n; \u5b9a\u4e49\u5b57\u578b\u6570\u636e, \u7269\u7406\u4f4d\u7f6e\u8003\u8651\u5728\u4ee3\u7801\u6bb5\u4e2d\u7684\u76f8\u5bf9\u4f4d\u7f6e, \u6211\u4eec\u5f80\u5f80\u9009\u62e9\u5f00\u5934\n</code></pre> <ul> <li>\u4ee3\u7801\u6bb5\u5f00\u5934\u5b58\u50a8\u5728\u53ef\u6267\u884c\u6587\u4ef6\u7684\u63cf\u8ff0\u4fe1\u606f\u5f53\u4e2d</li> <li>\u5b9a\u4e49\u6bb5\u5c31\u6b63\u5e38\u5b9a\u4e49\u5c31\u884c, \u5b8c\u5168\u662f\u6211\u4eec\u81ea\u5df1\u5b89\u6392, \u771f\u81ea\u7531, \u771f\u4ed6\u5988\u7684\u723d</li> <li>\u5b9a\u4e49\u7684\u6bb5\u540d\u5728\u7a0b\u5e8f\u5f53\u4e2d\u5f15\u7528\u4f1a\u88ab\u8ba4\u4e3a\u662f\u6bb5\u7684\u5730\u5740</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#_8","title":"\u66f4\u7075\u6d3b\u7684\u5b9a\u4f4d\u5185\u5b58\u5730\u5740\u7684\u65b9\u6cd5","text":"<pre><code>and reg, n; \u6309\u4f4d\u4e0e\nor reg, n; \u6309\u4f4d\u6216\n\ndb 'aaaa'\ndb 61h, 61h, 61h, 61h\n; db \u5b9a\u4e49\u5b57\u8282\u578b\u6570\u636e\n\n; [bx+n] \u5185\u5b58\u5355\u5143\u7684\u65b0\u8868\u793a\u65b9\u5f0f, \u4e5f\u53ef\u4ee5\u5199\u6210 n[bx]\n</code></pre> <ul> <li>ASCII \u503c \u5927\u5c0f\u5199\u5b57\u6bcd\u7684\u533a\u522b\u662f\u4e8c\u8fdb\u5236\u7b2c\u4e94\u4f4d\u4e3a 0/1</li> <li>\u5bc4\u5b58\u5668 si, di \u5f80\u5f80\u4f5c\u4e3a\u504f\u79fb\u91cf</li> <li>\u5f80\u5f80\u5728\u5185\u5b58\u5f53\u4e2d\u4f7f\u7528\u6808\u6bb5\u6682\u65f6\u4fdd\u5b58\u5bc4\u5b58\u5668\u7684\u503c</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#_9","title":"\u6570\u636e\u5904\u7406\u7684\u4e24\u4e2a\u57fa\u672c\u95ee\u9898","text":"<pre><code>[command] word/byte ptr [bx], ... ; word/byte ptr \u6307\u5b9a\u5185\u5b58\u5355\u5143\u957f\u5ea6 (\u6570\u636e\u7c7b\u578b) \n\n; [bx+n+si]-&gt;[bx].n[si]\n\ndiv reg/\u5185\u5b58\u5355\u5143 ; \u8fd9\u662f\u9664\u6570, \u88ab\u9664\u6570\u7684\u4f4d\u6570\u662f\u5176\u4e24\u500d, \u5728 reg \u5b58\u524d 16 \u4f4d, dx \u4e0d\u5b58 / \u540e 16 \u4f4d, \u7ed3\u679c\u4e0e\u9664\u6570\u4f4d\u6570\u4e00\u81f4, al/reg \u4e3a\u5546, ah \u6216 dx \u4e3a\u4f59\u6570\n\ndd \u503c, ... ; \u5b9a\u4e49\u53cc\u5b57\u578b\u6570\u636e\n\n\ndb/dw/dd n dup (1, 2, 3, ) ; \u5b9a\u4e49 n \u4e2a\u91cd\u590d 123-&gt;1, 2, 3, 1, 2, 3, 1, 2, 3\n</code></pre> <ul> <li>\u53ea\u6709 bx, bp, si, di \u56db\u4e2a\u5bc4\u5b58\u5668\u53ef\u4ee5\u505a\u504f\u79fb\u91cf, \u4e14 bx, bp \u6216\u8005 si, di \u4e92\u4e0d\u80fd\u76f8\u52a0, bp \u7684\u9ed8\u8ba4\u6bb5\u5730\u5740\u662f ss</li> <li>\u6570\u636e\u8bfb\u53d6\u7684\u4f4d\u7f6e\u53ea\u80fd\u662f\u5185\u5b58, \u5bc4\u5b58\u5668\u6216\u8005\u7aef\u53e3 (\u540e\u8be6\u53d9)</li> <li>\u6307\u4ee4\u4e2d\u7684\u6570\u636e\u53eb\u7acb\u5373\u6570</li> <li>\u6709\u4e9b\u6307\u4ee4\u9ed8\u8ba4\u957f\u5ea6, \u5982 push, pop</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#_10","title":"\u8f6c\u79fb\u6307\u4ee4\u7684\u539f\u7406","text":"<pre><code>command reg, offset name ; \u53d6\u5f97 name \u7684\u504f\u79fb\u5730\u5740 (IP)\n\nnop ; \u7a7a\u6307\u4ee4\n\njmp short name ; \u77ed\u8f6c\u79fb \u4f9d\u8d56\u5728 IP \u4e0a\u52a0\u51cf (\u8865\u7801\u8868\u793a)\u6765\u5b9e\u73b0\njmp near name ; \u8fd1\u8f6c\u79fb \u540c\u7406 \u4e0a\u9762 8 \u4f4d, \u8fd9\u4e2a 16 \u4f4d\n\njmp far ptr name ;\u8fdc\u8f6c\u79fb \u5728\u673a\u5668\u7801\u4e2d\u662f IPCS \u7684\u987a\u5e8f, \u4f4e\u5730\u5740-&gt;\u9ad8\u5730\u5740\n\njmp reg ; \u524d\u5df2\u53d9\n\njmp word ptr 16 \u4f4d\u5185\u5b58 ; IP=\njmp dword ptr 32 \u4f4d\u5185\u5b58 ; \u6309 IPCS \u8d4b\u503c\n\njcxz name ; \u76f8\u5f53\u4e8e if(!cx) jmp short name\n; \u524d\u9762\u7684 loop \u5b9e\u9645\u4e0a\u4e5f\u662f\u77ed\u8f6c\u79fb\n\ndec reg ; reg--\n</code></pre> <ul> <li>\u6539\u53d8 CS:IP (\u6bb5\u95f4\u8f6c\u79fb)/IP (\u6bb5\u5185\u8f6c\u79fb) \u7684\u6307\u4ee4\u53eb\u8f6c\u79fb\u6307\u4ee4</li> <li>\u6bb5\u5185\u8f6c\u79fb\u5206\u77ed\u8f6c\u79fb / \u8fd1\u8f6c\u79fb, <code>-128 ~~ 127 / -32768 ~~ 32767</code></li> <li>\u4ea6\u5206\u65e0\u6761\u4ef6\u8f6c\u79fb / \u6761\u4ef6\u8f6c\u79fb / \u5faa\u73af / \u8fc7\u7a0b / \u4e2d\u65ad</li> <li>\u6bb5\u5185\u4f4d\u79fb\u7684\u610f\u4e49\u662f\u4e0d\u4f1a\u5bf9\u7a0b\u5e8f\u6bb5\u5728\u5185\u5b58\u4e2d\u7684\u504f\u79fb\u5730\u5740\u6709\u4e25\u683c\u7684\u9650\u5236</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#call-ret","title":"CALL \u548c RET \u6307\u4ee4","text":"<pre><code>ret ; pop IP\nretf ; pop IP, pop CS\n\ncall name ; push IP, jmp near name\ncall far ptr name ; push CS, push IP, jmp far ptr name\n\ncall reg ; push IP, IP = reg(jmp reg)\n\ncall word ptr \u5185\u5b58 ; push IP, IP = 16 \u4f4d\u5185\u5b58 (jmp word ptr \u5185\u5b58)\ncall dword ptr \u5185\u5b58 ; push IP, I P= \u5185\u5b58 (jmp dword ptr \u5185\u5b58)\n\nmul reg/\u5185\u5b58 ;8 \u4f4d\u53e6\u4e00\u4e2a\u4e58\u6570\u5728 al, 16 \u4f4d\u5219\u5728 ax, \u7ed3\u679c\u5728 ax \u6216 ax+dx\n</code></pre> <ul> <li>\u9ad8\u7ea7\u8bed\u8a00\u7684\u51fd\u6570\u663e\u7136\u5c31\u662f\u8fd9\u4e48\u5b9e\u73b0\u7684, \u5728\u6c47\u7f16\u5f53\u4e2d\u53c2\u6570\u8f83\u5c11\u60c5\u51b5\u4e0b, \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5bc4\u5b58\u5668\u4f20\u9012\u53c2\u6570\u4e0e\u7ed3\u679c, \u4f46\u662f\u6211\u4eec\u90fd\u77e5\u9053\u7528\u6808\u6765\u4f20\u9012\u662f\u4e0d\u9519\u7684\u9009\u62e9</li> <li>\u663e\u7136\u5728\u5b50\u7a0b\u5e8f\u7684\u5f00\u59cb\u7684\u65f6\u5019, \u6211\u4eec\u8981\u628a\u5b83\u4f7f\u7528\u7684\u5bc4\u5b58\u5668\u7684\u503c\u4fdd\u5b58\u8d77\u6765, \u4ee5\u9632\u6b62\u5f71\u54cd\u4e3b\u7a0b\u5e8f\u7684\u8fd0\u884c, \u8fd9\u4e2a\u8fc7\u7a0b\u5f80\u5f80\u4e5f\u662f\u7528\u6808\u5b9e\u73b0\u7684</li> <li>\u5c0f\u5fc3\u9664\u6cd5\u7684\u6ea2\u51fa, \u5f53\u7136\u6211\u4eec\u53ef\u4ee5\u7528\u6570\u5b66\u65b9\u6cd5\u5c06\u4e00\u4e2a\u4f1a\u6ea2\u51fa\u7684\u9664\u6cd5\u62c6\u5206\u6210\u591a\u4e2a\u4e0d\u4f1a\u6ea2\u51fa\u7684\u9664\u6cd5</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#_11","title":"\u6807\u5fd7\u5bc4\u5b58\u5668","text":"<ul> <li>\u6807\u5fd7\u5bc4\u5b58\u5668\u6709\u4e0b\u4e09\u79cd\u4f5c\u7528: \u5b58\u50a8\u76f8\u5173\u6307\u4ee4\u7684\u6267\u884c\u7ed3\u679c; \u4e3a CPU \u6267\u884c\u76f8\u5173\u6307\u4ee4\u63d0\u4f9b\u884c\u4e3a\u4f9d\u636e; \u7528\u6765\u63a7\u5236 CPU \u7684\u76f8\u5173\u5de5\u4f5c\u65b9\u5f0f, \u5b83\u4eec\u5b58\u50a8\u7684\u53eb PSW (\u7a0b\u5e8f\u72b6\u6001\u5b57) \u4f8b\u5982 flag</li> <li>flag \u5bc4\u5b58\u5668\u662f\u6309\u4f4d\u8d77\u4f5c\u7528\u7684, 16 \u4f4d\u4f7f\u7528\u4e86 0 2 4 6 7 8 9 10 11</li> <li>\u7b2c\u516d\u4f4d, ZF, \u8bb0\u5f55\u76f8\u5173\u6307\u4ee4\u6267\u884c\u540e\u7684\u7ed3\u679c\u662f\u5426\u4e3a 0, \u5982\u679c\u4e3a 0, \u90a3\u4e48\u5b83\u4e3a 1, \u53cd\u4e4b\u4e3a 0, \u76f8\u5173\u6307\u4ee4\u5f80\u5f80\u662f\u8fd0\u7b97\u6307\u4ee4, \u5305\u62ec\u903b\u8f91\u4e0e\u7b97\u672f (\u4e0b\u540c)</li> <li>\u7b2c\u4e8c\u4f4d, PF, \u8bb0\u5f55\u76f8\u5173\u6307\u4ee4\u6267\u884c\u540e\u7684\u7ed3\u679c\u6c49\u660e\u91cd\u91cf\u662f\u5426\u4e3a\u5076\u6570, \u5982\u679c\u4e3a\u5076\u6570, \u90a3\u4e48\u4e3a 1, \u53cd\u4e4b\u4e3a 0</li> <li>\u7b2c\u4e03\u4f4d, SF, \u8bb0\u5f55\u76f8\u5173\u6307\u4ee4\u6267\u884c\u540e\u7684\u7ed3\u679c\u662f\u5426\u4e3a\u8d1f\u6570, \u5982\u679c\u4e3a\u8d1f\u6570, \u90a3\u4e48\u4e3a 1, \u53cd\u4e4b\u4e3a 0 (\u5176\u5b9e\u5c31\u662f\u7ed3\u679c\u6700\u9ad8\u4f4d)</li> <li>\u7b2c\u96f6\u4f4d, CF, \u8bb0\u5f55\u8fdb\u4f4d\u4e0e\u501f\u4f4d, \u5bf9\u65e0\u7b26\u53f7\u8fd0\u7b97\u6709\u6548</li> <li>\u7b2c\u5341\u4e00\u4f4d, OF, \u8bb0\u5f55\u76f8\u5173\u6307\u4ee4\u6267\u884c\u540e\u7684\u7ed3\u679c\u662f\u5426\u6ea2\u51fa, \u5bf9\u6709\u7b26\u53f7\u8fd0\u7b97\u6709\u6548</li> <li>inc, loop, \u4e0d\u4f1a\u5f71\u54cd CF, \u5c06\u5b83\u4eec\u66ff\u6362\u6210 add \u8981\u5c0f\u5fc3</li> </ul> <pre><code>adc reg, reg ; \u76f8\u5f53\u4e8e add reg, reg \u7684\u7ed3\u679c\u52a0 CF\n; \u5b9e\u73b0\u4e24\u6b65\u76f8\u52a0, \u4f7f\u7528\u4e00\u4e2a Add \u8fdb\u884c\u4f4e\u4f4d\u52a0\u6cd5, \u518d\u4e00\u4e2a ADC \u8fdb\u884c\u9ad8\u4f4d\u52a0\u6cd5\n; \u6700\u540e\u5b58\u5728\u4e24\u4e2a 16 \u4f4d\u5f53\u4e2d\u5c31\u80fd\u5b9e\u73b0 32 \u4f4d\u7684\u52a0\u6cd5\u8fd0\u7b97\n\nsbb reg ; \u540c\u7406\n\ncmp reg, reg ; \u76f8\u5f53\u4e8e sub reg, reg \u4f46\u4e0d\u5b58\u5728 reg \u4e2d, \u5f71\u54cd\u4ee5\u4e0a 5 \u4e2a\u4f4d\n; \u53ef\u4ee5\u53cd\u6620\u4e24\u4e2a\u5bc4\u5b58\u5668\u4e2d\u503c\u7684\u5927\u5c0f\u5173\u7cfb\n\n; \u6839\u636e\u6bd4\u8f83\u7ed3\u679c\u8fdb\u884c\u8f6c\u79fb\u662f\u5e38\u89c1\u7684, \u6839\u636e\u65e0\u7b26\u53f7\u6570\u548c\u6709\u7b26\u53f7\u6570\u68c0\u67e5\u4e0d\u540c\u7684\u4f4d\n\n; \u65e0\u7b26\u53f7\u6570\u68c0\u67e5 zf, cf\n; je      zf          \u7b49\u4e8e\n; jne     !zf         \u4e0d\u7b49\u4e8e\n; jb      cf          \u5c0f\u4e8e\n; jnb     !cf         \u5c0f\u4e8e\u7b49\u4e8e\n; ja      !cf&amp;&amp;!zf    \u5927\u4e8e\n; jna     cf||zf      \u5927\u4e8e\u7b49\u4e8e\n\n; \u6709\u7b26\u53f7\u6570\u68c0\u67e5 sf, of, zf \u4e0d\u4e3e\u4f8b\n\nmovsb ; mov es:[di], byte ptr ds:[si], if(!df) si++, di++, else si--, di--\nmovsw ; mov es:[di], word ptr ds:[si], if(!df) si+=2, di+=2, else si-=2, di-=2\n\nrep movsb ; name:movsb, loop name\n\ncld/std ; df=0/df=1\n\npushf/popf ; push/pop flag\n</code></pre> <ul> <li>\u7b2c\u5341\u4f4d, DF, \u63a7\u5236\u76f8\u5173\u64cd\u4f5c\u540e si/di \u7684\u589e\u51cf</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#_12","title":"\u5185\u4e2d\u65ad","text":"<ul> <li>\u4e2d\u65ad\u662f CPU \u7684\u4e00\u79cd\u5f02\u5e38\u5904\u7406\u673a\u5236, \u653e\u4e0b\u624b\u4e2d\u7684\u4e8b\u76f4\u63a5\u53bb\u5904\u7406\u4e2d\u65ad\u4fe1\u606f</li> <li>\u4e2d\u65ad\u7c7b\u578b\u7801\u8bb0\u5f55\u4e86\u4e2d\u65ad\u4fe1\u606f\u6765\u6e90, \u5927\u6982\u6709\u56db\u79cd\u5185\u4e2d\u65ad, 0 \u9664\u6cd5\u9519\u8bef, 1 \u5355\u6b65\u6267\u884c, 4 \u6ea2\u51fa, n int n</li> <li>\u4e2d\u65ad\u4fe1\u606f\u7684\u5904\u7406\u662f\u9700\u8981\u7f16\u5199\u7684\u7a0b\u5e8f, \u4f46\u662f CPU \u600e\u4e48\u627e\u5230\u8fd9\u4e2a\u7a0b\u5e8f\u7684\u4f4d\u7f6e\u5462?</li> <li>\u5185\u5b58\u5f53\u4e2d\u6709\u4e00\u4e2a\u4e2d\u65ad\u5411\u91cf\u8868\u5bf9\u5e94 256 \u4e2a\u4e2d\u65ad\u6e90\u6bcf\u4e00\u4e2a\u7684\u5904\u7406\u7a0b\u5e8f\u5165\u53e3</li> <li>8086 \u7684\u5728\u5185\u5b58\u4ece\u96f6\u5f00\u59cb\u7684\u4f4d\u7f6e, \u6bcf\u4e2a\u8868\u9879\u663e\u7136\u5360\u4e24\u4e2a\u5b57\u8282 (CS:IP)</li> <li>\u83b7\u53d6\u7c7b\u578b\u7801\u4e4b\u540e, \u8981\u628a\u6807\u5fd7\u5bc4\u5b58\u5668\u548c\u5f53\u524d\u6307\u4ee4\u4f4d\u7f6e\u538b\u5165\u6808\u4e2d, \u4ee5\u4fbf\u5728\u4e2d\u65ad\u5904\u7406\u7ed3\u675f\u540e\u6062\u590d\u73b0\u573a, \u538b\u5165\u4e4b\u540e\u8981\u5c06 flag \u7b2c\u516b\u4f4d\u548c\u7b2c\u4e5d\u4f4d\u5206\u522b\u662f TF \u548c IF \u7acb\u523b\u7f6e 0, \u9632\u6b62\u5185\u4e2d\u65ad\u8fc7\u7a0b\u88ab\u5e72\u6270</li> <li><code>iret; \u4ee5\u4e0a\u8fc7\u7a0b\u7684\u9006\u8fc7\u7a0b\u4e5f\u5c31\u662f\u4e2d\u65ad\u7a0b\u5e8f\u7684\u8fd4\u56de\u6307\u4ee4</code></li> <li>\u738b\u723d\u770b\u90a3\u4e2a\u5411\u91cf\u8868\u91cc\u6709\u7a7a\u4f4d\u5c31\u628a\u81ea\u5df1\u5199\u7684\u90a3\u4e2a\u4e2d\u65ad\u7a0b\u5e8f\u5f80\u90a3\u91cc\u585e\u592a\u90aa\u6076\u4e86\u554a, \u6ce8\u610f\u8fd9\u79cd\u7a0b\u5e8f\u4e0d\u4ec5\u8981\u4fdd\u62a4\u4ee3\u7801\u6bb5, \u56fa\u5b9a\u7684\u6570\u636e\u6bb5\u4e5f\u5f97\u4fdd\u62a4\u54e6</li> <li>\u7f16\u8bd1\u5668\u53ef\u4ee5\u8ba1\u7b97\u5e38\u6570\u7684\u52a0\u51cf\u4e58\u9664, \u5f53\u7136\u4e5f\u5305\u62ec <code>offset name</code></li> <li>\u6267\u884c\u5b8c\u4e8b\u4e00\u6761\u6307\u4ee4\u4e00\u65e6 TF \u4e3a 0, \u5c31\u662f\u5355\u6b65\u6267\u884c\u4e2d\u65ad</li> <li>CPU \u6709\u7684\u65f6\u5019\u4e5f\u4e0d\u54cd\u5e94\u4e2d\u65ad, \u5c31\u6bd4\u5982\u8bf4\u6211\u8981\u8bbe\u7f6e\u4e00\u4e0b SSSP \u7684\u4f4d\u7f6e, \u4e0d\u7ba1\u4f60\u662f\u5565\u90fd\u7b49\u7b49\u6211, \u56e0\u4e3a\u4f60\u8fd8\u4e0d\u77e5\u9053\u90a3\u4e2a\u73b0\u573a\u4fe1\u606f\u5f80\u54ea\u4fdd\u5b58\u5462</li> <li>\u4e0d\u540c\u7684 CPU, \u8fd9\u4e2a\u73b0\u573a\u4fe1\u606f\u7684\u4f4d\u7f6e\u4e0d\u4e00\u6837, \u6709\u7684\u662f\u4e13\u95e8\u6709\u7cfb\u7edf\u5806\u6808, \u4f46\u662f 8086 \u5c31\u662f\u538b\u5165\u76ee\u524d\u7a0b\u5e8f\u5806\u6808, \u6240\u4ee5\u7a0b\u5e8f\u5fc5\u987b\u8981\u6709\u5806\u6808, \u4e14\u4e2d\u65ad\u5fc5\u987b\u53d1\u751f\u5728\u8bbe\u7f6e\u5b8c sssp \u4e4b\u540e</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#int","title":"int \u6307\u4ee4","text":"<pre><code>int n; \u4e2d\u65ad\u8fc7\u7a0b\u540c\u4e0a, \u5c31\u662f\u8c03\u7528 N \u53f7\u4e2d\u65ad\u7a0b\u5e8f\n\nmov ax, 4c00h ; \u8bbe\u7f6e\u8fd4\u56de\u7801\nint 21h\n; 4c \u8868\u793a\u8fd9\u662f\u8be5\u4e2d\u65ad\u7684\u7a0b\u5e8f\u8fd4\u56de\u529f\u80fd, \u7136\u540e\u96f6\u662f\u8fd4\u56de\u503c\n</code></pre> <ul> <li>BIOS \u548c DOS \u63d0\u4f9b\u4e00\u4e9b\u4e2d\u65ad\u4f8b\u7a0b, \u5f00\u673a\u540e, CPU \u521d\u59cb\u5316\u6267\u884c BIOS \u4e2d\u7684\u786c\u4ef6\u68c0\u6d4b\u548c\u521d\u59cb\u5316\u7a0b\u5e8f\u5c06\u5165\u53e3\u5730\u5740\u767b\u8bb0\u5728\u4e2d\u65ad\u5411\u91cf\u8868, \u56e0\u4e3a\u7a0b\u5e8f\u90fd\u56fa\u5316\u5728 ROM \u5f53\u4e2d, \u7136\u540e\u8c03\u7528 int 19H \u8fdb\u884c\u64cd\u4f5c\u7cfb\u7edf\u7684\u5f15\u5bfc, \u64cd\u4f5c\u7cfb\u7edf\u4e5f\u4f1a\u653e\u4e00\u4e9b\u4e2d\u65ad\u4f8b\u7a0b</li> <li>\u5176\u63d0\u4f9b\u7684\u7a0b\u5e8f\u5f80\u5f80\u8fd8\u5305\u542b\u591a\u4e2a\u5b50\u7a0b\u5e8f, \u6839\u636e\u4e2d\u65ad\u65f6\u5019\u5bc4\u5b58\u5668\u4e2d\u4fdd\u5b58\u7684\u503c\u800c\u51b3\u5b9a\u8fd0\u884c\u54ea\u4e9b\u7a0b\u5e8f</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#_13","title":"\u7aef\u53e3","text":"<ul> <li>\u5728\u4e0a\u9762\u6211\u4eec\u4f7f\u7528 CPU \u8bfb\u5199\u5bc4\u5b58\u5668\u4e0e\u5185\u5b58\u5355\u5143, \u4f46\u4e8b\u5b9e\u4e0a CPU \u8fd8\u53ef\u4ee5\u8bfb\u5199\u5404\u79cd\u975e\u5b58\u50a8\u5668\u7684\u82af\u7247\u4e2d\u7684\u5bc4\u5b58\u5668, \u7aef\u53e3</li> <li>\u7aef\u5934\u5730\u5740\u548c\u5185\u5b58\u5730\u5740\u4e00\u6837, \u901a\u8fc7\u5730\u5740\u603b\u7ebf\u6765\u4f20\u9001, 8086 \u7aef\u53e3\u5730\u5740\u8303\u56f4\u662f 0\uff5e65535</li> </ul> <pre><code>in ax/al, nh ;\u4ece n \u53f7\u7aef\u53e3\u8bfb, \u4e25\u683c 8 \u4f4d\u7528 AL, 16 \u4f4d AX\nout nh, ax, al ;\u540c\u7406\n\n; cmos arm \u6709\u4e24\u4e2a\u7aef\u53e3, 70h/71h\n; \u5206\u522b\u5b58\u653e\u5730\u5740\u548c\u6570\u636e\n; \u4f7f\u7528\u65b9\u6cd5\u5c31\u662f\u5c06\u8981\u8bfb\u53d6\u7684\u5730\u5740, \u653e\u5165 70H , \u7136\u540e\u4ece 71H \u4e2d\u8bfb\u51fa\n\nshl ax, 1; \u76f8\u5f53\u4e8e `ax&lt;&lt;1`, \u79fb\u9664\u7684\u6700\u540e\u4f4d\u4f1a\u5199\u5165 CF, \u6700\u4f4e\u4f4d\u8865 0\nshr ax, 1; \u76f8\u5f53\u4e8e `ax&gt;&gt;1`, \u79fb\u9664\u7684\u6700\u540e\u4f4d\u4f1a\u5199\u5165 CF, \u6700\u9ad8\u4f4d\u8865 0\n</code></pre>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#_14","title":"\u5916\u4e2d\u65ad","text":"<ul> <li>\u76f8\u5173\u82af\u7247\u5c06\u5916\u8bbe\u7684\u8f93\u5165\u5bf9\u5e94\u7684\u4e2d\u65ad\u4fe1\u606f\u53d1\u7ed9 CPU, CPU \u6267\u884c\u5b8c\u5f53\u524d\u6307\u4ee4\u540e\u68c0\u6d4b\u5230\u4e2d\u65ad\u4fe1\u606f, \u5f15\u53d1\u4e2d\u65ad\u8fc7\u7a0b</li> <li>\u53ef\u5c4f\u853d\u4e2d\u65ad\u662f CPU \u53ef\u4ee5\u4e0d\u54cd\u5e94\u7684\u5916\u4e2d\u65ad, \u5982\u679c IF \u7b49\u4e8e 1, CPU \u6267\u884c\u5b8c\u5f53\u524d\u6307\u4ee4\u4e4b\u540e\u54cd\u5e94\u4e2d\u65ad, \u5426\u5219\u4e0d\u54cd\u5e94, \u8fd9\u5c31\u662f\u4e2d\u65ad\u8fc7\u7a0b\u4e2d\u5c06 IF \u7f6e\u96f6\u7684\u539f\u56e0</li> </ul> <pre><code>sti ; \u5f00\u4e2d\u65ad\ncli ; \u5173\u4e2d\u65ad\n; \u5f53\u7136\u4f60\u4e5f\u53ef\u4ee5\u5199\u4e00\u4e2a\u54cd\u5e94\u4e2d\u65ad\u7684\u4e2d\u65ad\u4f8b\u7a0b\n</code></pre> <ul> <li>\u53cd\u4e4b\u5219\u662f\u4e0d\u53ef\u5c4f\u853d\u4e2d\u65ad, 8086 \u4e0d\u53ef\u5c4f\u853d\u4e2d\u65ad\u7684\u7c7b\u578b\u7801\u56fa\u5b9a\u4e3a 2 (\u7a00\u5c11)</li> <li>8086cpu \u952e\u76d8\u7684\u8f93\u5165, \u6309\u4e0b\u952e\u548c\u677e\u5f00\u952e, \u4ea7\u751f\u4e00\u4e2a\u626b\u63cf\u7801\u5230\u8fbe\u76f8\u5e94\u7aef\u53e3, \u5f15\u53d1\u4e2d\u65ad\u4ea7\u751f\u76f8\u5bf9\u5e94\u7684\u5b57\u7b26\u7801\u6216\u8005\u662f\u72b6\u6001\u5b57\u8282 (\u5bf9\u5e94\u63a7\u5236\u952e\u548c\u5207\u6362\u952e\u5199\u5165\u5185\u5b58\u5f53\u4e2d\u76f8\u5e94\u5355\u5143) \u5b57\u7b26\u7801\u4f1a\u9001\u5165 BIOS \u952e\u76d8\u7f13\u51b2\u533a, \u5728\u7f13\u51b2\u533a\u5f53\u4e2d\u53ef\u4ee5\u5b58\u50a8 15 \u4e2a\u952e\u76d8\u8f93\u5165, \u4e00\u4e2a\u952e\u76d8\u8f93\u5165\u7528\u4e00\u4e2a\u5b57\u5b58\u653e, \u9ad8\u4f4d\u5b57\u8282\u5b58\u653e\u626b\u63cf\u7801, \u4f4e\u4f4d\u5b57\u8282\u5b58\u653e\u5b57\u7b26\u7801</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#_15","title":"\u76f4\u63a5\u5b9a\u5740\u8868","text":"<pre><code>seg name ; name \u7684\u6bb5\u5730\u5740\n\na db 1, 2, 3, 4, 5, 6, 7, 8, 9, 10\nb dw 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ; \u8fd9\u4e48\u58f0\u660e\u5185\u5b58\u7a7a\u95f4, \u6807\u53f7\u5c06\u5e26\u6709\u957f\u5ea6\u4fe1\u606f\n; b-&gt;word prt CS:8\n</code></pre> <ul> <li>\u6240\u8c13\u76f4\u63a5\u5b9a\u503c\u8868, \u5c31\u662f\u5c06\u6570\u636e\u5bf9\u5e94\u5730\u5740\u7684\u504f\u79fb (\u54c8\u5e0c)</li> </ul>"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E4%B8%8E%E7%BB%84%E6%88%90/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80%28%E7%8E%8B%E7%88%BD%29/#bios","title":"\u4f7f\u7528 BIOS \u8fdb\u884c\u952e\u76d8\u8f93\u5165\u548c\u78c1\u76d8\u8bfb\u5199","text":"<p>\u4ecb\u7ecd\u4e86\u8fd9\u4e24\u4e2a\u529f\u80fd\u7684\u5b9e\u73b0</p>"}]}